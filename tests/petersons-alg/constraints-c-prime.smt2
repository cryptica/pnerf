(declare-fun p1 () Int)
(assert (>= p1 0))
(declare-fun p2 () Int)
(assert (>= p2 0))
(declare-fun p3 () Int)
(assert (>= p3 0))
(declare-fun p4 () Int)
(assert (>= p4 0))
(declare-fun q1 () Int)
(assert (>= q1 0))
(declare-fun q2 () Int)
(assert (>= q2 0))
(declare-fun q3 () Int)
(assert (>= q3 0))
(declare-fun q4 () Int)
(assert (>= q4 0))
(declare-fun hold1 () Int)
(assert (>= hold1 0))
(declare-fun hold2 () Int)
(assert (>= hold2 0))
(declare-fun m1t () Int)
(assert (>= m1t 0))
(declare-fun m1f () Int)
(assert (>= m1f 0))
(declare-fun m2t () Int)
(assert (>= m2t 0))
(declare-fun m2f () Int)
(assert (>= m2f 0))
(declare-fun t_1 () Int)
(assert (>= t_1 0))
(assert (>= 0 (+ 0 (- m1f) m1t (- p1) p2)))
(assert (>= 0 (+ 0 hold1 (- hold2) (- p2) p3)))
(assert (>= 0 (+ 0 (- p2) p3)))
(assert (>= 0 (+ 0 (- p3) (+ p4 t_1))))
(assert (>= 0 (+ 0 (- p3) (+ p4 t_1))))
(assert (>= 0 (+ 0 m1f (- m1t) p1 (- (+ p4 t_1)))))
(assert (>= 0 (+ 0 (- m2f) m2t (- q1) q2)))
(assert (>= 0 (+ 0 (- q2) q3)))
(assert (>= 0 (+ 0 (- hold1) hold2 (- q2) q3)))
(assert (>= 0 (+ 0 (- q3) (+ q4 t_1))))
(assert (>= 0 (+ 0 (- q3) (+ q4 t_1))))
(assert (>= 0 (+ 0 m2f (- m2t) q1 (- (+ q4 t_1)))))
(assert (< (+ 0 hold1 m1f m2f p1 q1) (* 2 t_1)))
(check-sat)
(get-model)
