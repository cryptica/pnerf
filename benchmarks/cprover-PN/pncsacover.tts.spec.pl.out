place(s0).
place(s1).
place(s2).
place(s3).
place(s4).
place(s5).
place(s6).
place(s7).
place(s8).
place(s9).
place(s10).
place(s11).
place(s12).
place(s13).
place(s14).
place(s15).
place(s16).
place(s17).
place(s18).
place(s19).
place(s20).
place(s21).
place(s22).
place(s23).
place(s24).
place(s25).
place(s26).
place(s27).
place(s28).
place(s29).
place(s30).
place(s31).
place(l0).
place(l1).
place(l2).
place(l3).
place(l4).
place(l5).
place(l6).
place(l7).
place(l8).
place(l9).
place(l10).
place(l11).
place(l12).
place(l13).
place(l14).
place(l15).
place(l16).
place(l17).
place(l18).
place(l19).
place(l20).
place(l21).
place(l22).
place(l23).
place(l24).
place(l25).
place(l26).
place(l27).
place(l28).
place(l29).
place(l30).
place(l31).
transition(t1, [l0, s0], [s1, l3]).
transition(t2, [l0, s1], [s2, l14]).
transition(t3, [l1, s2], [s22, l13]).
transition(t4, [l1, s2], [s30, l14]).
transition(t5, [l2, s2], [s29, l14]).
transition(t6, [l3, s2], [s3, l4]).
transition(t7, [l4, s2], [s4, l5]).
transition(t8, [l4, s2], [s14, l1]).
transition(t9, [l5, s2], [s5, l6]).
transition(t10, [l5, s2], [s13, l1]).
transition(t11, [l6, s2], [s6, l7]).
transition(t12, [l7, s2], [s7, l8]).
transition(t13, [l7, s2], [s10, l9]).
transition(t14, [l8, s2], [s2, l10]).
transition(t15, [l8, s2], [s9, l7]).
transition(t16, [l9, s2], [s2, l10]).
transition(t17, [l9, s2], [s12, l1]).
transition(t18, [l10, s2], [s8, l2]).
transition(t19, [l10, s2], [s11, l1]).
transition(t20, [l11, s2], [s2, l3]).
transition(t21, [l11, s2], [s15, l3]).
transition(t22, [l11, s2], [s16, l3]).
transition(t23, [l11, s2], [s17, l1]).
transition(t24, [l14, s2], [s18, l15]).
transition(t25, [l15, s2], [s19, l16]).
transition(t26, [l15, s2], [s28, l12]).
transition(t27, [l16, s2], [s20, l17]).
transition(t28, [l16, s2], [s25, l12]).
transition(t29, [l17, s2], [s2, l20]).
transition(t30, [l17, s2], [s21, l18]).
transition(t31, [l17, s2], [s24, l20]).
transition(t32, [l18, s2], [s2, l19]).
transition(t33, [l18, s2], [s23, l17]).
transition(t34, [l19, s2], [s2, l20]).
transition(t35, [l19, s2], [s27, l12]).
transition(t36, [l20, s2], [s26, l12]).
transition(t37, [l21, s2], [s2, l14]).
transition(t38, [l21, s2], [s31, l12]).
transition(t39, [l0, s3], [s2, l22]).
transition(t40, [l23, s4], [s2, l24]).
transition(t41, [l25, s5], [s2, l26]).
transition(t42, [l28, s6], [s2, l0]).
transition(t43, [l0, s7], [s2, l30]).
transition(t44, [l12, s8], [s2, l3]).
transition(t45, [l31, s9], [s2, l0]).
transition(t46, [l0, s10], [s2, l29]).
transition(t47, [l0, s11], [s2, l11]).
transition(t48, [l27, s12], [s2, l11]).
transition(t49, [l0, s13], [s2, l11]).
transition(t50, [l0, s14], [s2, l11]).
transition(t51, [l13, s15], [s2, l0]).
transition(t52, [l12, s16], [s2, l0]).
transition(t53, [l0, s17], [s2, l11]).
transition(t54, [l22, s18], [s2, l23]).
transition(t55, [l24, s19], [s2, l25]).
transition(t56, [l26, s20], [s2, l28]).
transition(t57, [l30, s21], [s2, l0]).
transition(t58, [l20, s22], [s2, l14]).
transition(t59, [l0, s23], [s2, l31]).
transition(t60, [l29, s24], [s2, l27]).
transition(t61, [l0, s25], [s2, l21]).
transition(t62, [l0, s26], [s2, l21]).
transition(t63, [l0, s27], [s2, l21]).
transition(t64, [l0, s28], [s2, l21]).
transition(t65, [l21, s29], [s2, l0]).
transition(t66, [l21, s30], [s2, l0]).
transition(t67, [l0, s31], [s2, l21]).
init(l0, init1).
cond('(>= init1 1)').
init(s0).
cond('(>= s2 1)').
cond('(>= l13 1)').
cond('(>= l22 1)').
cond('(>= l24 1)').
cond('(>= l29 1)').
cond('(>= l31 1)').
PETRINIZER: The checker for Petri Nets
[pncsacover.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(s1, [t1], [t2]).
place(l4, [t6], [t8,t7]).
place(l5, [t7], [t10,t9]).
place(l6, [t9], [t11]).
place(l8, [t12], [t15,t14]).
place(l7, [t15,t11], [t13,t12]).
place(l9, [t13], [t17,t16]).
place(l2, [t18], [t5]).
place(l10, [t16,t14], [t19,t18]).
place(l1, [t23,t19,t17,t10,t8], [t4,t3]).
place(l15, [t24], [t26,t25]).
place(l16, [t25], [t28,t27]).
place(l18, [t30], [t33,t32]).
place(l17, [t33,t27], [t31,t30,t29]).
place(l19, [t32], [t35,t34]).
place(s3, [t6], [t39]).
place(s4, [t7], [t40]).
place(s5, [t9], [t41]).
place(s6, [t11], [t42]).
place(s7, [t12], [t43]).
place(s8, [t18], [t44]).
place(l3, [t44,t22,t21,t20,t1], [t6]).
place(s9, [t15], [t45]).
place(s10, [t13], [t46]).
place(s11, [t19], [t47]).
place(s12, [t17], [t48]).
place(s13, [t10], [t49]).
place(s14, [t8], [t50]).
place(l13, [t3], [t51]).
place(s15, [t21], [t51]).
place(l12, [t38,t36,t35,t28,t26], [t52,t44]).
place(s16, [t22], [t52]).
place(s17, [t23], [t53]).
place(l11, [t53,t50,t49,t48,t47], [t23,t22,t21,t20]).
place(l22, [t39], [t54]).
place(s18, [t24], [t54]).
place(l23, [t54], [t40]).
place(l24, [t40], [t55]).
place(s19, [t25], [t55]).
place(l25, [t55], [t41]).
place(l26, [t41], [t56]).
place(s20, [t27], [t56]).
place(l28, [t56], [t42]).
place(l30, [t43], [t57]).
place(s21, [t30], [t57]).
place(l20, [t34,t31,t29], [t58,t36]).
place(s22, [t3], [t58]).
place(l14, [t58,t37,t5,t4,t2], [t24]).
place(s23, [t33], [t59]).
place(l31, [t59], [t45]).
place(l29, [t46], [t60]).
place(s24, [t31], [t60]).
place(l27, [t60], [t48]).
place(s25, [t28], [t61]).
place(s26, [t36], [t62]).
place(s27, [t35], [t63]).
place(s28, [t26], [t64]).
place(s29, [t5], [t65]).
place(s30, [t4], [t66]).
place(l0, [t66,t65,t57,t52,t51,t45,t42], [t67,t64,t63,t62,t61,t59,t53,t50,t49,t47,t46,t43,t39,t2,t1]).
place(s31, [t38], [t67]).
place(s2, [t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t37,t34,t32,t29,t20,t16,t14,t2], [t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3]).
place(l21, [t67,t64,t63,t62,t61], [t66,t65,t38,t37]).

transition(t1, [l0,s0], [s1,l3]).
transition(t2, [l0,s1], [s2,l14]).
transition(t3, [l1,s2], [s22,l13]).
transition(t4, [l1,s2], [s30,l14]).
transition(t5, [l2,s2], [s29,l14]).
transition(t6, [l3,s2], [s3,l4]).
transition(t7, [l4,s2], [s4,l5]).
transition(t8, [l4,s2], [s14,l1]).
transition(t9, [l5,s2], [s5,l6]).
transition(t10, [l5,s2], [s13,l1]).
transition(t11, [l6,s2], [s6,l7]).
transition(t12, [l7,s2], [s7,l8]).
transition(t13, [l7,s2], [s10,l9]).
transition(t14, [l8,s2], [s2,l10]).
transition(t15, [l8,s2], [s9,l7]).
transition(t16, [l9,s2], [s2,l10]).
transition(t17, [l9,s2], [s12,l1]).
transition(t18, [l10,s2], [s8,l2]).
transition(t19, [l10,s2], [s11,l1]).
transition(t20, [l11,s2], [s2,l3]).
transition(t21, [l11,s2], [s15,l3]).
transition(t22, [l11,s2], [s16,l3]).
transition(t23, [l11,s2], [s17,l1]).
transition(t24, [l14,s2], [s18,l15]).
transition(t25, [l15,s2], [s19,l16]).
transition(t26, [l15,s2], [s28,l12]).
transition(t27, [l16,s2], [s20,l17]).
transition(t28, [l16,s2], [s25,l12]).
transition(t29, [l17,s2], [s2,l20]).
transition(t30, [l17,s2], [s21,l18]).
transition(t31, [l17,s2], [s24,l20]).
transition(t32, [l18,s2], [s2,l19]).
transition(t33, [l18,s2], [s23,l17]).
transition(t34, [l19,s2], [s2,l20]).
transition(t35, [l19,s2], [s27,l12]).
transition(t36, [l20,s2], [s26,l12]).
transition(t37, [l21,s2], [s2,l14]).
transition(t38, [l21,s2], [s31,l12]).
transition(t39, [l0,s3], [s2,l22]).
transition(t40, [l23,s4], [s2,l24]).
transition(t41, [l25,s5], [s2,l26]).
transition(t42, [l28,s6], [s2,l0]).
transition(t43, [l0,s7], [s2,l30]).
transition(t44, [l12,s8], [s2,l3]).
transition(t45, [l31,s9], [s2,l0]).
transition(t46, [l0,s10], [s2,l29]).
transition(t47, [l0,s11], [s2,l11]).
transition(t48, [l27,s12], [s2,l11]).
transition(t49, [l0,s13], [s2,l11]).
transition(t50, [l0,s14], [s2,l11]).
transition(t51, [l13,s15], [s2,l0]).
transition(t52, [l12,s16], [s2,l0]).
transition(t53, [l0,s17], [s2,l11]).
transition(t54, [l22,s18], [s2,l23]).
transition(t55, [l24,s19], [s2,l25]).
transition(t56, [l26,s20], [s2,l28]).
transition(t57, [l30,s21], [s2,l0]).
transition(t58, [l20,s22], [s2,l14]).
transition(t59, [l0,s23], [s2,l31]).
transition(t60, [l29,s24], [s2,l27]).
transition(t61, [l0,s25], [s2,l21]).
transition(t62, [l0,s26], [s2,l21]).
transition(t63, [l0,s27], [s2,l21]).
transition(t64, [l0,s28], [s2,l21]).
transition(t65, [l21,s29], [s2,l0]).
transition(t66, [l21,s30], [s2,l0]).
transition(t67, [l0,s31], [s2,l21]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s2 1)').
cond('(>= l13 1)').
cond('(>= l22 1)').
cond('(>= l24 1)').
cond('(>= l29 1)').
cond('(>= l31 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s0 () Int)
(declare-fun s1 () Int)
(declare-fun l4 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l8 () Int)
(declare-fun l7 () Int)
(declare-fun l9 () Int)
(declare-fun l2 () Int)
(declare-fun l10 () Int)
(declare-fun l1 () Int)
(declare-fun l15 () Int)
(declare-fun l16 () Int)
(declare-fun l18 () Int)
(declare-fun l17 () Int)
(declare-fun l19 () Int)
(declare-fun s3 () Int)
(declare-fun s4 () Int)
(declare-fun s5 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun s8 () Int)
(declare-fun l3 () Int)
(declare-fun s9 () Int)
(declare-fun s10 () Int)
(declare-fun s11 () Int)
(declare-fun s12 () Int)
(declare-fun s13 () Int)
(declare-fun s14 () Int)
(declare-fun l13 () Int)
(declare-fun s15 () Int)
(declare-fun l12 () Int)
(declare-fun s16 () Int)
(declare-fun s17 () Int)
(declare-fun l11 () Int)
(declare-fun l22 () Int)
(declare-fun s18 () Int)
(declare-fun l23 () Int)
(declare-fun l24 () Int)
(declare-fun s19 () Int)
(declare-fun l25 () Int)
(declare-fun l26 () Int)
(declare-fun s20 () Int)
(declare-fun l28 () Int)
(declare-fun l30 () Int)
(declare-fun s21 () Int)
(declare-fun l20 () Int)
(declare-fun s22 () Int)
(declare-fun l14 () Int)
(declare-fun s23 () Int)
(declare-fun l31 () Int)
(declare-fun l29 () Int)
(declare-fun s24 () Int)
(declare-fun l27 () Int)
(declare-fun s25 () Int)
(declare-fun s26 () Int)
(declare-fun s27 () Int)
(declare-fun s28 () Int)
(declare-fun s29 () Int)
(declare-fun s30 () Int)
(declare-fun l0 () Int)
(declare-fun s31 () Int)
(declare-fun s2 () Int)
(declare-fun l21 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(declare-fun t59 () Int)
(declare-fun t60 () Int)
(declare-fun t61 () Int)
(declare-fun t62 () Int)
(declare-fun t63 () Int)
(declare-fun t64 () Int)
(declare-fun t65 () Int)
(declare-fun t66 () Int)
(declare-fun t67 () Int)
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l8 0))
(assert (>= l7 0))
(assert (>= l9 0))
(assert (>= l2 0))
(assert (>= l10 0))
(assert (>= l1 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l18 0))
(assert (>= l17 0))
(assert (>= l19 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l3 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= l13 0))
(assert (>= s15 0))
(assert (>= l12 0))
(assert (>= s16 0))
(assert (>= s17 0))
(assert (>= l11 0))
(assert (>= l22 0))
(assert (>= s18 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= s19 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= s20 0))
(assert (>= l28 0))
(assert (>= l30 0))
(assert (>= s21 0))
(assert (>= l20 0))
(assert (>= s22 0))
(assert (>= l14 0))
(assert (>= s23 0))
(assert (>= l31 0))
(assert (>= l29 0))
(assert (>= s24 0))
(assert (>= l27 0))
(assert (>= s25 0))
(assert (>= s26 0))
(assert (>= s27 0))
(assert (>= s28 0))
(assert (>= s29 0))
(assert (>= s30 0))
(assert (>= l0 0))
(assert (>= s31 0))
(assert (>= s2 0))
(assert (>= l21 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (>= t59 0))
(assert (>= t60 0))
(assert (>= t61 0))
(assert (>= t62 0))
(assert (>= t63 0))
(assert (>= t64 0))
(assert (>= t65 0))
(assert (>= t66 0))
(assert (>= t67 0))
(assert (= s0 (+ 1 (- t1))))
(assert (= s1 (+ 0 t1 (- t2))))
(assert (= l4 (+ 0 t6 (- t7) (- t8))))
(assert (= l5 (+ 0 t7 (- t10) (- t9))))
(assert (= l6 (+ 0 t9 (- t11))))
(assert (= l8 (+ 0 t12 (- t14) (- t15))))
(assert (= l7 (+ 0 t11 t15 (- t12) (- t13))))
(assert (= l9 (+ 0 t13 (- t16) (- t17))))
(assert (= l2 (+ 0 t18 (- t5))))
(assert (= l10 (+ 0 t14 t16 (- t18) (- t19))))
(assert (= l1 (+ 0 t10 t17 t19 t23 t8 (- t3) (- t4))))
(assert (= l15 (+ 0 t24 (- t25) (- t26))))
(assert (= l16 (+ 0 t25 (- t27) (- t28))))
(assert (= l18 (+ 0 t30 (- t32) (- t33))))
(assert (= l17 (+ 0 t27 t33 (- t29) (- t30) (- t31))))
(assert (= l19 (+ 0 t32 (- t34) (- t35))))
(assert (= s3 (+ 0 t6 (- t39))))
(assert (= s4 (+ 0 t7 (- t40))))
(assert (= s5 (+ 0 t9 (- t41))))
(assert (= s6 (+ 0 t11 (- t42))))
(assert (= s7 (+ 0 t12 (- t43))))
(assert (= s8 (+ 0 t18 (- t44))))
(assert (= l3 (+ 0 t1 t20 t21 t22 t44 (- t6))))
(assert (= s9 (+ 0 t15 (- t45))))
(assert (= s10 (+ 0 t13 (- t46))))
(assert (= s11 (+ 0 t19 (- t47))))
(assert (= s12 (+ 0 t17 (- t48))))
(assert (= s13 (+ 0 t10 (- t49))))
(assert (= s14 (+ 0 t8 (- t50))))
(assert (= l13 (+ 0 t3 (- t51))))
(assert (= s15 (+ 0 t21 (- t51))))
(assert (= l12 (+ 0 t26 t28 t35 t36 t38 (- t44) (- t52))))
(assert (= s16 (+ 0 t22 (- t52))))
(assert (= s17 (+ 0 t23 (- t53))))
(assert (= l11 (+ 0 t47 t48 t49 t50 t53 (- t20) (- t21) (- t22) (- t23))))
(assert (= l22 (+ 0 t39 (- t54))))
(assert (= s18 (+ 0 t24 (- t54))))
(assert (= l23 (+ 0 t54 (- t40))))
(assert (= l24 (+ 0 t40 (- t55))))
(assert (= s19 (+ 0 t25 (- t55))))
(assert (= l25 (+ 0 t55 (- t41))))
(assert (= l26 (+ 0 t41 (- t56))))
(assert (= s20 (+ 0 t27 (- t56))))
(assert (= l28 (+ 0 t56 (- t42))))
(assert (= l30 (+ 0 t43 (- t57))))
(assert (= s21 (+ 0 t30 (- t57))))
(assert (= l20 (+ 0 t29 t31 t34 (- t36) (- t58))))
(assert (= s22 (+ 0 t3 (- t58))))
(assert (= l14 (+ 0 t2 t37 t4 t5 t58 (- t24))))
(assert (= s23 (+ 0 t33 (- t59))))
(assert (= l31 (+ 0 t59 (- t45))))
(assert (= l29 (+ 0 t46 (- t60))))
(assert (= s24 (+ 0 t31 (- t60))))
(assert (= l27 (+ 0 t60 (- t48))))
(assert (= s25 (+ 0 t28 (- t61))))
(assert (= s26 (+ 0 t36 (- t62))))
(assert (= s27 (+ 0 t35 (- t63))))
(assert (= s28 (+ 0 t26 (- t64))))
(assert (= s29 (+ 0 t5 (- t65))))
(assert (= s30 (+ 0 t4 (- t66))))
(assert (= l0 (+ init1 t42 t45 t51 t52 t57 t65 t66 (- t1) (- t2) (- t39) (- t43) (- t46) (- t47) (- t49) (- t50) (- t53) (- t59) (- t61) (- t62) (- t63) (- t64) (- t67))))
(assert (= s31 (+ 0 t38 (- t67))))
(assert (= s2 (+ 0 t2 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 (- t10) (- t11) (- t12) (- t13) (- t15) (- t17) (- t18) (- t19) (- t21) (- t22) (- t23) (- t24) (- t25) (- t26) (- t27) (- t28) (- t3) (- t30) (- t31) (- t33) (- t35) (- t36) (- t38) (- t4) (- t5) (- t6) (- t7) (- t8) (- t9))))
(assert (= l21 (+ 0 t61 t62 t63 t64 t67 (- t37) (- t38) (- t65) (- t66))))
(assert (>= init1 1))
(assert (>= s2 1))
(assert (>= l13 1))
(assert (>= l22 1))
(assert (>= l24 1))
(assert (>= l29 1))
(assert (>= l31 1))
(check-sat)
(get-model)

* Checking SAT(C0)n
sat
(model 
  (define-fun t10 () Int
    1)
  (define-fun t3 () Int
    2)
  (define-fun t5 () Int
    0)
  (define-fun t15 () Int
    0)
  (define-fun t60 () Int
    0)
  (define-fun t66 () Int
    0)
  (define-fun t6 () Int
    4)
  (define-fun t67 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    1)
  (define-fun t7 () Int
    3)
  (define-fun t51 () Int
    1)
  (define-fun t53 () Int
    0)
  (define-fun t62 () Int
    0)
  (define-fun t65 () Int
    0)
  (define-fun t33 () Int
    1)
  (define-fun t40 () Int
    3)
  (define-fun t41 () Int
    2)
  (define-fun t31 () Int
    0)
  (define-fun t2 () Int
    1)
  (define-fun t39 () Int
    4)
  (define-fun t4 () Int
    0)
  (define-fun t46 () Int
    1)
  (define-fun t52 () Int
    0)
  (define-fun t49 () Int
    1)
  (define-fun t8 () Int
    1)
  (define-fun t59 () Int
    1)
  (define-fun t24 () Int
    3)
  (define-fun t54 () Int
    3)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    2)
  (define-fun t55 () Int
    2)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t12 () Int
    1)
  (define-fun t20 () Int
    2)
  (define-fun t21 () Int
    1)
  (define-fun t63 () Int
    0)
  (define-fun t25 () Int
    2)
  (define-fun t17 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun t48 () Int
    0)
  (define-fun init1 () Int
    8)
  (define-fun t1 () Int
    1)
  (define-fun t23 () Int
    0)
  (define-fun t57 () Int
    1)
  (define-fun t56 () Int
    2)
  (define-fun t61 () Int
    0)
  (define-fun t30 () Int
    1)
  (define-fun t43 () Int
    1)
  (define-fun t47 () Int
    1)
  (define-fun t50 () Int
    1)
  (define-fun t32 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun t42 () Int
    2)
  (define-fun t58 () Int
    2)
  (define-fun t19 () Int
    1)
  (define-fun t34 () Int
    0)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    1)
  (define-fun t64 () Int
    0)
  (define-fun t11 () Int
    2)
  (define-fun t27 () Int
    2)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    2)
  (define-fun t28 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun s2 () Int
    1)
  (define-fun s31 () Int
    0)
  (define-fun l0 () Int
    0)
  (define-fun s30 () Int
    0)
  (define-fun s29 () Int
    0)
  (define-fun s28 () Int
    0)
  (define-fun s27 () Int
    0)
  (define-fun s26 () Int
    0)
  (define-fun s25 () Int
    0)
  (define-fun l27 () Int
    0)
  (define-fun s24 () Int
    0)
  (define-fun l29 () Int
    1)
  (define-fun l31 () Int
    1)
  (define-fun s23 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun s22 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun s21 () Int
    0)
  (define-fun l30 () Int
    0)
  (define-fun l28 () Int
    0)
  (define-fun s20 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun s19 () Int
    0)
  (define-fun l24 () Int
    1)
  (define-fun l23 () Int
    0)
  (define-fun s18 () Int
    0)
  (define-fun l22 () Int
    1)
  (define-fun l11 () Int
    0)
  (define-fun s17 () Int
    0)
  (define-fun s16 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun s15 () Int
    0)
  (define-fun l13 () Int
    1)
  (define-fun s14 () Int
    0)
  (define-fun s13 () Int
    0)
  (define-fun s12 () Int
    0)
  (define-fun s11 () Int
    0)
  (define-fun s10 () Int
    0)
  (define-fun s9 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun s8 () Int
    0)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l15 () Int
    1)
  (define-fun l1 () Int
    1)
  (define-fun l10 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l8 () Int
    1)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun s0 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t10, 1).
assignment(t3, 2).
assignment(t5, 0).
assignment(t15, 0).
assignment(t60, 0).
assignment(t66, 0).
assignment(t6, 4).
assignment(t67, 0).
assignment(t14, 0).
assignment(t16, 1).
assignment(t7, 3).
assignment(t51, 1).
assignment(t53, 0).
assignment(t62, 0).
assignment(t65, 0).
assignment(t33, 1).
assignment(t40, 3).
assignment(t41, 2).
assignment(t31, 0).
assignment(t2, 1).
assignment(t39, 4).
assignment(t4, 0).
assignment(t46, 1).
assignment(t52, 0).
assignment(t49, 1).
assignment(t8, 1).
assignment(t59, 1).
assignment(t24, 3).
assignment(t54, 3).
assignment(t37, 0).
assignment(t9, 2).
assignment(t55, 2).
assignment(t18, 0).
assignment(t35, 0).
assignment(t12, 1).
assignment(t20, 2).
assignment(t21, 1).
assignment(t63, 0).
assignment(t25, 2).
assignment(t17, 0).
assignment(t26, 0).
assignment(t44, 0).
assignment(t48, 0).
assignment(init1, 8).
assignment(t1, 1).
assignment(t23, 0).
assignment(t57, 1).
assignment(t56, 2).
assignment(t61, 0).
assignment(t30, 1).
assignment(t43, 1).
assignment(t47, 1).
assignment(t50, 1).
assignment(t32, 0).
assignment(t45, 0).
assignment(t42, 2).
assignment(t58, 2).
assignment(t19, 1).
assignment(t34, 0).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 1).
assignment(t64, 0).
assignment(t11, 2).
assignment(t27, 2).
assignment(t38, 0).
assignment(t29, 2).
assignment(t28, 0).
assignment(l21, 0).
assignment(s2, 1).
assignment(s31, 0).
assignment(l0, 0).
assignment(s30, 0).
assignment(s29, 0).
assignment(s28, 0).
assignment(s27, 0).
assignment(s26, 0).
assignment(s25, 0).
assignment(l27, 0).
assignment(s24, 0).
assignment(l29, 1).
assignment(l31, 1).
assignment(s23, 0).
assignment(l14, 0).
assignment(s22, 0).
assignment(l20, 0).
assignment(s21, 0).
assignment(l30, 0).
assignment(l28, 0).
assignment(s20, 0).
assignment(l26, 0).
assignment(l25, 0).
assignment(s19, 0).
assignment(l24, 1).
assignment(l23, 0).
assignment(s18, 0).
assignment(l22, 1).
assignment(l11, 0).
assignment(s17, 0).
assignment(s16, 0).
assignment(l12, 0).
assignment(s15, 0).
assignment(l13, 1).
assignment(s14, 0).
assignment(s13, 0).
assignment(s12, 0).
assignment(s11, 0).
assignment(s10, 0).
assignment(s9, 0).
assignment(l3, 0).
assignment(s8, 0).
assignment(s7, 0).
assignment(s6, 0).
assignment(s5, 0).
assignment(s4, 0).
assignment(s3, 0).
assignment(l19, 0).
assignment(l17, 0).
assignment(l18, 0).
assignment(l16, 0).
assignment(l15, 1).
assignment(l1, 1).
assignment(l10, 0).
assignment(l2, 0).
assignment(l9, 0).
assignment(l7, 0).
assignment(l8, 1).
assignment(l6, 0).
assignment(l5, 0).
assignment(l4, 0).
assignment(s1, 0).
assignment(s0, 0).
- constraints C_theta...
(declare-fun s0 () Bool)
(declare-fun s1 () Bool)
(declare-fun l4 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l8 () Bool)
(declare-fun l7 () Bool)
(declare-fun l9 () Bool)
(declare-fun l2 () Bool)
(declare-fun l10 () Bool)
(declare-fun l1 () Bool)
(declare-fun l15 () Bool)
(declare-fun l16 () Bool)
(declare-fun l18 () Bool)
(declare-fun l17 () Bool)
(declare-fun l19 () Bool)
(declare-fun s3 () Bool)
(declare-fun s4 () Bool)
(declare-fun s5 () Bool)
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun s8 () Bool)
(declare-fun l3 () Bool)
(declare-fun s9 () Bool)
(declare-fun s10 () Bool)
(declare-fun s11 () Bool)
(declare-fun s12 () Bool)
(declare-fun s13 () Bool)
(declare-fun s14 () Bool)
(declare-fun l13 () Bool)
(declare-fun s15 () Bool)
(declare-fun l12 () Bool)
(declare-fun s16 () Bool)
(declare-fun s17 () Bool)
(declare-fun l11 () Bool)
(declare-fun l22 () Bool)
(declare-fun s18 () Bool)
(declare-fun l23 () Bool)
(declare-fun l24 () Bool)
(declare-fun s19 () Bool)
(declare-fun l25 () Bool)
(declare-fun l26 () Bool)
(declare-fun s20 () Bool)
(declare-fun l28 () Bool)
(declare-fun l30 () Bool)
(declare-fun s21 () Bool)
(declare-fun l20 () Bool)
(declare-fun s22 () Bool)
(declare-fun l14 () Bool)
(declare-fun s23 () Bool)
(declare-fun l31 () Bool)
(declare-fun l29 () Bool)
(declare-fun s24 () Bool)
(declare-fun l27 () Bool)
(declare-fun s25 () Bool)
(declare-fun s26 () Bool)
(declare-fun s27 () Bool)
(declare-fun s28 () Bool)
(declare-fun s29 () Bool)
(declare-fun s30 () Bool)
(declare-fun l0 () Bool)
(declare-fun s31 () Bool)
(declare-fun s2 () Bool)
(declare-fun l21 () Bool)

(assert (implies s0 (or s1 l3)))
(assert (implies s1 (or s2 l14)))
(assert (implies l4 (and (or s14 l1) (or s4 l5))))
(assert (implies l5 (and (or s13 l1) (or s5 l6))))
(assert (implies l6 (or s6 l7)))
(assert (implies l8 (and (or s9 l7) (or s2 l10))))
(assert (implies l7 (and (or s10 l9) (or s7 l8))))
(assert (implies l9 (and (or s12 l1) (or s2 l10))))
(assert (implies l2 (or s29 l14)))
(assert (implies l10 (and (or s11 l1) (or s8 l2))))
(assert (implies l1 (and (or s30 l14) (or s22 l13))))
(assert (implies l15 (and (or s28 l12) (or s19 l16))))
(assert (implies l16 (and (or s25 l12) (or s20 l17))))
(assert (implies l18 (and (or s23 l17) (or s2 l19))))
(assert (implies l17 (and (or s24 l20) (or s21 l18) (or s2 l20))))
(assert (implies l19 (and (or s27 l12) (or s2 l20))))
(assert (implies s3 (or s2 l22)))
(assert (implies s4 (or s2 l24)))
(assert (implies s5 (or s2 l26)))
(assert (implies s6 (or s2 l0)))
(assert (implies s7 (or s2 l30)))
(assert (implies s8 (or s2 l3)))
(assert (implies l3 (or s3 l4)))
(assert (implies s9 (or s2 l0)))
(assert (implies s10 (or s2 l29)))
(assert (implies s11 (or s2 l11)))
(assert (implies s12 (or s2 l11)))
(assert (implies s13 (or s2 l11)))
(assert (implies s14 (or s2 l11)))
(assert (implies l13 (or s2 l0)))
(assert (implies s15 (or s2 l0)))
(assert (implies l12 (and (or s2 l0) (or s2 l3))))
(assert (implies s16 (or s2 l0)))
(assert (implies s17 (or s2 l11)))
(assert (implies l11 (and (or s17 l1) (or s16 l3) (or s15 l3) (or s2 l3))))
(assert (implies l22 (or s2 l23)))
(assert (implies s18 (or s2 l23)))
(assert (implies l23 (or s2 l24)))
(assert (implies l24 (or s2 l25)))
(assert (implies s19 (or s2 l25)))
(assert (implies l25 (or s2 l26)))
(assert (implies l26 (or s2 l28)))
(assert (implies s20 (or s2 l28)))
(assert (implies l28 (or s2 l0)))
(assert (implies l30 (or s2 l0)))
(assert (implies s21 (or s2 l0)))
(assert (implies l20 (and (or s2 l14) (or s26 l12))))
(assert (implies s22 (or s2 l14)))
(assert (implies l14 (or s18 l15)))
(assert (implies s23 (or s2 l31)))
(assert (implies l31 (or s2 l0)))
(assert (implies l29 (or s2 l27)))
(assert (implies s24 (or s2 l27)))
(assert (implies l27 (or s2 l11)))
(assert (implies s25 (or s2 l21)))
(assert (implies s26 (or s2 l21)))
(assert (implies s27 (or s2 l21)))
(assert (implies s28 (or s2 l21)))
(assert (implies s29 (or s2 l0)))
(assert (implies s30 (or s2 l0)))
(assert (implies l0 (and (or s2 l21) (or s2 l21) (or s2 l21) (or s2 l21) (or s2 l21) (or s2 l31) (or s2 l11) (or s2 l11) (or s2 l11) (or s2 l11) (or s2 l29) (or s2 l30) (or s2 l22) (or s2 l14) (or s1 l3))))
(assert (implies s31 (or s2 l21)))
(assert (implies s2 (and (or s31 l12) (or s2 l14) (or s26 l12) (or s27 l12) (or s2 l20) (or s23 l17) (or s2 l19) (or s24 l20) (or s21 l18) (or s2 l20) (or s25 l12) (or s20 l17) (or s28 l12) (or s19 l16) (or s18 l15) (or s17 l1) (or s16 l3) (or s15 l3) (or s2 l3) (or s11 l1) (or s8 l2) (or s12 l1) (or s2 l10) (or s9 l7) (or s2 l10) (or s10 l9) (or s7 l8) (or s6 l7) (or s13 l1) (or s5 l6) (or s14 l1) (or s4 l5) (or s3 l4) (or s29 l14) (or s30 l14) (or s22 l13))))
(assert (implies l21 (and (or s2 l0) (or s2 l0) (or s31 l12) (or s2 l14))))

(assert (or s0 l0))

(assert (not s2))
(assert (not l29))
(assert (not l31))
(assert (not l24))
(assert (not l22))
(assert (not l13))
(assert (not l15))
(assert (not l1))
(assert (not l8))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 144 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

