PETRINIZER: The checker for Petri Nets
[benchmarks/cprover-PN/peterson.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(s1, [t1], [t2]).
place(s2, [t2], [t3]).
place(s3, [t3], [t4]).
place(s4, [t4], [t5]).
place(l2, [t6], [t8,t7]).
place(l3, [t8,t7], [t10,t9]).
place(l4, [t10,t9], [t11]).
place(l1, [t11,t1], [t6]).
place(l9, [t17], [t16]).
place(s6, [t6], [t18]).
place(s7, [t7], [t19]).
place(s8, [t8], [t20]).
place(s9, [t20], [t21]).
place(s10, [t9], [t22]).
place(s11, [t22], [t23]).
place(l10, [t23,t16,t4], [t22,t17]).
place(s12, [t10], [t24]).
place(s13, [t24], [t25]).
place(l6, [t18], [t26]).
place(s14, [t11], [t26]).
place(s15, [t17], [t27]).
place(s16, [t14], [t28]).
place(l12, [t27], [t29,t28]).
place(s17, [t13], [t29]).
place(s18, [t29], [t30]).
place(l7, [t30,t25,t14], [t24,t19,t13]).
place(s19, [t12], [t31]).
place(s20, [t31], [t32]).
place(l5, [t32,t26,t2], [t18,t12]).
place(l13, [t28,t13], [t33,t31]).
place(s21, [t15], [t33]).
place(l0, [t33,t31,t29,t24,t22,t20], [t34,t32,t30,t25,t23,t21,t5,t4,t3,t2,t1]).
place(s22, [t33], [t34]).
place(l8, [t34,t21,t19,t3], [t20,t15,t14]).
place(l14, [t15,t12], [t35]).
place(s23, [t16], [t35]).
place(s5, [t35,t34,t32,t30,t28,t27,t26,t25,t23,t21,t19,t18,t5], [t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6]).
place(l11, [t35,t5], [t27]).

transition(t1, [l0,s0], [s1,l1]).
transition(t2, [l0,s1], [s2,l5]).
transition(t3, [l0,s2], [s3,l8]).
transition(t4, [l0,s3], [s4,l10]).
transition(t5, [l0,s4], [s5,l11]).
transition(t6, [l1,s5], [s6,l2]).
transition(t7, [l2,s5], [s7,l3]).
transition(t8, [l2,s5], [s8,l3]).
transition(t9, [l3,s5], [s10,l4]).
transition(t10, [l3,s5], [s12,l4]).
transition(t11, [l4,s5], [s14,l1]).
transition(t12, [l5,s5], [s19,l14]).
transition(t13, [l7,s5], [s17,l13]).
transition(t14, [l8,s5], [s16,l7]).
transition(t15, [l8,s5], [s21,l14]).
transition(t16, [l9,s5], [s23,l10]).
transition(t17, [l10,s5], [s15,l9]).
transition(t18, [l5,s6], [s5,l6]).
transition(t19, [l7,s7], [s5,l8]).
transition(t20, [l8,s8], [s9,l0]).
transition(t21, [l0,s9], [s5,l8]).
transition(t22, [l10,s10], [s11,l0]).
transition(t23, [l0,s11], [s5,l10]).
transition(t24, [l7,s12], [s13,l0]).
transition(t25, [l0,s13], [s5,l7]).
transition(t26, [l6,s14], [s5,l5]).
transition(t27, [l11,s15], [s5,l12]).
transition(t28, [l12,s16], [s5,l13]).
transition(t29, [l12,s17], [s18,l0]).
transition(t30, [l0,s18], [s5,l7]).
transition(t31, [l13,s19], [s20,l0]).
transition(t32, [l0,s20], [s5,l5]).
transition(t33, [l13,s21], [s22,l0]).
transition(t34, [l0,s22], [s5,l8]).
transition(t35, [l14,s23], [s5,l11]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s5 1)').
cond('(>= l4 1)').
cond('(>= l14 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s0 () Int)
(declare-fun s1 () Int)
(declare-fun s2 () Int)
(declare-fun s3 () Int)
(declare-fun s4 () Int)
(declare-fun l2 () Int)
(declare-fun l3 () Int)
(declare-fun l4 () Int)
(declare-fun l1 () Int)
(declare-fun l9 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun s8 () Int)
(declare-fun s9 () Int)
(declare-fun s10 () Int)
(declare-fun s11 () Int)
(declare-fun l10 () Int)
(declare-fun s12 () Int)
(declare-fun s13 () Int)
(declare-fun l6 () Int)
(declare-fun s14 () Int)
(declare-fun s15 () Int)
(declare-fun s16 () Int)
(declare-fun l12 () Int)
(declare-fun s17 () Int)
(declare-fun s18 () Int)
(declare-fun l7 () Int)
(declare-fun s19 () Int)
(declare-fun s20 () Int)
(declare-fun l5 () Int)
(declare-fun l13 () Int)
(declare-fun s21 () Int)
(declare-fun l0 () Int)
(declare-fun s22 () Int)
(declare-fun l8 () Int)
(declare-fun l14 () Int)
(declare-fun s23 () Int)
(declare-fun s5 () Int)
(declare-fun l11 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l1 0))
(assert (>= l9 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= l10 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= l6 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= l12 0))
(assert (>= s17 0))
(assert (>= s18 0))
(assert (>= l7 0))
(assert (>= s19 0))
(assert (>= s20 0))
(assert (>= l5 0))
(assert (>= l13 0))
(assert (>= s21 0))
(assert (>= l0 0))
(assert (>= s22 0))
(assert (>= l8 0))
(assert (>= l14 0))
(assert (>= s23 0))
(assert (>= s5 0))
(assert (>= l11 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (= s0 (+ 1 (- t1))))
(assert (= s1 (+ 0 t1 (- t2))))
(assert (= s2 (+ 0 t2 (- t3))))
(assert (= s3 (+ 0 t3 (- t4))))
(assert (= s4 (+ 0 t4 (- t5))))
(assert (= l2 (+ 0 t6 (- t7) (- t8))))
(assert (= l3 (+ 0 t7 t8 (- t10) (- t9))))
(assert (= l4 (+ 0 t10 t9 (- t11))))
(assert (= l1 (+ 0 t1 t11 (- t6))))
(assert (= l9 (+ 0 t17 (- t16))))
(assert (= s6 (+ 0 t6 (- t18))))
(assert (= s7 (+ 0 t7 (- t19))))
(assert (= s8 (+ 0 t8 (- t20))))
(assert (= s9 (+ 0 t20 (- t21))))
(assert (= s10 (+ 0 t9 (- t22))))
(assert (= s11 (+ 0 t22 (- t23))))
(assert (= l10 (+ 0 t16 t23 t4 (- t17) (- t22))))
(assert (= s12 (+ 0 t10 (- t24))))
(assert (= s13 (+ 0 t24 (- t25))))
(assert (= l6 (+ 0 t18 (- t26))))
(assert (= s14 (+ 0 t11 (- t26))))
(assert (= s15 (+ 0 t17 (- t27))))
(assert (= s16 (+ 0 t14 (- t28))))
(assert (= l12 (+ 0 t27 (- t28) (- t29))))
(assert (= s17 (+ 0 t13 (- t29))))
(assert (= s18 (+ 0 t29 (- t30))))
(assert (= l7 (+ 0 t14 t25 t30 (- t13) (- t19) (- t24))))
(assert (= s19 (+ 0 t12 (- t31))))
(assert (= s20 (+ 0 t31 (- t32))))
(assert (= l5 (+ 0 t2 t26 t32 (- t12) (- t18))))
(assert (= l13 (+ 0 t13 t28 (- t31) (- t33))))
(assert (= s21 (+ 0 t15 (- t33))))
(assert (= l0 (+ init1 t20 t22 t24 t29 t31 t33 (- t1) (- t2) (- t21) (- t23) (- t25) (- t3) (- t30) (- t32) (- t34) (- t4) (- t5))))
(assert (= s22 (+ 0 t33 (- t34))))
(assert (= l8 (+ 0 t19 t21 t3 t34 (- t14) (- t15) (- t20))))
(assert (= l14 (+ 0 t12 t15 (- t35))))
(assert (= s23 (+ 0 t16 (- t35))))
(assert (= s5 (+ 0 t18 t19 t21 t23 t25 t26 t27 t28 t30 t32 t34 t35 t5 (- t10) (- t11) (- t12) (- t13) (- t14) (- t15) (- t16) (- t17) (- t6) (- t7) (- t8) (- t9))))
(assert (= l11 (+ 0 t35 t5 (- t27))))
(assert (>= init1 1))
(assert (>= s5 1))
(assert (>= l4 1))
(assert (>= l14 1))
(check-sat)
(get-model)

* Checking SAT(C0)n
sat
(model 
  (define-fun t28 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun t5 () Int
    1)
  (define-fun t15 () Int
    1)
  (define-fun t20 () Int
    1)
  (define-fun t12 () Int
    0)
  (define-fun t21 () Int
    1)
  (define-fun t6 () Int
    1)
  (define-fun t25 () Int
    0)
  (define-fun t17 () Int
    1)
  (define-fun t26 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun init1 () Int
    5)
  (define-fun t33 () Int
    1)
  (define-fun t1 () Int
    1)
  (define-fun t31 () Int
    0)
  (define-fun t23 () Int
    1)
  (define-fun t2 () Int
    1)
  (define-fun t4 () Int
    1)
  (define-fun t30 () Int
    1)
  (define-fun t8 () Int
    1)
  (define-fun t24 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    1)
  (define-fun t22 () Int
    1)
  (define-fun t13 () Int
    1)
  (define-fun t9 () Int
    1)
  (define-fun t11 () Int
    0)
  (define-fun t18 () Int
    1)
  (define-fun t27 () Int
    1)
  (define-fun t29 () Int
    1)
  (define-fun t35 () Int
    0)
  (define-fun t3 () Int
    1)
  (define-fun l11 () Int
    0)
  (define-fun s5 () Int
    1)
  (define-fun s23 () Int
    0)
  (define-fun l14 () Int
    1)
  (define-fun l8 () Int
    1)
  (define-fun s22 () Int
    0)
  (define-fun l0 () Int
    0)
  (define-fun s21 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun s20 () Int
    0)
  (define-fun s19 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun s18 () Int
    0)
  (define-fun s17 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun s16 () Int
    0)
  (define-fun s15 () Int
    0)
  (define-fun s14 () Int
    0)
  (define-fun l6 () Int
    1)
  (define-fun s13 () Int
    0)
  (define-fun s12 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun s11 () Int
    0)
  (define-fun s10 () Int
    0)
  (define-fun s9 () Int
    0)
  (define-fun s8 () Int
    0)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
  (define-fun l9 () Int
    1)
  (define-fun l1 () Int
    0)
  (define-fun l4 () Int
    1)
  (define-fun l3 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun s0 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t28, 0).
assignment(t10, 0).
assignment(t5, 1).
assignment(t15, 1).
assignment(t20, 1).
assignment(t12, 0).
assignment(t21, 1).
assignment(t6, 1).
assignment(t25, 0).
assignment(t17, 1).
assignment(t26, 0).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(init1, 5).
assignment(t33, 1).
assignment(t1, 1).
assignment(t31, 0).
assignment(t23, 1).
assignment(t2, 1).
assignment(t4, 1).
assignment(t30, 1).
assignment(t8, 1).
assignment(t24, 0).
assignment(t32, 0).
assignment(t19, 0).
assignment(t34, 1).
assignment(t22, 1).
assignment(t13, 1).
assignment(t9, 1).
assignment(t11, 0).
assignment(t18, 1).
assignment(t27, 1).
assignment(t29, 1).
assignment(t35, 0).
assignment(t3, 1).
assignment(l11, 0).
assignment(s5, 1).
assignment(s23, 0).
assignment(l14, 1).
assignment(l8, 1).
assignment(s22, 0).
assignment(l0, 0).
assignment(s21, 0).
assignment(l13, 0).
assignment(l5, 0).
assignment(s20, 0).
assignment(s19, 0).
assignment(l7, 0).
assignment(s18, 0).
assignment(s17, 0).
assignment(l12, 0).
assignment(s16, 0).
assignment(s15, 0).
assignment(s14, 0).
assignment(l6, 1).
assignment(s13, 0).
assignment(s12, 0).
assignment(l10, 0).
assignment(s11, 0).
assignment(s10, 0).
assignment(s9, 0).
assignment(s8, 0).
assignment(s7, 0).
assignment(s6, 0).
assignment(l9, 1).
assignment(l1, 0).
assignment(l4, 1).
assignment(l3, 0).
assignment(l2, 0).
assignment(s4, 0).
assignment(s3, 0).
assignment(s2, 0).
assignment(s1, 0).
assignment(s0, 0).

- constraints C_theta...
(declare-fun s0 () Bool)
(declare-fun s1 () Bool)
(declare-fun s2 () Bool)
(declare-fun s3 () Bool)
(declare-fun s4 () Bool)
(declare-fun l2 () Bool)
(declare-fun l3 () Bool)
(declare-fun l4 () Bool)
(declare-fun l1 () Bool)
(declare-fun l9 () Bool)
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun s8 () Bool)
(declare-fun s9 () Bool)
(declare-fun s10 () Bool)
(declare-fun s11 () Bool)
(declare-fun l10 () Bool)
(declare-fun s12 () Bool)
(declare-fun s13 () Bool)
(declare-fun l6 () Bool)
(declare-fun s14 () Bool)
(declare-fun s15 () Bool)
(declare-fun s16 () Bool)
(declare-fun l12 () Bool)
(declare-fun s17 () Bool)
(declare-fun s18 () Bool)
(declare-fun l7 () Bool)
(declare-fun s19 () Bool)
(declare-fun s20 () Bool)
(declare-fun l5 () Bool)
(declare-fun l13 () Bool)
(declare-fun s21 () Bool)
(declare-fun l0 () Bool)
(declare-fun s22 () Bool)
(declare-fun l8 () Bool)
(declare-fun l14 () Bool)
(declare-fun s23 () Bool)
(declare-fun s5 () Bool)
(declare-fun l11 () Bool)

(assert (implies s0 (or s1 l1)))
(assert (implies s1 (or s2 l5)))
(assert (implies s2 (or s3 l8)))
(assert (implies s3 (or s4 l10)))
(assert (implies s4 (or s5 l11)))
(assert (implies l2 (and (or s8 l3) (or s7 l3))))
(assert (implies l3 (and (or s12 l4) (or s10 l4))))
(assert (implies l4 (or s14 l1)))
(assert (implies l1 (or s6 l2)))
(assert (implies l9 (or s23 l10)))
(assert (implies s6 (or s5 l6)))
(assert (implies s7 (or s5 l8)))
(assert (implies s8 (or s9 l0)))
(assert (implies s9 (or s5 l8)))
(assert (implies s10 (or s11 l0)))
(assert (implies s11 (or s5 l10)))
(assert (implies l10 (and (or s11 l0) (or s15 l9))))
(assert (implies s12 (or s13 l0)))
(assert (implies s13 (or s5 l7)))
(assert (implies l6 (or s5 l5)))
(assert (implies s14 (or s5 l5)))
(assert (implies s15 (or s5 l12)))
(assert (implies s16 (or s5 l13)))
(assert (implies l12 (and (or s18 l0) (or s5 l13))))
(assert (implies s17 (or s18 l0)))
(assert (implies s18 (or s5 l7)))
(assert (implies l7 (and (or s13 l0) (or s5 l8) (or s17 l13))))
(assert (implies s19 (or s20 l0)))
(assert (implies s20 (or s5 l5)))
(assert (implies l5 (and (or s5 l6) (or s19 l14))))
(assert (implies l13 (and (or s22 l0) (or s20 l0))))
(assert (implies s21 (or s22 l0)))
(assert (implies l0 (and (or s5 l8) (or s5 l5) (or s5 l7) (or s5 l7) (or s5 l10) (or s5 l8) (or s5 l11) (or s4 l10) (or s3 l8) (or s2 l5) (or s1 l1))))
(assert (implies s22 (or s5 l8)))
(assert (implies l8 (and (or s9 l0) (or s21 l14) (or s16 l7))))
(assert (implies l14 (or s5 l11)))
(assert (implies s23 (or s5 l11)))
(assert (implies s5 (and (or s15 l9) (or s23 l10) (or s21 l14) (or s16 l7) (or s17 l13) (or s19 l14) (or s14 l1) (or s12 l4) (or s10 l4) (or s8 l3) (or s7 l3) (or s6 l2))))
(assert (implies l11 (or s5 l12)))

(assert (or s0 l0))

(assert (not s5))
(assert (not l14))
(assert (not l8))
(assert (not l6))
(assert (not l9))
(assert (not l4))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 91 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

