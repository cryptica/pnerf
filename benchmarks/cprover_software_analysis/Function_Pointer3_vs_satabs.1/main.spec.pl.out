PETRINIZER: The checker for Petri Nets
[benchmarks/cprover_software_analysis/Function_Pointer3_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(s8, [t5], []).
place(l30, [t5], []).
place(l0, [], [t29,t28,t2,t1]).
place(l1, [t29,t28,t2,t1], [t30,t3]).
place(l4, [t31,t4], [t32,t5]).
place(l5, [t32], [t33,t6]).
place(l6, [], [t34,t7]).
place(l7, [t34,t7], []).
place(l11, [t36,t9], [t38,t11]).
place(l12, [t37,t10], [t39,t12]).
place(l13, [t39,t38,t12,t11], [t40,t13]).
place(l17, [t41,t14], [t44,t43,t17,t16]).
place(l18, [t43,t42,t16,t15], [t45,t18]).
place(l19, [t45,t18], [t47,t46,t20,t19]).
place(l20, [t47,t46,t20,t19], [t48,t21]).
place(l21, [t44,t17], [t49,t22]).
place(l22, [t49,t22], [t51,t50,t24,t23]).
place(l23, [t51,t50,t48,t24,t23,t21], [t52,t25]).
place(l28, [], [t54,t27]).
place(l29, [t54,t27], []).
place(l8, [t57,t55,t53,t26], [t35,t8]).
place(l27, [t58,t56], [t53,t26]).
place(s4, [t61,t59,t25,t13], [t62,t61,t60,t59]).
place(l14, [t40,t13], [t63,t59]).
place(l15, [t63,t59], [t64,t60]).
place(l16, [t64,t60], [t42,t41,t15,t14]).
place(l24, [t52,t25], [t65,t61]).
place(l25, [t65,t61], [t66,t62]).
place(s5, [t65,t63,t52,t40], [t66,t65,t64,t63]).
place(l26, [t66,t62], []).
place(s0, [t62,t60,t56,t55,t50,t46,t28,t27,t26,t23,t22,t21,t19,t18,t17,t16,t15,t14,t12,t11,t10,t9,t8,t7,t6,t4,t1], [t68,t67,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t68,t67], [t56,t55]).
place(l2, [t69,t67,t30,t3], [t69,t67,t57,t55]).
place(l3, [t69,t67,t33,t6], [t31,t4]).
place(s1, [t66,t64,t58,t57,t54,t53,t51,t49,t48,t47,t45,t44,t43,t42,t41,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t24,t20,t3,t2], [t70,t69,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28]).
place(l9, [t70,t68,t35,t8], [t70,t68,t58,t56]).
place(s3, [t70,t69], [t58,t57]).
place(l10, [t70,t68], [t37,t36,t10,t9]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l3,s0], [s0,l4]).
transition(t5, [l4,s0], [s8,l30]).
transition(t6, [l5,s0], [s0,l3]).
transition(t7, [l6,s0], [s0,l7]).
transition(t8, [l8,s0], [s0,l9]).
transition(t9, [l10,s0], [s0,l11]).
transition(t10, [l10,s0], [s0,l12]).
transition(t11, [l11,s0], [s0,l13]).
transition(t12, [l12,s0], [s0,l13]).
transition(t13, [l13,s0], [s4,l14]).
transition(t14, [l16,s0], [s0,l17]).
transition(t15, [l16,s0], [s0,l18]).
transition(t16, [l17,s0], [s0,l18]).
transition(t17, [l17,s0], [s0,l21]).
transition(t18, [l18,s0], [s0,l19]).
transition(t19, [l19,s0], [s0,l20]).
transition(t20, [l19,s0], [s1,l20]).
transition(t21, [l20,s0], [s0,l23]).
transition(t22, [l21,s0], [s0,l22]).
transition(t23, [l22,s0], [s0,l23]).
transition(t24, [l22,s0], [s1,l23]).
transition(t25, [l23,s0], [s4,l24]).
transition(t26, [l27,s0], [s0,l8]).
transition(t27, [l28,s0], [s0,l29]).
transition(t28, [l0,s1], [s0,l1]).
transition(t29, [l0,s1], [s1,l1]).
transition(t30, [l1,s1], [s1,l2]).
transition(t31, [l3,s1], [s1,l4]).
transition(t32, [l4,s1], [s1,l5]).
transition(t33, [l5,s1], [s1,l3]).
transition(t34, [l6,s1], [s1,l7]).
transition(t35, [l8,s1], [s1,l9]).
transition(t36, [l10,s1], [s1,l11]).
transition(t37, [l10,s1], [s1,l12]).
transition(t38, [l11,s1], [s1,l13]).
transition(t39, [l12,s1], [s1,l13]).
transition(t40, [l13,s1], [s5,l14]).
transition(t41, [l16,s1], [s1,l17]).
transition(t42, [l16,s1], [s1,l18]).
transition(t43, [l17,s1], [s1,l18]).
transition(t44, [l17,s1], [s1,l21]).
transition(t45, [l18,s1], [s1,l19]).
transition(t46, [l19,s1], [s0,l20]).
transition(t47, [l19,s1], [s1,l20]).
transition(t48, [l20,s1], [s1,l23]).
transition(t49, [l21,s1], [s1,l22]).
transition(t50, [l22,s1], [s0,l23]).
transition(t51, [l22,s1], [s1,l23]).
transition(t52, [l23,s1], [s5,l24]).
transition(t53, [l27,s1], [s1,l8]).
transition(t54, [l28,s1], [s1,l29]).
transition(t55, [l2,s2], [s0,l8]).
transition(t56, [l9,s2], [s0,l27]).
transition(t57, [l2,s3], [s1,l8]).
transition(t58, [l9,s3], [s1,l27]).
transition(t59, [l14,s4], [s4,l15]).
transition(t60, [l15,s4], [s0,l16]).
transition(t61, [l24,s4], [s4,l25]).
transition(t62, [l25,s4], [s0,l26]).
transition(t63, [l14,s5], [s5,l15]).
transition(t64, [l15,s5], [s1,l16]).
transition(t65, [l24,s5], [s5,l25]).
transition(t66, [l25,s5], [s1,l26]).
transition(t67, [l2,s0], [l2,s2,l3]).
transition(t68, [l9,s0], [l9,s2,l10]).
transition(t69, [l2,s1], [l2,s3,l3]).
transition(t70, [l9,s1], [l9,s3,l10]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s8 1)').
cond('(>= l30 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun s8 () Int)
(declare-fun l30 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l4 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l13 () Int)
(declare-fun l17 () Int)
(declare-fun l18 () Int)
(declare-fun l19 () Int)
(declare-fun l20 () Int)
(declare-fun l21 () Int)
(declare-fun l22 () Int)
(declare-fun l23 () Int)
(declare-fun l28 () Int)
(declare-fun l29 () Int)
(declare-fun l8 () Int)
(declare-fun l27 () Int)
(declare-fun s4 () Int)
(declare-fun l14 () Int)
(declare-fun l15 () Int)
(declare-fun l16 () Int)
(declare-fun l24 () Int)
(declare-fun l25 () Int)
(declare-fun s5 () Int)
(declare-fun l26 () Int)
(declare-fun s0 () Int)
(declare-fun s2 () Int)
(declare-fun l2 () Int)
(declare-fun l3 () Int)
(declare-fun s1 () Int)
(declare-fun l9 () Int)
(declare-fun s3 () Int)
(declare-fun l10 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(declare-fun t59 () Int)
(declare-fun t60 () Int)
(declare-fun t61 () Int)
(declare-fun t62 () Int)
(declare-fun t63 () Int)
(declare-fun t64 () Int)
(declare-fun t65 () Int)
(declare-fun t66 () Int)
(declare-fun t67 () Int)
(declare-fun t68 () Int)
(declare-fun t69 () Int)
(declare-fun t70 () Int)
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l30 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l8 0))
(assert (>= l27 0))
(assert (>= s4 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= s5 0))
(assert (>= l26 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= s1 0))
(assert (>= l9 0))
(assert (>= s3 0))
(assert (>= l10 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (>= t59 0))
(assert (>= t60 0))
(assert (>= t61 0))
(assert (>= t62 0))
(assert (>= t63 0))
(assert (>= t64 0))
(assert (>= t65 0))
(assert (>= t66 0))
(assert (>= t67 0))
(assert (>= t68 0))
(assert (>= t69 0))
(assert (>= t70 0))
(assert (= s6 (+ 0)))
(assert (= s7 (+ 0)))
(assert (= s8 (+ 0 t5)))
(assert (= l30 (+ 0 t5)))
(assert (= l0 (+ init1 (- t1) (- t2) (- t28) (- t29))))
(assert (= l1 (+ 0 t1 t2 t28 t29 (- t3) (- t30))))
(assert (= l4 (+ 0 t31 t4 (- t32) (- t5))))
(assert (= l5 (+ 0 t32 (- t33) (- t6))))
(assert (= l6 (+ 0 (- t34) (- t7))))
(assert (= l7 (+ 0 t34 t7)))
(assert (= l11 (+ 0 t36 t9 (- t11) (- t38))))
(assert (= l12 (+ 0 t10 t37 (- t12) (- t39))))
(assert (= l13 (+ 0 t11 t12 t38 t39 (- t13) (- t40))))
(assert (= l17 (+ 0 t14 t41 (- t16) (- t17) (- t43) (- t44))))
(assert (= l18 (+ 0 t15 t16 t42 t43 (- t18) (- t45))))
(assert (= l19 (+ 0 t18 t45 (- t19) (- t20) (- t46) (- t47))))
(assert (= l20 (+ 0 t19 t20 t46 t47 (- t21) (- t48))))
(assert (= l21 (+ 0 t17 t44 (- t22) (- t49))))
(assert (= l22 (+ 0 t22 t49 (- t23) (- t24) (- t50) (- t51))))
(assert (= l23 (+ 0 t21 t23 t24 t48 t50 t51 (- t25) (- t52))))
(assert (= l28 (+ 0 (- t27) (- t54))))
(assert (= l29 (+ 0 t27 t54)))
(assert (= l8 (+ 0 t26 t53 t55 t57 (- t35) (- t8))))
(assert (= l27 (+ 0 t56 t58 (- t26) (- t53))))
(assert (= s4 (+ 0 t13 t25 (- t60) (- t62))))
(assert (= l14 (+ 0 t13 t40 (- t59) (- t63))))
(assert (= l15 (+ 0 t59 t63 (- t60) (- t64))))
(assert (= l16 (+ 0 t60 t64 (- t14) (- t15) (- t41) (- t42))))
(assert (= l24 (+ 0 t25 t52 (- t61) (- t65))))
(assert (= l25 (+ 0 t61 t65 (- t62) (- t66))))
(assert (= s5 (+ 0 t40 t52 (- t64) (- t66))))
(assert (= l26 (+ 0 t62 t66)))
(assert (= s0 (+ 1 t28 t46 t50 t55 t56 t60 t62 (- t13) (- t2) (- t20) (- t24) (- t25) (- t3) (- t5) (- t67) (- t68))))
(assert (= s2 (+ 0 t67 t68 (- t55) (- t56))))
(assert (= l2 (+ 0 t3 t30 (- t55) (- t57))))
(assert (= l3 (+ 0 t33 t6 t67 t69 (- t31) (- t4))))
(assert (= s1 (+ 0 t2 t20 t24 t3 t57 t58 t64 t66 (- t28) (- t40) (- t46) (- t50) (- t52) (- t69) (- t70))))
(assert (= l9 (+ 0 t35 t8 (- t56) (- t58))))
(assert (= s3 (+ 0 t69 t70 (- t57) (- t58))))
(assert (= l10 (+ 0 t68 t70 (- t10) (- t36) (- t37) (- t9))))
(assert (>= init1 1))
(assert (>= s8 1))
(assert (>= l30 1))
(check-sat)
(get-model)

* Checking SAT(C0)n
sat
(model 
  (define-fun t3 () Int
    1)
  (define-fun t28 () Int
    1)
  (define-fun t5 () Int
    1)
  (define-fun t15 () Int
    0)
  (define-fun t60 () Int
    0)
  (define-fun t66 () Int
    0)
  (define-fun t6 () Int
    0)
  (define-fun t67 () Int
    1)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun t51 () Int
    0)
  (define-fun t53 () Int
    0)
  (define-fun t62 () Int
    0)
  (define-fun t65 () Int
    0)
  (define-fun t33 () Int
    0)
  (define-fun t40 () Int
    0)
  (define-fun t41 () Int
    0)
  (define-fun t68 () Int
    0)
  (define-fun t70 () Int
    0)
  (define-fun t31 () Int
    1)
  (define-fun t69 () Int
    0)
  (define-fun t2 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t46 () Int
    0)
  (define-fun t52 () Int
    0)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t59 () Int
    0)
  (define-fun t24 () Int
    0)
  (define-fun t54 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    0)
  (define-fun t55 () Int
    1)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t20 () Int
    0)
  (define-fun t21 () Int
    0)
  (define-fun t63 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t17 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun t48 () Int
    0)
  (define-fun t25 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t1 () Int
    0)
  (define-fun t23 () Int
    0)
  (define-fun t57 () Int
    0)
  (define-fun t56 () Int
    0)
  (define-fun t61 () Int
    0)
  (define-fun t30 () Int
    0)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    0)
  (define-fun t50 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t58 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    0)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t64 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun l24 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun l27 () Int
    0)
  (define-fun l8 () Int
    1)
  (define-fun l29 () Int
    0)
  (define-fun l28 () Int
    0)
  (define-fun l23 () Int
    0)
  (define-fun l22 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    0)
  (define-fun l30 () Int
    1)
  (define-fun s8 () Int
    1)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t3, 1).
assignment(t28, 1).
assignment(t5, 1).
assignment(t15, 0).
assignment(t60, 0).
assignment(t66, 0).
assignment(t6, 0).
assignment(t67, 1).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(t51, 0).
assignment(t53, 0).
assignment(t62, 0).
assignment(t65, 0).
assignment(t33, 0).
assignment(t40, 0).
assignment(t41, 0).
assignment(t68, 0).
assignment(t70, 0).
assignment(t31, 1).
assignment(t69, 0).
assignment(t2, 0).
assignment(t39, 0).
assignment(t4, 0).
assignment(t46, 0).
assignment(t52, 0).
assignment(t49, 0).
assignment(t8, 0).
assignment(t59, 0).
assignment(t24, 0).
assignment(t54, 0).
assignment(t37, 0).
assignment(t9, 0).
assignment(t55, 1).
assignment(t18, 0).
assignment(t35, 0).
assignment(t12, 0).
assignment(t20, 0).
assignment(t21, 0).
assignment(t63, 0).
assignment(init1, 1).
assignment(t17, 0).
assignment(t44, 0).
assignment(t48, 0).
assignment(t25, 0).
assignment(t26, 0).
assignment(t1, 0).
assignment(t23, 0).
assignment(t57, 0).
assignment(t56, 0).
assignment(t61, 0).
assignment(t30, 0).
assignment(t43, 0).
assignment(t47, 0).
assignment(t50, 0).
assignment(t32, 0).
assignment(t45, 0).
assignment(t42, 0).
assignment(t58, 0).
assignment(t19, 0).
assignment(t34, 0).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 0).
assignment(t64, 0).
assignment(t11, 0).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t10, 0).
assignment(l10, 0).
assignment(s3, 0).
assignment(l9, 0).
assignment(s1, 0).
assignment(l3, 0).
assignment(l2, 0).
assignment(s2, 0).
assignment(s0, 0).
assignment(l26, 0).
assignment(s5, 0).
assignment(l25, 0).
assignment(l24, 0).
assignment(l16, 0).
assignment(l15, 0).
assignment(l14, 0).
assignment(s4, 0).
assignment(l27, 0).
assignment(l8, 1).
assignment(l29, 0).
assignment(l28, 0).
assignment(l23, 0).
assignment(l22, 0).
assignment(l21, 0).
assignment(l20, 0).
assignment(l19, 0).
assignment(l18, 0).
assignment(l17, 0).
assignment(l13, 0).
assignment(l12, 0).
assignment(l11, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(l5, 0).
assignment(l4, 0).
assignment(l1, 0).
assignment(l0, 0).
assignment(l30, 1).
assignment(s8, 1).
assignment(s7, 0).
assignment(s6, 0).

- constraints C_theta...
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun s8 () Bool)
(declare-fun l30 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l4 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l13 () Bool)
(declare-fun l17 () Bool)
(declare-fun l18 () Bool)
(declare-fun l19 () Bool)
(declare-fun l20 () Bool)
(declare-fun l21 () Bool)
(declare-fun l22 () Bool)
(declare-fun l23 () Bool)
(declare-fun l28 () Bool)
(declare-fun l29 () Bool)
(declare-fun l8 () Bool)
(declare-fun l27 () Bool)
(declare-fun s4 () Bool)
(declare-fun l14 () Bool)
(declare-fun l15 () Bool)
(declare-fun l16 () Bool)
(declare-fun l24 () Bool)
(declare-fun l25 () Bool)
(declare-fun s5 () Bool)
(declare-fun l26 () Bool)
(declare-fun s0 () Bool)
(declare-fun s2 () Bool)
(declare-fun l2 () Bool)
(declare-fun l3 () Bool)
(declare-fun s1 () Bool)
(declare-fun l9 () Bool)
(declare-fun s3 () Bool)
(declare-fun l10 () Bool)

(assert (implies l0 (and (or s1 l1) (or s0 l1) (or s1 l1) (or s0 l1))))
(assert (implies l1 (and (or s1 l2) (or s1 l2))))
(assert (implies l4 (and (or s1 l5) (or s8 l30))))
(assert (implies l5 (and (or s1 l3) (or s0 l3))))
(assert (implies l6 (and (or s1 l7) (or s0 l7))))
(assert (implies l11 (and (or s1 l13) (or s0 l13))))
(assert (implies l12 (and (or s1 l13) (or s0 l13))))
(assert (implies l13 (and (or s5 l14) (or s4 l14))))
(assert (implies l17 (and (or s1 l21) (or s1 l18) (or s0 l21) (or s0 l18))))
(assert (implies l18 (and (or s1 l19) (or s0 l19))))
(assert (implies l19 (and (or s1 l20) (or s0 l20) (or s1 l20) (or s0 l20))))
(assert (implies l20 (and (or s1 l23) (or s0 l23))))
(assert (implies l21 (and (or s1 l22) (or s0 l22))))
(assert (implies l22 (and (or s1 l23) (or s0 l23) (or s1 l23) (or s0 l23))))
(assert (implies l23 (and (or s5 l24) (or s4 l24))))
(assert (implies l28 (and (or s1 l29) (or s0 l29))))
(assert (implies l8 (and (or s1 l9) (or s0 l9))))
(assert (implies l27 (and (or s1 l8) (or s0 l8))))
(assert (implies s4 (and (or s0 l26) (or s4 l25) (or s0 l16) (or s4 l15))))
(assert (implies l14 (and (or s5 l15) (or s4 l15))))
(assert (implies l15 (and (or s1 l16) (or s0 l16))))
(assert (implies l16 (and (or s1 l18) (or s1 l17) (or s0 l18) (or s0 l17))))
(assert (implies l24 (and (or s5 l25) (or s4 l25))))
(assert (implies l25 (and (or s1 l26) (or s0 l26))))
(assert (implies s5 (and (or s1 l26) (or s5 l25) (or s1 l16) (or s5 l15))))
(assert (implies s0 (and (or l9 s2 l10) (or l2 s2 l3) (or s0 l29) (or s0 l8) (or s4 l24) (or s1 l23) (or s0 l23) (or s0 l22) (or s0 l23) (or s1 l20) (or s0 l20) (or s0 l19) (or s0 l21) (or s0 l18) (or s0 l18) (or s0 l17) (or s4 l14) (or s0 l13) (or s0 l13) (or s0 l12) (or s0 l11) (or s0 l9) (or s0 l7) (or s0 l3) (or s8 l30) (or s0 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies s2 (and (or s0 l27) (or s0 l8))))
(assert (implies l2 (and (or l2 s3 l3) (or l2 s2 l3) (or s1 l8) (or s0 l8))))
(assert (implies l3 (and (or s1 l4) (or s0 l4))))
(assert (implies s1 (and (or l9 s3 l10) (or l2 s3 l3) (or s1 l29) (or s1 l8) (or s5 l24) (or s1 l23) (or s0 l23) (or s1 l22) (or s1 l23) (or s1 l20) (or s0 l20) (or s1 l19) (or s1 l21) (or s1 l18) (or s1 l18) (or s1 l17) (or s5 l14) (or s1 l13) (or s1 l13) (or s1 l12) (or s1 l11) (or s1 l9) (or s1 l7) (or s1 l3) (or s1 l5) (or s1 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies l9 (and (or l9 s3 l10) (or l9 s2 l10) (or s1 l27) (or s0 l27))))
(assert (implies s3 (and (or s1 l27) (or s1 l8))))
(assert (implies l10 (and (or s1 l12) (or s1 l11) (or s0 l12) (or s0 l11))))

(assert (or s0 l0))

(assert (not l8))
(assert (not l30))
(assert (not s8))

(check-sat)
(get-model)

* Checking SAT(C_theta)
sat
(model 
  (define-fun l14 () Bool
    false)
  (define-fun l24 () Bool
    true)
  (define-fun l15 () Bool
    true)
  (define-fun l26 () Bool
    true)
  (define-fun l13 () Bool
    false)
  (define-fun l22 () Bool
    true)
  (define-fun l25 () Bool
    true)
  (define-fun l16 () Bool
    true)
  (define-fun s5 () Bool
    true)
  (define-fun l19 () Bool
    true)
  (define-fun s4 () Bool
    false)
  (define-fun l29 () Bool
    false)
  (define-fun l7 () Bool
    false)
  (define-fun l10 () Bool
    false)
  (define-fun l28 () Bool
    false)
  (define-fun l18 () Bool
    true)
  (define-fun l21 () Bool
    true)
  (define-fun l17 () Bool
    true)
  (define-fun l12 () Bool
    false)
  (define-fun l11 () Bool
    false)
  (define-fun l6 () Bool
    false)
  (define-fun l20 () Bool
    true)
  (define-fun l23 () Bool
    true)
  (define-fun s3 () Bool
    true)
  (define-fun l9 () Bool
    false)
  (define-fun s1 () Bool
    true)
  (define-fun l1 () Bool
    true)
  (define-fun s8 () Bool
    false)
  (define-fun l30 () Bool
    false)
  (define-fun l8 () Bool
    false)
  (define-fun l0 () Bool
    true)
  (define-fun l3 () Bool
    false)
  (define-fun l2 () Bool
    false)
  (define-fun s2 () Bool
    false)
  (define-fun s0 () Bool
    false)
  (define-fun l27 () Bool
    false)
  (define-fun l5 () Bool
    false)
  (define-fun l4 () Bool
    false)
)

* Constructing constraints C_1 for C_0 and A_theta
- model A_theta...
assignment(l14, false).
assignment(l24, true).
assignment(l15, true).
assignment(l26, true).
assignment(l13, false).
assignment(l22, true).
assignment(l25, true).
assignment(l16, true).
assignment(s5, true).
assignment(l19, true).
assignment(s4, false).
assignment(l29, false).
assignment(l7, false).
assignment(l10, false).
assignment(l28, false).
assignment(l18, true).
assignment(l21, true).
assignment(l17, true).
assignment(l12, false).
assignment(l11, false).
assignment(l6, false).
assignment(l20, true).
assignment(l23, true).
assignment(s3, true).
assignment(l9, false).
assignment(s1, true).
assignment(l1, true).
assignment(s8, false).
assignment(l30, false).
assignment(l8, false).
assignment(l0, true).
assignment(l3, false).
assignment(l2, false).
assignment(s2, false).
assignment(s0, false).
assignment(l27, false).
assignment(l5, false).
assignment(l4, false).

- constraint d_1...
(assert (>= (+ l24 l15 l26 l22 l25 l16 s5 l19 l18 l21 l17 l20 l23 s3 s1 l1 l0) 1))
- constraints c_1...
(declare-fun init1 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun s8 () Int)
(declare-fun l30 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l4 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l13 () Int)
(declare-fun l17 () Int)
(declare-fun l18 () Int)
(declare-fun l19 () Int)
(declare-fun l20 () Int)
(declare-fun l21 () Int)
(declare-fun l22 () Int)
(declare-fun l23 () Int)
(declare-fun l28 () Int)
(declare-fun l29 () Int)
(declare-fun l8 () Int)
(declare-fun l27 () Int)
(declare-fun s4 () Int)
(declare-fun l14 () Int)
(declare-fun l15 () Int)
(declare-fun l16 () Int)
(declare-fun l24 () Int)
(declare-fun l25 () Int)
(declare-fun s5 () Int)
(declare-fun l26 () Int)
(declare-fun s0 () Int)
(declare-fun s2 () Int)
(declare-fun l2 () Int)
(declare-fun l3 () Int)
(declare-fun s1 () Int)
(declare-fun l9 () Int)
(declare-fun s3 () Int)
(declare-fun l10 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(declare-fun t59 () Int)
(declare-fun t60 () Int)
(declare-fun t61 () Int)
(declare-fun t62 () Int)
(declare-fun t63 () Int)
(declare-fun t64 () Int)
(declare-fun t65 () Int)
(declare-fun t66 () Int)
(declare-fun t67 () Int)
(declare-fun t68 () Int)
(declare-fun t69 () Int)
(declare-fun t70 () Int)
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l30 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l8 0))
(assert (>= l27 0))
(assert (>= s4 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= s5 0))
(assert (>= l26 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= s1 0))
(assert (>= l9 0))
(assert (>= s3 0))
(assert (>= l10 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (>= t59 0))
(assert (>= t60 0))
(assert (>= t61 0))
(assert (>= t62 0))
(assert (>= t63 0))
(assert (>= t64 0))
(assert (>= t65 0))
(assert (>= t66 0))
(assert (>= t67 0))
(assert (>= t68 0))
(assert (>= t69 0))
(assert (>= t70 0))
(assert (= s6 (+ 0)))
(assert (= s7 (+ 0)))
(assert (= s8 (+ 0 t5)))
(assert (= l30 (+ 0 t5)))
(assert (= l0 (+ init1 (- t1) (- t2) (- t28) (- t29))))
(assert (= l1 (+ 0 t1 t2 t28 t29 (- t3) (- t30))))
(assert (= l4 (+ 0 t31 t4 (- t32) (- t5))))
(assert (= l5 (+ 0 t32 (- t33) (- t6))))
(assert (= l6 (+ 0 (- t34) (- t7))))
(assert (= l7 (+ 0 t34 t7)))
(assert (= l11 (+ 0 t36 t9 (- t11) (- t38))))
(assert (= l12 (+ 0 t10 t37 (- t12) (- t39))))
(assert (= l13 (+ 0 t11 t12 t38 t39 (- t13) (- t40))))
(assert (= l17 (+ 0 t14 t41 (- t16) (- t17) (- t43) (- t44))))
(assert (= l18 (+ 0 t15 t16 t42 t43 (- t18) (- t45))))
(assert (= l19 (+ 0 t18 t45 (- t19) (- t20) (- t46) (- t47))))
(assert (= l20 (+ 0 t19 t20 t46 t47 (- t21) (- t48))))
(assert (= l21 (+ 0 t17 t44 (- t22) (- t49))))
(assert (= l22 (+ 0 t22 t49 (- t23) (- t24) (- t50) (- t51))))
(assert (= l23 (+ 0 t21 t23 t24 t48 t50 t51 (- t25) (- t52))))
(assert (= l28 (+ 0 (- t27) (- t54))))
(assert (= l29 (+ 0 t27 t54)))
(assert (= l8 (+ 0 t26 t53 t55 t57 (- t35) (- t8))))
(assert (= l27 (+ 0 t56 t58 (- t26) (- t53))))
(assert (= s4 (+ 0 t13 t25 (- t60) (- t62))))
(assert (= l14 (+ 0 t13 t40 (- t59) (- t63))))
(assert (= l15 (+ 0 t59 t63 (- t60) (- t64))))
(assert (= l16 (+ 0 t60 t64 (- t14) (- t15) (- t41) (- t42))))
(assert (= l24 (+ 0 t25 t52 (- t61) (- t65))))
(assert (= l25 (+ 0 t61 t65 (- t62) (- t66))))
(assert (= s5 (+ 0 t40 t52 (- t64) (- t66))))
(assert (= l26 (+ 0 t62 t66)))
(assert (= s0 (+ 1 t28 t46 t50 t55 t56 t60 t62 (- t13) (- t2) (- t20) (- t24) (- t25) (- t3) (- t5) (- t67) (- t68))))
(assert (= s2 (+ 0 t67 t68 (- t55) (- t56))))
(assert (= l2 (+ 0 t3 t30 (- t55) (- t57))))
(assert (= l3 (+ 0 t33 t6 t67 t69 (- t31) (- t4))))
(assert (= s1 (+ 0 t2 t20 t24 t3 t57 t58 t64 t66 (- t28) (- t40) (- t46) (- t50) (- t52) (- t69) (- t70))))
(assert (= l9 (+ 0 t35 t8 (- t56) (- t58))))
(assert (= s3 (+ 0 t69 t70 (- t57) (- t58))))
(assert (= l10 (+ 0 t68 t70 (- t10) (- t36) (- t37) (- t9))))
(assert (>= init1 1))
(assert (>= s8 1))
(assert (>= l30 1))
(assert (>= (+ l24 l15 l26 l22 l25 l16 s5 l19 l18 l21 l17 l20 l23 s3 s1 l1 l0) 1))
(check-sat)
(get-model)
sat
(model 
  (define-fun t3 () Int
    0)
  (define-fun t28 () Int
    0)
  (define-fun t5 () Int
    1)
  (define-fun t15 () Int
    0)
  (define-fun t60 () Int
    0)
  (define-fun t66 () Int
    0)
  (define-fun t6 () Int
    0)
  (define-fun t67 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun t51 () Int
    0)
  (define-fun t53 () Int
    0)
  (define-fun t62 () Int
    0)
  (define-fun t65 () Int
    0)
  (define-fun t33 () Int
    0)
  (define-fun t40 () Int
    0)
  (define-fun t41 () Int
    0)
  (define-fun t68 () Int
    0)
  (define-fun t70 () Int
    0)
  (define-fun t31 () Int
    1)
  (define-fun t69 () Int
    1)
  (define-fun t2 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t46 () Int
    0)
  (define-fun t52 () Int
    0)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t59 () Int
    0)
  (define-fun t24 () Int
    0)
  (define-fun t54 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    0)
  (define-fun t55 () Int
    0)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t20 () Int
    0)
  (define-fun t21 () Int
    0)
  (define-fun t63 () Int
    0)
  (define-fun init1 () Int
    2)
  (define-fun t17 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun t48 () Int
    0)
  (define-fun t25 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t1 () Int
    1)
  (define-fun t23 () Int
    0)
  (define-fun t57 () Int
    1)
  (define-fun t56 () Int
    0)
  (define-fun t61 () Int
    0)
  (define-fun t30 () Int
    1)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    0)
  (define-fun t50 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t58 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    0)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t64 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun l24 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun l27 () Int
    0)
  (define-fun l8 () Int
    1)
  (define-fun l29 () Int
    0)
  (define-fun l28 () Int
    0)
  (define-fun l23 () Int
    0)
  (define-fun l22 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    1)
  (define-fun l30 () Int
    1)
  (define-fun s8 () Int
    1)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t3, 0).
assignment(t28, 0).
assignment(t5, 1).
assignment(t15, 0).
assignment(t60, 0).
assignment(t66, 0).
assignment(t6, 0).
assignment(t67, 0).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(t51, 0).
assignment(t53, 0).
assignment(t62, 0).
assignment(t65, 0).
assignment(t33, 0).
assignment(t40, 0).
assignment(t41, 0).
assignment(t68, 0).
assignment(t70, 0).
assignment(t31, 1).
assignment(t69, 1).
assignment(t2, 0).
assignment(t39, 0).
assignment(t4, 0).
assignment(t46, 0).
assignment(t52, 0).
assignment(t49, 0).
assignment(t8, 0).
assignment(t59, 0).
assignment(t24, 0).
assignment(t54, 0).
assignment(t37, 0).
assignment(t9, 0).
assignment(t55, 0).
assignment(t18, 0).
assignment(t35, 0).
assignment(t12, 0).
assignment(t20, 0).
assignment(t21, 0).
assignment(t63, 0).
assignment(init1, 2).
assignment(t17, 0).
assignment(t44, 0).
assignment(t48, 0).
assignment(t25, 0).
assignment(t26, 0).
assignment(t1, 1).
assignment(t23, 0).
assignment(t57, 1).
assignment(t56, 0).
assignment(t61, 0).
assignment(t30, 1).
assignment(t43, 0).
assignment(t47, 0).
assignment(t50, 0).
assignment(t32, 0).
assignment(t45, 0).
assignment(t42, 0).
assignment(t58, 0).
assignment(t19, 0).
assignment(t34, 0).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 0).
assignment(t64, 0).
assignment(t11, 0).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t10, 0).
assignment(l10, 0).
assignment(s3, 0).
assignment(l9, 0).
assignment(s1, 0).
assignment(l3, 0).
assignment(l2, 0).
assignment(s2, 0).
assignment(s0, 0).
assignment(l26, 0).
assignment(s5, 0).
assignment(l25, 0).
assignment(l24, 0).
assignment(l16, 0).
assignment(l15, 0).
assignment(l14, 0).
assignment(s4, 0).
assignment(l27, 0).
assignment(l8, 1).
assignment(l29, 0).
assignment(l28, 0).
assignment(l23, 0).
assignment(l22, 0).
assignment(l21, 0).
assignment(l20, 0).
assignment(l19, 0).
assignment(l18, 0).
assignment(l17, 0).
assignment(l13, 0).
assignment(l12, 0).
assignment(l11, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(l5, 0).
assignment(l4, 0).
assignment(l1, 0).
assignment(l0, 1).
assignment(l30, 1).
assignment(s8, 1).
assignment(s7, 0).
assignment(s6, 0).

- constraints C_theta...
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun s8 () Bool)
(declare-fun l30 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l4 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l13 () Bool)
(declare-fun l17 () Bool)
(declare-fun l18 () Bool)
(declare-fun l19 () Bool)
(declare-fun l20 () Bool)
(declare-fun l21 () Bool)
(declare-fun l22 () Bool)
(declare-fun l23 () Bool)
(declare-fun l28 () Bool)
(declare-fun l29 () Bool)
(declare-fun l8 () Bool)
(declare-fun l27 () Bool)
(declare-fun s4 () Bool)
(declare-fun l14 () Bool)
(declare-fun l15 () Bool)
(declare-fun l16 () Bool)
(declare-fun l24 () Bool)
(declare-fun l25 () Bool)
(declare-fun s5 () Bool)
(declare-fun l26 () Bool)
(declare-fun s0 () Bool)
(declare-fun s2 () Bool)
(declare-fun l2 () Bool)
(declare-fun l3 () Bool)
(declare-fun s1 () Bool)
(declare-fun l9 () Bool)
(declare-fun s3 () Bool)
(declare-fun l10 () Bool)

(assert (implies l0 (and (or s1 l1) (or s0 l1) (or s1 l1) (or s0 l1))))
(assert (implies l1 (and (or s1 l2) (or s1 l2))))
(assert (implies l4 (and (or s1 l5) (or s8 l30))))
(assert (implies l5 (and (or s1 l3) (or s0 l3))))
(assert (implies l6 (and (or s1 l7) (or s0 l7))))
(assert (implies l11 (and (or s1 l13) (or s0 l13))))
(assert (implies l12 (and (or s1 l13) (or s0 l13))))
(assert (implies l13 (and (or s5 l14) (or s4 l14))))
(assert (implies l17 (and (or s1 l21) (or s1 l18) (or s0 l21) (or s0 l18))))
(assert (implies l18 (and (or s1 l19) (or s0 l19))))
(assert (implies l19 (and (or s1 l20) (or s0 l20) (or s1 l20) (or s0 l20))))
(assert (implies l20 (and (or s1 l23) (or s0 l23))))
(assert (implies l21 (and (or s1 l22) (or s0 l22))))
(assert (implies l22 (and (or s1 l23) (or s0 l23) (or s1 l23) (or s0 l23))))
(assert (implies l23 (and (or s5 l24) (or s4 l24))))
(assert (implies l28 (and (or s1 l29) (or s0 l29))))
(assert (implies l8 (and (or s1 l9) (or s0 l9))))
(assert (implies l27 (and (or s1 l8) (or s0 l8))))
(assert (implies s4 (and (or s0 l26) (or s4 l25) (or s0 l16) (or s4 l15))))
(assert (implies l14 (and (or s5 l15) (or s4 l15))))
(assert (implies l15 (and (or s1 l16) (or s0 l16))))
(assert (implies l16 (and (or s1 l18) (or s1 l17) (or s0 l18) (or s0 l17))))
(assert (implies l24 (and (or s5 l25) (or s4 l25))))
(assert (implies l25 (and (or s1 l26) (or s0 l26))))
(assert (implies s5 (and (or s1 l26) (or s5 l25) (or s1 l16) (or s5 l15))))
(assert (implies s0 (and (or l9 s2 l10) (or l2 s2 l3) (or s0 l29) (or s0 l8) (or s4 l24) (or s1 l23) (or s0 l23) (or s0 l22) (or s0 l23) (or s1 l20) (or s0 l20) (or s0 l19) (or s0 l21) (or s0 l18) (or s0 l18) (or s0 l17) (or s4 l14) (or s0 l13) (or s0 l13) (or s0 l12) (or s0 l11) (or s0 l9) (or s0 l7) (or s0 l3) (or s8 l30) (or s0 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies s2 (and (or s0 l27) (or s0 l8))))
(assert (implies l2 (and (or l2 s3 l3) (or l2 s2 l3) (or s1 l8) (or s0 l8))))
(assert (implies l3 (and (or s1 l4) (or s0 l4))))
(assert (implies s1 (and (or l9 s3 l10) (or l2 s3 l3) (or s1 l29) (or s1 l8) (or s5 l24) (or s1 l23) (or s0 l23) (or s1 l22) (or s1 l23) (or s1 l20) (or s0 l20) (or s1 l19) (or s1 l21) (or s1 l18) (or s1 l18) (or s1 l17) (or s5 l14) (or s1 l13) (or s1 l13) (or s1 l12) (or s1 l11) (or s1 l9) (or s1 l7) (or s1 l3) (or s1 l5) (or s1 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies l9 (and (or l9 s3 l10) (or l9 s2 l10) (or s1 l27) (or s0 l27))))
(assert (implies s3 (and (or s1 l27) (or s1 l8))))
(assert (implies l10 (and (or s1 l12) (or s1 l11) (or s0 l12) (or s0 l11))))

(assert (or s0 l0))

(assert (not l8))
(assert (not l0))
(assert (not l30))
(assert (not s8))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 84 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

