PETRINIZER: The checker for Petri Nets
[benchmarks/cprover_software_analysis/stack_lock_p0_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(l23, [t16], []).
place(l0, [], [t20,t19,t2,t1]).
place(l1, [t20,t19,t2,t1], [t21,t3]).
place(l2, [t21,t3], [t22,t4]).
place(l11, [t25,t7], []).
place(l12, [], [t27,t9]).
place(l13, [t26,t8], [t28,t10]).
place(l14, [t28,t10], [t29,t11]).
place(l18, [t31,t30,t13,t12], [t32,t14]).
place(l22, [t33,t15], [t34,t16]).
place(s8, [t34], []).
place(l27, [t34], []).
place(l3, [t35,t22,t17,t4], [t23,t5]).
place(l25, [], [t36,t18]).
place(l26, [t36,t18], []).
place(l24, [t38,t37], [t35,t17]).
place(s4, [t46,t44,t42,t41,t40,t39,t14,t11,t6], [t47,t46,t45,t44,t43,t42,t41,t40,t39]).
place(l6, [t24,t6], [t49,t48,t40,t39]).
place(l7, [t48,t39], [t50,t41]).
place(l8, [t49,t40], [t51,t42]).
place(l9, [t51,t50,t42,t41], [t52,t43]).
place(l10, [t52,t43], [t26,t25,t8,t7]).
place(l15, [t29,t11], [t53,t44]).
place(l16, [t53,t44], [t54,t45]).
place(l17, [t54,t45], [t31,t30,t13,t12]).
place(l19, [t32,t14], [t55,t46]).
place(l20, [t55,t46], [t56,t47]).
place(s5, [t55,t53,t51,t50,t49,t48,t32,t29,t24], [t56,t55,t54,t53,t52,t51,t50,t49,t48]).
place(l21, [t56,t47,t27,t9], [t33,t15]).
place(s0, [t47,t45,t43,t37,t30,t19,t18,t17,t16,t15,t12,t10,t9,t8,t7,t5,t1], [t57,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t57], [t37]).
place(s1, [t56,t54,t52,t38,t36,t35,t33,t31,t28,t27,t26,t25,t23,t22,t21,t20,t13,t4,t3,t2], [t58,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19]).
place(l4, [t58,t57,t23,t5], [t58,t57,t38,t37]).
place(s3, [t58], [t38]).
place(l5, [t58,t57], [t24,t6]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l2,s0], [s1,l3]).
transition(t5, [l3,s0], [s0,l4]).
transition(t6, [l5,s0], [s4,l6]).
transition(t7, [l10,s0], [s0,l11]).
transition(t8, [l10,s0], [s0,l13]).
transition(t9, [l12,s0], [s0,l21]).
transition(t10, [l13,s0], [s0,l14]).
transition(t11, [l14,s0], [s4,l15]).
transition(t12, [l17,s0], [s0,l18]).
transition(t13, [l17,s0], [s1,l18]).
transition(t14, [l18,s0], [s4,l19]).
transition(t15, [l21,s0], [s0,l22]).
transition(t16, [l22,s0], [s0,l23]).
transition(t17, [l24,s0], [s0,l3]).
transition(t18, [l25,s0], [s0,l26]).
transition(t19, [l0,s1], [s0,l1]).
transition(t20, [l0,s1], [s1,l1]).
transition(t21, [l1,s1], [s1,l2]).
transition(t22, [l2,s1], [s1,l3]).
transition(t23, [l3,s1], [s1,l4]).
transition(t24, [l5,s1], [s5,l6]).
transition(t25, [l10,s1], [s1,l11]).
transition(t26, [l10,s1], [s1,l13]).
transition(t27, [l12,s1], [s1,l21]).
transition(t28, [l13,s1], [s1,l14]).
transition(t29, [l14,s1], [s5,l15]).
transition(t30, [l17,s1], [s0,l18]).
transition(t31, [l17,s1], [s1,l18]).
transition(t32, [l18,s1], [s5,l19]).
transition(t33, [l21,s1], [s1,l22]).
transition(t34, [l22,s1], [s8,l27]).
transition(t35, [l24,s1], [s1,l3]).
transition(t36, [l25,s1], [s1,l26]).
transition(t37, [l4,s2], [s0,l24]).
transition(t38, [l4,s3], [s1,l24]).
transition(t39, [l6,s4], [s4,l7]).
transition(t40, [l6,s4], [s4,l8]).
transition(t41, [l7,s4], [s4,l9]).
transition(t42, [l8,s4], [s4,l9]).
transition(t43, [l9,s4], [s0,l10]).
transition(t44, [l15,s4], [s4,l16]).
transition(t45, [l16,s4], [s0,l17]).
transition(t46, [l19,s4], [s4,l20]).
transition(t47, [l20,s4], [s0,l21]).
transition(t48, [l6,s5], [s5,l7]).
transition(t49, [l6,s5], [s5,l8]).
transition(t50, [l7,s5], [s5,l9]).
transition(t51, [l8,s5], [s5,l9]).
transition(t52, [l9,s5], [s1,l10]).
transition(t53, [l15,s5], [s5,l16]).
transition(t54, [l16,s5], [s1,l17]).
transition(t55, [l19,s5], [s5,l20]).
transition(t56, [l20,s5], [s1,l21]).
transition(t57, [l4,s0], [l4,s2,l5]).
transition(t58, [l4,s1], [l4,s3,l5]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s8 1)').
cond('(>= l27 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun l23 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l2 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l13 () Int)
(declare-fun l14 () Int)
(declare-fun l18 () Int)
(declare-fun l22 () Int)
(declare-fun s8 () Int)
(declare-fun l27 () Int)
(declare-fun l3 () Int)
(declare-fun l25 () Int)
(declare-fun l26 () Int)
(declare-fun l24 () Int)
(declare-fun s4 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l8 () Int)
(declare-fun l9 () Int)
(declare-fun l10 () Int)
(declare-fun l15 () Int)
(declare-fun l16 () Int)
(declare-fun l17 () Int)
(declare-fun l19 () Int)
(declare-fun l20 () Int)
(declare-fun s5 () Int)
(declare-fun l21 () Int)
(declare-fun s0 () Int)
(declare-fun s2 () Int)
(declare-fun s1 () Int)
(declare-fun l4 () Int)
(declare-fun s3 () Int)
(declare-fun l5 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= l23 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l18 0))
(assert (>= l22 0))
(assert (>= s8 0))
(assert (>= l27 0))
(assert (>= l3 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l24 0))
(assert (>= s4 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= s5 0))
(assert (>= l21 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= s1 0))
(assert (>= l4 0))
(assert (>= s3 0))
(assert (>= l5 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (= s6 (+ 0)))
(assert (= s7 (+ 0)))
(assert (= l23 (+ 0 t16)))
(assert (= l0 (+ init1 (- t1) (- t19) (- t2) (- t20))))
(assert (= l1 (+ 0 t1 t19 t2 t20 (- t21) (- t3))))
(assert (= l2 (+ 0 t21 t3 (- t22) (- t4))))
(assert (= l11 (+ 0 t25 t7)))
(assert (= l12 (+ 0 (- t27) (- t9))))
(assert (= l13 (+ 0 t26 t8 (- t10) (- t28))))
(assert (= l14 (+ 0 t10 t28 (- t11) (- t29))))
(assert (= l18 (+ 0 t12 t13 t30 t31 (- t14) (- t32))))
(assert (= l22 (+ 0 t15 t33 (- t16) (- t34))))
(assert (= s8 (+ 0 t34)))
(assert (= l27 (+ 0 t34)))
(assert (= l3 (+ 0 t17 t22 t35 t4 (- t23) (- t5))))
(assert (= l25 (+ 0 (- t18) (- t36))))
(assert (= l26 (+ 0 t18 t36)))
(assert (= l24 (+ 0 t37 t38 (- t17) (- t35))))
(assert (= s4 (+ 0 t11 t14 t6 (- t43) (- t45) (- t47))))
(assert (= l6 (+ 0 t24 t6 (- t39) (- t40) (- t48) (- t49))))
(assert (= l7 (+ 0 t39 t48 (- t41) (- t50))))
(assert (= l8 (+ 0 t40 t49 (- t42) (- t51))))
(assert (= l9 (+ 0 t41 t42 t50 t51 (- t43) (- t52))))
(assert (= l10 (+ 0 t43 t52 (- t25) (- t26) (- t7) (- t8))))
(assert (= l15 (+ 0 t11 t29 (- t44) (- t53))))
(assert (= l16 (+ 0 t44 t53 (- t45) (- t54))))
(assert (= l17 (+ 0 t45 t54 (- t12) (- t13) (- t30) (- t31))))
(assert (= l19 (+ 0 t14 t32 (- t46) (- t55))))
(assert (= l20 (+ 0 t46 t55 (- t47) (- t56))))
(assert (= s5 (+ 0 t24 t29 t32 (- t52) (- t54) (- t56))))
(assert (= l21 (+ 0 t27 t47 t56 t9 (- t15) (- t33))))
(assert (= s0 (+ 1 t19 t30 t37 t43 t45 t47 (- t11) (- t13) (- t14) (- t2) (- t3) (- t4) (- t57) (- t6))))
(assert (= s2 (+ 0 t57 (- t37))))
(assert (= s1 (+ 0 t13 t2 t3 t38 t4 t52 t54 t56 (- t19) (- t24) (- t29) (- t30) (- t32) (- t34) (- t58))))
(assert (= l4 (+ 0 t23 t5 (- t37) (- t38))))
(assert (= s3 (+ 0 t58 (- t38))))
(assert (= l5 (+ 0 t57 t58 (- t24) (- t6))))
(assert (>= init1 1))
(assert (>= s8 1))
(assert (>= l27 1))
(check-sat)
(get-model)

* Checking SAT(C0)n
sat
(model 
  (define-fun t3 () Int
    0)
  (define-fun t10 () Int
    1)
  (define-fun t5 () Int
    1)
  (define-fun t15 () Int
    0)
  (define-fun t6 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun t51 () Int
    0)
  (define-fun t53 () Int
    0)
  (define-fun t33 () Int
    1)
  (define-fun t40 () Int
    0)
  (define-fun t41 () Int
    1)
  (define-fun t31 () Int
    0)
  (define-fun t2 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t52 () Int
    1)
  (define-fun t46 () Int
    0)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    1)
  (define-fun t24 () Int
    1)
  (define-fun t54 () Int
    1)
  (define-fun t37 () Int
    1)
  (define-fun t9 () Int
    0)
  (define-fun t55 () Int
    1)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t20 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t21 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t25 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t17 () Int
    1)
  (define-fun t48 () Int
    1)
  (define-fun t44 () Int
    1)
  (define-fun t1 () Int
    0)
  (define-fun t23 () Int
    0)
  (define-fun t57 () Int
    1)
  (define-fun t56 () Int
    0)
  (define-fun t30 () Int
    0)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    1)
  (define-fun t50 () Int
    0)
  (define-fun t32 () Int
    1)
  (define-fun t45 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t58 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    1)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    1)
  (define-fun t11 () Int
    1)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t28 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l8 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun l24 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l27 () Int
    1)
  (define-fun s8 () Int
    1)
  (define-fun l22 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    1)
  (define-fun l23 () Int
    0)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t3, 0).
assignment(t10, 1).
assignment(t5, 1).
assignment(t15, 0).
assignment(t6, 0).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(t51, 0).
assignment(t53, 0).
assignment(t33, 1).
assignment(t40, 0).
assignment(t41, 1).
assignment(t31, 0).
assignment(t2, 0).
assignment(t39, 0).
assignment(t4, 0).
assignment(t52, 1).
assignment(t46, 0).
assignment(t49, 0).
assignment(t8, 1).
assignment(t24, 1).
assignment(t54, 1).
assignment(t37, 1).
assignment(t9, 0).
assignment(t55, 1).
assignment(t18, 0).
assignment(t35, 0).
assignment(t20, 0).
assignment(t12, 0).
assignment(t21, 0).
assignment(init1, 1).
assignment(t25, 0).
assignment(t26, 0).
assignment(t17, 1).
assignment(t48, 1).
assignment(t44, 1).
assignment(t1, 0).
assignment(t23, 0).
assignment(t57, 1).
assignment(t56, 0).
assignment(t30, 0).
assignment(t43, 0).
assignment(t47, 1).
assignment(t50, 0).
assignment(t32, 1).
assignment(t45, 0).
assignment(t42, 0).
assignment(t58, 0).
assignment(t19, 0).
assignment(t34, 1).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 1).
assignment(t11, 1).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t28, 0).
assignment(l5, 0).
assignment(s3, 0).
assignment(l4, 0).
assignment(s1, 0).
assignment(s2, 0).
assignment(s0, 0).
assignment(l21, 0).
assignment(s5, 0).
assignment(l20, 0).
assignment(l19, 0).
assignment(l17, 0).
assignment(l16, 0).
assignment(l15, 0).
assignment(l10, 0).
assignment(l9, 0).
assignment(l8, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(s4, 0).
assignment(l24, 0).
assignment(l26, 0).
assignment(l25, 0).
assignment(l3, 0).
assignment(l27, 1).
assignment(s8, 1).
assignment(l22, 0).
assignment(l18, 0).
assignment(l14, 0).
assignment(l13, 0).
assignment(l12, 0).
assignment(l11, 0).
assignment(l2, 0).
assignment(l1, 0).
assignment(l0, 1).
assignment(l23, 0).
assignment(s7, 0).
assignment(s6, 0).
- constraints C_theta...
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun l23 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l2 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l13 () Bool)
(declare-fun l14 () Bool)
(declare-fun l18 () Bool)
(declare-fun l22 () Bool)
(declare-fun s8 () Bool)
(declare-fun l27 () Bool)
(declare-fun l3 () Bool)
(declare-fun l25 () Bool)
(declare-fun l26 () Bool)
(declare-fun l24 () Bool)
(declare-fun s4 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l8 () Bool)
(declare-fun l9 () Bool)
(declare-fun l10 () Bool)
(declare-fun l15 () Bool)
(declare-fun l16 () Bool)
(declare-fun l17 () Bool)
(declare-fun l19 () Bool)
(declare-fun l20 () Bool)
(declare-fun s5 () Bool)
(declare-fun l21 () Bool)
(declare-fun s0 () Bool)
(declare-fun s2 () Bool)
(declare-fun s1 () Bool)
(declare-fun l4 () Bool)
(declare-fun s3 () Bool)
(declare-fun l5 () Bool)

(assert (implies l0 (and (or s1 l1) (or s0 l1) (or s1 l1) (or s0 l1))))
(assert (implies l1 (and (or s1 l2) (or s1 l2))))
(assert (implies l2 (and (or s1 l3) (or s1 l3))))
(assert (implies l12 (and (or s1 l21) (or s0 l21))))
(assert (implies l13 (and (or s1 l14) (or s0 l14))))
(assert (implies l14 (and (or s5 l15) (or s4 l15))))
(assert (implies l18 (and (or s5 l19) (or s4 l19))))
(assert (implies l22 (and (or s8 l27) (or s0 l23))))
(assert (implies l3 (and (or s1 l4) (or s0 l4))))
(assert (implies l25 (and (or s1 l26) (or s0 l26))))
(assert (implies l24 (and (or s1 l3) (or s0 l3))))
(assert (implies s4 (and (or s0 l21) (or s4 l20) (or s0 l17) (or s4 l16) (or s0 l10) (or s4 l9) (or s4 l9) (or s4 l8) (or s4 l7))))
(assert (implies l6 (and (or s5 l8) (or s5 l7) (or s4 l8) (or s4 l7))))
(assert (implies l7 (and (or s5 l9) (or s4 l9))))
(assert (implies l8 (and (or s5 l9) (or s4 l9))))
(assert (implies l9 (and (or s1 l10) (or s0 l10))))
(assert (implies l10 (and (or s1 l13) (or s1 l11) (or s0 l13) (or s0 l11))))
(assert (implies l15 (and (or s5 l16) (or s4 l16))))
(assert (implies l16 (and (or s1 l17) (or s0 l17))))
(assert (implies l17 (and (or s1 l18) (or s0 l18) (or s1 l18) (or s0 l18))))
(assert (implies l19 (and (or s5 l20) (or s4 l20))))
(assert (implies l20 (and (or s1 l21) (or s0 l21))))
(assert (implies s5 (and (or s1 l21) (or s5 l20) (or s1 l17) (or s5 l16) (or s1 l10) (or s5 l9) (or s5 l9) (or s5 l8) (or s5 l7))))
(assert (implies l21 (and (or s1 l22) (or s0 l22))))
(assert (implies s0 (and (or l4 s2 l5) (or s0 l26) (or s0 l3) (or s0 l23) (or s0 l22) (or s4 l19) (or s1 l18) (or s0 l18) (or s4 l15) (or s0 l14) (or s0 l21) (or s0 l13) (or s0 l11) (or s4 l6) (or s0 l4) (or s1 l3) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies s2 (or s0 l24)))
(assert (implies s1 (and (or l4 s3 l5) (or s1 l26) (or s1 l3) (or s8 l27) (or s1 l22) (or s5 l19) (or s1 l18) (or s0 l18) (or s5 l15) (or s1 l14) (or s1 l21) (or s1 l13) (or s1 l11) (or s5 l6) (or s1 l4) (or s1 l3) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies l4 (and (or l4 s3 l5) (or l4 s2 l5) (or s1 l24) (or s0 l24))))
(assert (implies s3 (or s1 l24)))
(assert (implies l5 (and (or s5 l6) (or s4 l6))))

(assert (or s0 l0))

(assert (not l27))
(assert (not s8))
(assert (not l0))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 77 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

