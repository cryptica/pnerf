PETRINIZER: The checker for Petri Nets
[-v benchmarks/found-in-mist-repo/PN/bingham_h150.spec.pl]

* Constructing petri net N from input file
place(x1, [t1], [t4,t3,t2]).
place(x2, [t4], [t6,t5]).
place(x3, [t6], [t8,t7]).
place(x4, [t8], [t10,t9]).
place(x5, [t10], [t12,t11]).
place(x6, [t12], [t14,t13]).
place(x7, [t14], [t16,t15]).
place(x8, [t16], [t18,t17]).
place(x9, [t18], [t20,t19]).
place(x10, [t20], [t22,t21]).
place(x11, [t22], [t24,t23]).
place(x12, [t24], [t26,t25]).
place(x13, [t26], [t28,t27]).
place(x14, [t28], [t30,t29]).
place(x15, [t30], [t32,t31]).
place(x16, [t32], [t34,t33]).
place(x17, [t34], [t36,t35]).
place(x18, [t36], [t38,t37]).
place(x19, [t38], [t40,t39]).
place(x20, [t40], [t42,t41]).
place(x21, [t42], [t44,t43]).
place(x22, [t44], [t46,t45]).
place(x23, [t46], [t48,t47]).
place(x24, [t48], [t50,t49]).
place(x25, [t50], [t52,t51]).
place(x26, [t52], [t54,t53]).
place(x27, [t54], [t56,t55]).
place(x28, [t56], [t58,t57]).
place(x29, [t58], [t60,t59]).
place(x30, [t60], [t62,t61]).
place(x31, [t62], [t64,t63]).
place(x32, [t64], [t66,t65]).
place(x33, [t66], [t68,t67]).
place(x34, [t68], [t70,t69]).
place(x35, [t70], [t72,t71]).
place(x36, [t72], [t74,t73]).
place(x37, [t74], [t76,t75]).
place(x38, [t76], [t78,t77]).
place(x39, [t78], [t80,t79]).
place(x40, [t80], [t82,t81]).
place(x41, [t82], [t84,t83]).
place(x42, [t84], [t86,t85]).
place(x43, [t86], [t88,t87]).
place(x44, [t88], [t90,t89]).
place(x45, [t90], [t92,t91]).
place(x46, [t92], [t94,t93]).
place(x47, [t94], [t96,t95]).
place(x48, [t96], [t98,t97]).
place(x49, [t98], [t100,t99]).
place(x50, [t100], [t102,t101]).
place(x51, [t102], [t104,t103]).
place(x52, [t104], [t106,t105]).
place(x53, [t106], [t108,t107]).
place(x54, [t108], [t110,t109]).
place(x55, [t110], [t112,t111]).
place(x56, [t112], [t114,t113]).
place(x57, [t114], [t116,t115]).
place(x58, [t116], [t118,t117]).
place(x59, [t118], [t120,t119]).
place(x60, [t120], [t122,t121]).
place(x61, [t122], [t124,t123]).
place(x62, [t124], [t126,t125]).
place(x63, [t126], [t128,t127]).
place(x64, [t128], [t130,t129]).
place(x65, [t130], [t132,t131]).
place(x66, [t132], [t134,t133]).
place(x67, [t134], [t136,t135]).
place(x68, [t136], [t138,t137]).
place(x69, [t138], [t140,t139]).
place(x70, [t140], [t142,t141]).
place(x71, [t142], [t144,t143]).
place(x72, [t144], [t146,t145]).
place(x73, [t146], [t148,t147]).
place(x74, [t148], [t150,t149]).
place(x75, [t150], [t152,t151]).
place(x76, [t152], [t154,t153]).
place(x77, [t154], [t156,t155]).
place(x78, [t156], [t158,t157]).
place(x79, [t158], [t160,t159]).
place(x80, [t160], [t162,t161]).
place(x81, [t162], [t164,t163]).
place(x82, [t164], [t166,t165]).
place(x83, [t166], [t168,t167]).
place(x84, [t168], [t170,t169]).
place(x85, [t170], [t172,t171]).
place(x86, [t172], [t174,t173]).
place(x87, [t174], [t176,t175]).
place(x88, [t176], [t178,t177]).
place(x89, [t178], [t180,t179]).
place(x90, [t180], [t182,t181]).
place(x91, [t182], [t184,t183]).
place(x92, [t184], [t186,t185]).
place(x93, [t186], [t188,t187]).
place(x94, [t188], [t190,t189]).
place(x95, [t190], [t192,t191]).
place(x96, [t192], [t194,t193]).
place(x97, [t194], [t196,t195]).
place(x98, [t196], [t198,t197]).
place(x99, [t198], [t200,t199]).
place(x100, [t200], [t202,t201]).
place(x101, [t202], [t204,t203]).
place(x102, [t204], [t206,t205]).
place(x103, [t206], [t208,t207]).
place(x104, [t208], [t210,t209]).
place(x105, [t210], [t212,t211]).
place(x106, [t212], [t214,t213]).
place(x107, [t214], [t216,t215]).
place(x108, [t216], [t218,t217]).
place(x109, [t218], [t220,t219]).
place(x110, [t220], [t222,t221]).
place(x111, [t222], [t224,t223]).
place(x112, [t224], [t226,t225]).
place(x113, [t226], [t228,t227]).
place(x114, [t228], [t230,t229]).
place(x115, [t230], [t232,t231]).
place(x116, [t232], [t234,t233]).
place(x117, [t234], [t236,t235]).
place(x118, [t236], [t238,t237]).
place(x119, [t238], [t240,t239]).
place(x120, [t240], [t242,t241]).
place(x121, [t242], [t244,t243]).
place(x122, [t244], [t246,t245]).
place(x123, [t246], [t248,t247]).
place(x124, [t248], [t250,t249]).
place(x125, [t250], [t252,t251]).
place(x126, [t252], [t254,t253]).
place(x127, [t254], [t256,t255]).
place(x128, [t256], [t258,t257]).
place(x129, [t258], [t260,t259]).
place(x130, [t260], [t262,t261]).
place(x131, [t262], [t264,t263]).
place(x132, [t264], [t266,t265]).
place(x133, [t266], [t268,t267]).
place(x134, [t268], [t270,t269]).
place(x135, [t270], [t272,t271]).
place(x136, [t272], [t274,t273]).
place(x137, [t274], [t276,t275]).
place(x138, [t276], [t278,t277]).
place(x139, [t278], [t280,t279]).
place(x140, [t280], [t282,t281]).
place(x141, [t282], [t284,t283]).
place(x142, [t284], [t286,t285]).
place(x143, [t286], [t288,t287]).
place(x144, [t288], [t290,t289]).
place(x145, [t290], [t292,t291]).
place(x146, [t292], [t294,t293]).
place(x147, [t294], [t296,t295]).
place(x148, [t296], [t298,t297]).
place(x149, [t298], [t300,t299]).
place(x150, [t300], [t301]).
place(x151, [t2,t1], [t301,t299,t297,t295,t293,t291,t289,t287,t285,t283,t281,t279,t277,t275,t273,t271,t269,t267,t265,t263,t261,t259,t257,t255,t253,t251,t249,t247,t245,t243,t241,t239,t237,t235,t233,t231,t229,t227,t225,t223,t221,t219,t217,t215,t213,t211,t209,t207,t205,t203,t201,t199,t197,t195,t193,t191,t189,t187,t185,t183,t181,t179,t177,t175,t173,t171,t169,t167,t165,t163,t161,t159,t157,t155,t153,t151,t149,t147,t145,t143,t141,t139,t137,t135,t133,t131,t129,t127,t125,t123,t121,t119,t117,t115,t113,t111,t109,t107,t105,t103,t101,t99,t97,t95,t93,t91,t89,t87,t85,t83,t81,t79,t77,t75,t73,t71,t69,t67,t65,t63,t61,t59,t57,t55,t53,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3]).
place(x152, [t301,t299,t297,t295,t293,t291,t289,t287,t285,t283,t281,t279,t277,t275,t273,t271,t269,t267,t265,t263,t261,t259,t257,t255,t253,t251,t249,t247,t245,t243,t241,t239,t237,t235,t233,t231,t229,t227,t225,t223,t221,t219,t217,t215,t213,t211,t209,t207,t205,t203,t201,t199,t197,t195,t193,t191,t189,t187,t185,t183,t181,t179,t177,t175,t173,t171,t169,t167,t165,t163,t161,t159,t157,t155,t153,t151,t149,t147,t145,t143,t141,t139,t137,t135,t133,t131,t129,t127,t125,t123,t121,t119,t117,t115,t113,t111,t109,t107,t105,t103,t101,t99,t97,t95,t93,t91,t89,t87,t85,t83,t81,t79,t77,t75,t73,t71,t69,t67,t65,t63,t61,t59,t57,t55,t53,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3], [t2,t1]).
place(x0, [init1,t301,t299,t297,t295,t293,t291,t289,t287,t285,t283,t281,t279,t277,t275,t273,t271,t269,t267,t265,t263,t261,t259,t257,t255,t253,t251,t249,t247,t245,t243,t241,t239,t237,t235,t233,t231,t229,t227,t225,t223,t221,t219,t217,t215,t213,t211,t209,t207,t205,t203,t201,t199,t197,t195,t193,t191,t189,t187,t185,t183,t181,t179,t177,t175,t173,t171,t169,t167,t165,t163,t161,t159,t157,t155,t153,t151,t149,t147,t145,t143,t141,t139,t137,t135,t133,t131,t129,t127,t125,t123,t121,t119,t117,t115,t113,t111,t109,t107,t105,t103,t101,t99,t97,t95,t93,t91,t89,t87,t85,t83,t81,t79,t77,t75,t73,t71,t69,t67,t65,t63,t61,t59,t57,t55,t53,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3,t2], [t1]).

transition(t1, [x0,x152], [x151,x1]).
transition(t2, [x1,x152], [x151,x0]).
transition(t3, [x1,x151], [x0,x152]).
transition(t4, [x1], [x2]).
transition(t5, [x2,x151], [x0,x152]).
transition(t6, [x2], [x3]).
transition(t7, [x3,x151], [x0,x152]).
transition(t8, [x3], [x4]).
transition(t9, [x4,x151], [x0,x152]).
transition(t10, [x4], [x5]).
transition(t11, [x5,x151], [x0,x152]).
transition(t12, [x5], [x6]).
transition(t13, [x6,x151], [x0,x152]).
transition(t14, [x6], [x7]).
transition(t15, [x7,x151], [x0,x152]).
transition(t16, [x7], [x8]).
transition(t17, [x8,x151], [x0,x152]).
transition(t18, [x8], [x9]).
transition(t19, [x9,x151], [x0,x152]).
transition(t20, [x9], [x10]).
transition(t21, [x10,x151], [x0,x152]).
transition(t22, [x10], [x11]).
transition(t23, [x11,x151], [x0,x152]).
transition(t24, [x11], [x12]).
transition(t25, [x12,x151], [x0,x152]).
transition(t26, [x12], [x13]).
transition(t27, [x13,x151], [x0,x152]).
transition(t28, [x13], [x14]).
transition(t29, [x14,x151], [x0,x152]).
transition(t30, [x14], [x15]).
transition(t31, [x15,x151], [x0,x152]).
transition(t32, [x15], [x16]).
transition(t33, [x16,x151], [x0,x152]).
transition(t34, [x16], [x17]).
transition(t35, [x17,x151], [x0,x152]).
transition(t36, [x17], [x18]).
transition(t37, [x18,x151], [x0,x152]).
transition(t38, [x18], [x19]).
transition(t39, [x19,x151], [x0,x152]).
transition(t40, [x19], [x20]).
transition(t41, [x20,x151], [x0,x152]).
transition(t42, [x20], [x21]).
transition(t43, [x21,x151], [x0,x152]).
transition(t44, [x21], [x22]).
transition(t45, [x22,x151], [x0,x152]).
transition(t46, [x22], [x23]).
transition(t47, [x23,x151], [x0,x152]).
transition(t48, [x23], [x24]).
transition(t49, [x24,x151], [x0,x152]).
transition(t50, [x24], [x25]).
transition(t51, [x25,x151], [x0,x152]).
transition(t52, [x25], [x26]).
transition(t53, [x26,x151], [x0,x152]).
transition(t54, [x26], [x27]).
transition(t55, [x27,x151], [x0,x152]).
transition(t56, [x27], [x28]).
transition(t57, [x28,x151], [x0,x152]).
transition(t58, [x28], [x29]).
transition(t59, [x29,x151], [x0,x152]).
transition(t60, [x29], [x30]).
transition(t61, [x30,x151], [x0,x152]).
transition(t62, [x30], [x31]).
transition(t63, [x31,x151], [x0,x152]).
transition(t64, [x31], [x32]).
transition(t65, [x32,x151], [x0,x152]).
transition(t66, [x32], [x33]).
transition(t67, [x33,x151], [x0,x152]).
transition(t68, [x33], [x34]).
transition(t69, [x34,x151], [x0,x152]).
transition(t70, [x34], [x35]).
transition(t71, [x35,x151], [x0,x152]).
transition(t72, [x35], [x36]).
transition(t73, [x36,x151], [x0,x152]).
transition(t74, [x36], [x37]).
transition(t75, [x37,x151], [x0,x152]).
transition(t76, [x37], [x38]).
transition(t77, [x38,x151], [x0,x152]).
transition(t78, [x38], [x39]).
transition(t79, [x39,x151], [x0,x152]).
transition(t80, [x39], [x40]).
transition(t81, [x40,x151], [x0,x152]).
transition(t82, [x40], [x41]).
transition(t83, [x41,x151], [x0,x152]).
transition(t84, [x41], [x42]).
transition(t85, [x42,x151], [x0,x152]).
transition(t86, [x42], [x43]).
transition(t87, [x43,x151], [x0,x152]).
transition(t88, [x43], [x44]).
transition(t89, [x44,x151], [x0,x152]).
transition(t90, [x44], [x45]).
transition(t91, [x45,x151], [x0,x152]).
transition(t92, [x45], [x46]).
transition(t93, [x46,x151], [x0,x152]).
transition(t94, [x46], [x47]).
transition(t95, [x47,x151], [x0,x152]).
transition(t96, [x47], [x48]).
transition(t97, [x48,x151], [x0,x152]).
transition(t98, [x48], [x49]).
transition(t99, [x49,x151], [x0,x152]).
transition(t100, [x49], [x50]).
transition(t101, [x50,x151], [x0,x152]).
transition(t102, [x50], [x51]).
transition(t103, [x51,x151], [x0,x152]).
transition(t104, [x51], [x52]).
transition(t105, [x52,x151], [x0,x152]).
transition(t106, [x52], [x53]).
transition(t107, [x53,x151], [x0,x152]).
transition(t108, [x53], [x54]).
transition(t109, [x54,x151], [x0,x152]).
transition(t110, [x54], [x55]).
transition(t111, [x55,x151], [x0,x152]).
transition(t112, [x55], [x56]).
transition(t113, [x56,x151], [x0,x152]).
transition(t114, [x56], [x57]).
transition(t115, [x57,x151], [x0,x152]).
transition(t116, [x57], [x58]).
transition(t117, [x58,x151], [x0,x152]).
transition(t118, [x58], [x59]).
transition(t119, [x59,x151], [x0,x152]).
transition(t120, [x59], [x60]).
transition(t121, [x60,x151], [x0,x152]).
transition(t122, [x60], [x61]).
transition(t123, [x61,x151], [x0,x152]).
transition(t124, [x61], [x62]).
transition(t125, [x62,x151], [x0,x152]).
transition(t126, [x62], [x63]).
transition(t127, [x63,x151], [x0,x152]).
transition(t128, [x63], [x64]).
transition(t129, [x64,x151], [x0,x152]).
transition(t130, [x64], [x65]).
transition(t131, [x65,x151], [x0,x152]).
transition(t132, [x65], [x66]).
transition(t133, [x66,x151], [x0,x152]).
transition(t134, [x66], [x67]).
transition(t135, [x67,x151], [x0,x152]).
transition(t136, [x67], [x68]).
transition(t137, [x68,x151], [x0,x152]).
transition(t138, [x68], [x69]).
transition(t139, [x69,x151], [x0,x152]).
transition(t140, [x69], [x70]).
transition(t141, [x70,x151], [x0,x152]).
transition(t142, [x70], [x71]).
transition(t143, [x71,x151], [x0,x152]).
transition(t144, [x71], [x72]).
transition(t145, [x72,x151], [x0,x152]).
transition(t146, [x72], [x73]).
transition(t147, [x73,x151], [x0,x152]).
transition(t148, [x73], [x74]).
transition(t149, [x74,x151], [x0,x152]).
transition(t150, [x74], [x75]).
transition(t151, [x75,x151], [x0,x152]).
transition(t152, [x75], [x76]).
transition(t153, [x76,x151], [x0,x152]).
transition(t154, [x76], [x77]).
transition(t155, [x77,x151], [x0,x152]).
transition(t156, [x77], [x78]).
transition(t157, [x78,x151], [x0,x152]).
transition(t158, [x78], [x79]).
transition(t159, [x79,x151], [x0,x152]).
transition(t160, [x79], [x80]).
transition(t161, [x80,x151], [x0,x152]).
transition(t162, [x80], [x81]).
transition(t163, [x81,x151], [x0,x152]).
transition(t164, [x81], [x82]).
transition(t165, [x82,x151], [x0,x152]).
transition(t166, [x82], [x83]).
transition(t167, [x83,x151], [x0,x152]).
transition(t168, [x83], [x84]).
transition(t169, [x84,x151], [x0,x152]).
transition(t170, [x84], [x85]).
transition(t171, [x85,x151], [x0,x152]).
transition(t172, [x85], [x86]).
transition(t173, [x86,x151], [x0,x152]).
transition(t174, [x86], [x87]).
transition(t175, [x87,x151], [x0,x152]).
transition(t176, [x87], [x88]).
transition(t177, [x88,x151], [x0,x152]).
transition(t178, [x88], [x89]).
transition(t179, [x89,x151], [x0,x152]).
transition(t180, [x89], [x90]).
transition(t181, [x90,x151], [x0,x152]).
transition(t182, [x90], [x91]).
transition(t183, [x91,x151], [x0,x152]).
transition(t184, [x91], [x92]).
transition(t185, [x92,x151], [x0,x152]).
transition(t186, [x92], [x93]).
transition(t187, [x93,x151], [x0,x152]).
transition(t188, [x93], [x94]).
transition(t189, [x94,x151], [x0,x152]).
transition(t190, [x94], [x95]).
transition(t191, [x95,x151], [x0,x152]).
transition(t192, [x95], [x96]).
transition(t193, [x96,x151], [x0,x152]).
transition(t194, [x96], [x97]).
transition(t195, [x97,x151], [x0,x152]).
transition(t196, [x97], [x98]).
transition(t197, [x98,x151], [x0,x152]).
transition(t198, [x98], [x99]).
transition(t199, [x99,x151], [x0,x152]).
transition(t200, [x99], [x100]).
transition(t201, [x100,x151], [x0,x152]).
transition(t202, [x100], [x101]).
transition(t203, [x101,x151], [x0,x152]).
transition(t204, [x101], [x102]).
transition(t205, [x102,x151], [x0,x152]).
transition(t206, [x102], [x103]).
transition(t207, [x103,x151], [x0,x152]).
transition(t208, [x103], [x104]).
transition(t209, [x104,x151], [x0,x152]).
transition(t210, [x104], [x105]).
transition(t211, [x105,x151], [x0,x152]).
transition(t212, [x105], [x106]).
transition(t213, [x106,x151], [x0,x152]).
transition(t214, [x106], [x107]).
transition(t215, [x107,x151], [x0,x152]).
transition(t216, [x107], [x108]).
transition(t217, [x108,x151], [x0,x152]).
transition(t218, [x108], [x109]).
transition(t219, [x109,x151], [x0,x152]).
transition(t220, [x109], [x110]).
transition(t221, [x110,x151], [x0,x152]).
transition(t222, [x110], [x111]).
transition(t223, [x111,x151], [x0,x152]).
transition(t224, [x111], [x112]).
transition(t225, [x112,x151], [x0,x152]).
transition(t226, [x112], [x113]).
transition(t227, [x113,x151], [x0,x152]).
transition(t228, [x113], [x114]).
transition(t229, [x114,x151], [x0,x152]).
transition(t230, [x114], [x115]).
transition(t231, [x115,x151], [x0,x152]).
transition(t232, [x115], [x116]).
transition(t233, [x116,x151], [x0,x152]).
transition(t234, [x116], [x117]).
transition(t235, [x117,x151], [x0,x152]).
transition(t236, [x117], [x118]).
transition(t237, [x118,x151], [x0,x152]).
transition(t238, [x118], [x119]).
transition(t239, [x119,x151], [x0,x152]).
transition(t240, [x119], [x120]).
transition(t241, [x120,x151], [x0,x152]).
transition(t242, [x120], [x121]).
transition(t243, [x121,x151], [x0,x152]).
transition(t244, [x121], [x122]).
transition(t245, [x122,x151], [x0,x152]).
transition(t246, [x122], [x123]).
transition(t247, [x123,x151], [x0,x152]).
transition(t248, [x123], [x124]).
transition(t249, [x124,x151], [x0,x152]).
transition(t250, [x124], [x125]).
transition(t251, [x125,x151], [x0,x152]).
transition(t252, [x125], [x126]).
transition(t253, [x126,x151], [x0,x152]).
transition(t254, [x126], [x127]).
transition(t255, [x127,x151], [x0,x152]).
transition(t256, [x127], [x128]).
transition(t257, [x128,x151], [x0,x152]).
transition(t258, [x128], [x129]).
transition(t259, [x129,x151], [x0,x152]).
transition(t260, [x129], [x130]).
transition(t261, [x130,x151], [x0,x152]).
transition(t262, [x130], [x131]).
transition(t263, [x131,x151], [x0,x152]).
transition(t264, [x131], [x132]).
transition(t265, [x132,x151], [x0,x152]).
transition(t266, [x132], [x133]).
transition(t267, [x133,x151], [x0,x152]).
transition(t268, [x133], [x134]).
transition(t269, [x134,x151], [x0,x152]).
transition(t270, [x134], [x135]).
transition(t271, [x135,x151], [x0,x152]).
transition(t272, [x135], [x136]).
transition(t273, [x136,x151], [x0,x152]).
transition(t274, [x136], [x137]).
transition(t275, [x137,x151], [x0,x152]).
transition(t276, [x137], [x138]).
transition(t277, [x138,x151], [x0,x152]).
transition(t278, [x138], [x139]).
transition(t279, [x139,x151], [x0,x152]).
transition(t280, [x139], [x140]).
transition(t281, [x140,x151], [x0,x152]).
transition(t282, [x140], [x141]).
transition(t283, [x141,x151], [x0,x152]).
transition(t284, [x141], [x142]).
transition(t285, [x142,x151], [x0,x152]).
transition(t286, [x142], [x143]).
transition(t287, [x143,x151], [x0,x152]).
transition(t288, [x143], [x144]).
transition(t289, [x144,x151], [x0,x152]).
transition(t290, [x144], [x145]).
transition(t291, [x145,x151], [x0,x152]).
transition(t292, [x145], [x146]).
transition(t293, [x146,x151], [x0,x152]).
transition(t294, [x146], [x147]).
transition(t295, [x147,x151], [x0,x152]).
transition(t296, [x147], [x148]).
transition(t297, [x148,x151], [x0,x152]).
transition(t298, [x148], [x149]).
transition(t299, [x149,x151], [x0,x152]).
transition(t300, [x149], [x150]).
transition(t301, [x150,x151], [x0,x152]).
transition(init1, [], [x0]).

weight(x0, t1, 1).
weight(x152, t1, 1).
weight(t1, x151, 1).
weight(t1, x1, 1).
weight(x1, t2, 1).
weight(x152, t2, 1).
weight(t2, x151, 1).
weight(t2, x0, 1).
weight(x1, t3, 1).
weight(x151, t3, 1).
weight(t3, x0, 1).
weight(t3, x152, 1).
weight(x1, t4, 1).
weight(t4, x2, 1).
weight(x2, t5, 1).
weight(x151, t5, 1).
weight(t5, x0, 1).
weight(t5, x152, 1).
weight(x2, t6, 1).
weight(t6, x3, 1).
weight(x3, t7, 1).
weight(x151, t7, 1).
weight(t7, x0, 1).
weight(t7, x152, 1).
weight(x3, t8, 1).
weight(t8, x4, 1).
weight(x4, t9, 1).
weight(x151, t9, 1).
weight(t9, x0, 1).
weight(t9, x152, 1).
weight(x4, t10, 1).
weight(t10, x5, 1).
weight(x5, t11, 1).
weight(x151, t11, 1).
weight(t11, x0, 1).
weight(t11, x152, 1).
weight(x5, t12, 1).
weight(t12, x6, 1).
weight(x6, t13, 1).
weight(x151, t13, 1).
weight(t13, x0, 1).
weight(t13, x152, 1).
weight(x6, t14, 1).
weight(t14, x7, 1).
weight(x7, t15, 1).
weight(x151, t15, 1).
weight(t15, x0, 1).
weight(t15, x152, 1).
weight(x7, t16, 1).
weight(t16, x8, 1).
weight(x8, t17, 1).
weight(x151, t17, 1).
weight(t17, x0, 1).
weight(t17, x152, 1).
weight(x8, t18, 1).
weight(t18, x9, 1).
weight(x9, t19, 1).
weight(x151, t19, 1).
weight(t19, x0, 1).
weight(t19, x152, 1).
weight(x9, t20, 1).
weight(t20, x10, 1).
weight(x10, t21, 1).
weight(x151, t21, 1).
weight(t21, x0, 1).
weight(t21, x152, 1).
weight(x10, t22, 1).
weight(t22, x11, 1).
weight(x11, t23, 1).
weight(x151, t23, 1).
weight(t23, x0, 1).
weight(t23, x152, 1).
weight(x11, t24, 1).
weight(t24, x12, 1).
weight(x12, t25, 1).
weight(x151, t25, 1).
weight(t25, x0, 1).
weight(t25, x152, 1).
weight(x12, t26, 1).
weight(t26, x13, 1).
weight(x13, t27, 1).
weight(x151, t27, 1).
weight(t27, x0, 1).
weight(t27, x152, 1).
weight(x13, t28, 1).
weight(t28, x14, 1).
weight(x14, t29, 1).
weight(x151, t29, 1).
weight(t29, x0, 1).
weight(t29, x152, 1).
weight(x14, t30, 1).
weight(t30, x15, 1).
weight(x15, t31, 1).
weight(x151, t31, 1).
weight(t31, x0, 1).
weight(t31, x152, 1).
weight(x15, t32, 1).
weight(t32, x16, 1).
weight(x16, t33, 1).
weight(x151, t33, 1).
weight(t33, x0, 1).
weight(t33, x152, 1).
weight(x16, t34, 1).
weight(t34, x17, 1).
weight(x17, t35, 1).
weight(x151, t35, 1).
weight(t35, x0, 1).
weight(t35, x152, 1).
weight(x17, t36, 1).
weight(t36, x18, 1).
weight(x18, t37, 1).
weight(x151, t37, 1).
weight(t37, x0, 1).
weight(t37, x152, 1).
weight(x18, t38, 1).
weight(t38, x19, 1).
weight(x19, t39, 1).
weight(x151, t39, 1).
weight(t39, x0, 1).
weight(t39, x152, 1).
weight(x19, t40, 1).
weight(t40, x20, 1).
weight(x20, t41, 1).
weight(x151, t41, 1).
weight(t41, x0, 1).
weight(t41, x152, 1).
weight(x20, t42, 1).
weight(t42, x21, 1).
weight(x21, t43, 1).
weight(x151, t43, 1).
weight(t43, x0, 1).
weight(t43, x152, 1).
weight(x21, t44, 1).
weight(t44, x22, 1).
weight(x22, t45, 1).
weight(x151, t45, 1).
weight(t45, x0, 1).
weight(t45, x152, 1).
weight(x22, t46, 1).
weight(t46, x23, 1).
weight(x23, t47, 1).
weight(x151, t47, 1).
weight(t47, x0, 1).
weight(t47, x152, 1).
weight(x23, t48, 1).
weight(t48, x24, 1).
weight(x24, t49, 1).
weight(x151, t49, 1).
weight(t49, x0, 1).
weight(t49, x152, 1).
weight(x24, t50, 1).
weight(t50, x25, 1).
weight(x25, t51, 1).
weight(x151, t51, 1).
weight(t51, x0, 1).
weight(t51, x152, 1).
weight(x25, t52, 1).
weight(t52, x26, 1).
weight(x26, t53, 1).
weight(x151, t53, 1).
weight(t53, x0, 1).
weight(t53, x152, 1).
weight(x26, t54, 1).
weight(t54, x27, 1).
weight(x27, t55, 1).
weight(x151, t55, 1).
weight(t55, x0, 1).
weight(t55, x152, 1).
weight(x27, t56, 1).
weight(t56, x28, 1).
weight(x28, t57, 1).
weight(x151, t57, 1).
weight(t57, x0, 1).
weight(t57, x152, 1).
weight(x28, t58, 1).
weight(t58, x29, 1).
weight(x29, t59, 1).
weight(x151, t59, 1).
weight(t59, x0, 1).
weight(t59, x152, 1).
weight(x29, t60, 1).
weight(t60, x30, 1).
weight(x30, t61, 1).
weight(x151, t61, 1).
weight(t61, x0, 1).
weight(t61, x152, 1).
weight(x30, t62, 1).
weight(t62, x31, 1).
weight(x31, t63, 1).
weight(x151, t63, 1).
weight(t63, x0, 1).
weight(t63, x152, 1).
weight(x31, t64, 1).
weight(t64, x32, 1).
weight(x32, t65, 1).
weight(x151, t65, 1).
weight(t65, x0, 1).
weight(t65, x152, 1).
weight(x32, t66, 1).
weight(t66, x33, 1).
weight(x33, t67, 1).
weight(x151, t67, 1).
weight(t67, x0, 1).
weight(t67, x152, 1).
weight(x33, t68, 1).
weight(t68, x34, 1).
weight(x34, t69, 1).
weight(x151, t69, 1).
weight(t69, x0, 1).
weight(t69, x152, 1).
weight(x34, t70, 1).
weight(t70, x35, 1).
weight(x35, t71, 1).
weight(x151, t71, 1).
weight(t71, x0, 1).
weight(t71, x152, 1).
weight(x35, t72, 1).
weight(t72, x36, 1).
weight(x36, t73, 1).
weight(x151, t73, 1).
weight(t73, x0, 1).
weight(t73, x152, 1).
weight(x36, t74, 1).
weight(t74, x37, 1).
weight(x37, t75, 1).
weight(x151, t75, 1).
weight(t75, x0, 1).
weight(t75, x152, 1).
weight(x37, t76, 1).
weight(t76, x38, 1).
weight(x38, t77, 1).
weight(x151, t77, 1).
weight(t77, x0, 1).
weight(t77, x152, 1).
weight(x38, t78, 1).
weight(t78, x39, 1).
weight(x39, t79, 1).
weight(x151, t79, 1).
weight(t79, x0, 1).
weight(t79, x152, 1).
weight(x39, t80, 1).
weight(t80, x40, 1).
weight(x40, t81, 1).
weight(x151, t81, 1).
weight(t81, x0, 1).
weight(t81, x152, 1).
weight(x40, t82, 1).
weight(t82, x41, 1).
weight(x41, t83, 1).
weight(x151, t83, 1).
weight(t83, x0, 1).
weight(t83, x152, 1).
weight(x41, t84, 1).
weight(t84, x42, 1).
weight(x42, t85, 1).
weight(x151, t85, 1).
weight(t85, x0, 1).
weight(t85, x152, 1).
weight(x42, t86, 1).
weight(t86, x43, 1).
weight(x43, t87, 1).
weight(x151, t87, 1).
weight(t87, x0, 1).
weight(t87, x152, 1).
weight(x43, t88, 1).
weight(t88, x44, 1).
weight(x44, t89, 1).
weight(x151, t89, 1).
weight(t89, x0, 1).
weight(t89, x152, 1).
weight(x44, t90, 1).
weight(t90, x45, 1).
weight(x45, t91, 1).
weight(x151, t91, 1).
weight(t91, x0, 1).
weight(t91, x152, 1).
weight(x45, t92, 1).
weight(t92, x46, 1).
weight(x46, t93, 1).
weight(x151, t93, 1).
weight(t93, x0, 1).
weight(t93, x152, 1).
weight(x46, t94, 1).
weight(t94, x47, 1).
weight(x47, t95, 1).
weight(x151, t95, 1).
weight(t95, x0, 1).
weight(t95, x152, 1).
weight(x47, t96, 1).
weight(t96, x48, 1).
weight(x48, t97, 1).
weight(x151, t97, 1).
weight(t97, x0, 1).
weight(t97, x152, 1).
weight(x48, t98, 1).
weight(t98, x49, 1).
weight(x49, t99, 1).
weight(x151, t99, 1).
weight(t99, x0, 1).
weight(t99, x152, 1).
weight(x49, t100, 1).
weight(t100, x50, 1).
weight(x50, t101, 1).
weight(x151, t101, 1).
weight(t101, x0, 1).
weight(t101, x152, 1).
weight(x50, t102, 1).
weight(t102, x51, 1).
weight(x51, t103, 1).
weight(x151, t103, 1).
weight(t103, x0, 1).
weight(t103, x152, 1).
weight(x51, t104, 1).
weight(t104, x52, 1).
weight(x52, t105, 1).
weight(x151, t105, 1).
weight(t105, x0, 1).
weight(t105, x152, 1).
weight(x52, t106, 1).
weight(t106, x53, 1).
weight(x53, t107, 1).
weight(x151, t107, 1).
weight(t107, x0, 1).
weight(t107, x152, 1).
weight(x53, t108, 1).
weight(t108, x54, 1).
weight(x54, t109, 1).
weight(x151, t109, 1).
weight(t109, x0, 1).
weight(t109, x152, 1).
weight(x54, t110, 1).
weight(t110, x55, 1).
weight(x55, t111, 1).
weight(x151, t111, 1).
weight(t111, x0, 1).
weight(t111, x152, 1).
weight(x55, t112, 1).
weight(t112, x56, 1).
weight(x56, t113, 1).
weight(x151, t113, 1).
weight(t113, x0, 1).
weight(t113, x152, 1).
weight(x56, t114, 1).
weight(t114, x57, 1).
weight(x57, t115, 1).
weight(x151, t115, 1).
weight(t115, x0, 1).
weight(t115, x152, 1).
weight(x57, t116, 1).
weight(t116, x58, 1).
weight(x58, t117, 1).
weight(x151, t117, 1).
weight(t117, x0, 1).
weight(t117, x152, 1).
weight(x58, t118, 1).
weight(t118, x59, 1).
weight(x59, t119, 1).
weight(x151, t119, 1).
weight(t119, x0, 1).
weight(t119, x152, 1).
weight(x59, t120, 1).
weight(t120, x60, 1).
weight(x60, t121, 1).
weight(x151, t121, 1).
weight(t121, x0, 1).
weight(t121, x152, 1).
weight(x60, t122, 1).
weight(t122, x61, 1).
weight(x61, t123, 1).
weight(x151, t123, 1).
weight(t123, x0, 1).
weight(t123, x152, 1).
weight(x61, t124, 1).
weight(t124, x62, 1).
weight(x62, t125, 1).
weight(x151, t125, 1).
weight(t125, x0, 1).
weight(t125, x152, 1).
weight(x62, t126, 1).
weight(t126, x63, 1).
weight(x63, t127, 1).
weight(x151, t127, 1).
weight(t127, x0, 1).
weight(t127, x152, 1).
weight(x63, t128, 1).
weight(t128, x64, 1).
weight(x64, t129, 1).
weight(x151, t129, 1).
weight(t129, x0, 1).
weight(t129, x152, 1).
weight(x64, t130, 1).
weight(t130, x65, 1).
weight(x65, t131, 1).
weight(x151, t131, 1).
weight(t131, x0, 1).
weight(t131, x152, 1).
weight(x65, t132, 1).
weight(t132, x66, 1).
weight(x66, t133, 1).
weight(x151, t133, 1).
weight(t133, x0, 1).
weight(t133, x152, 1).
weight(x66, t134, 1).
weight(t134, x67, 1).
weight(x67, t135, 1).
weight(x151, t135, 1).
weight(t135, x0, 1).
weight(t135, x152, 1).
weight(x67, t136, 1).
weight(t136, x68, 1).
weight(x68, t137, 1).
weight(x151, t137, 1).
weight(t137, x0, 1).
weight(t137, x152, 1).
weight(x68, t138, 1).
weight(t138, x69, 1).
weight(x69, t139, 1).
weight(x151, t139, 1).
weight(t139, x0, 1).
weight(t139, x152, 1).
weight(x69, t140, 1).
weight(t140, x70, 1).
weight(x70, t141, 1).
weight(x151, t141, 1).
weight(t141, x0, 1).
weight(t141, x152, 1).
weight(x70, t142, 1).
weight(t142, x71, 1).
weight(x71, t143, 1).
weight(x151, t143, 1).
weight(t143, x0, 1).
weight(t143, x152, 1).
weight(x71, t144, 1).
weight(t144, x72, 1).
weight(x72, t145, 1).
weight(x151, t145, 1).
weight(t145, x0, 1).
weight(t145, x152, 1).
weight(x72, t146, 1).
weight(t146, x73, 1).
weight(x73, t147, 1).
weight(x151, t147, 1).
weight(t147, x0, 1).
weight(t147, x152, 1).
weight(x73, t148, 1).
weight(t148, x74, 1).
weight(x74, t149, 1).
weight(x151, t149, 1).
weight(t149, x0, 1).
weight(t149, x152, 1).
weight(x74, t150, 1).
weight(t150, x75, 1).
weight(x75, t151, 1).
weight(x151, t151, 1).
weight(t151, x0, 1).
weight(t151, x152, 1).
weight(x75, t152, 1).
weight(t152, x76, 1).
weight(x76, t153, 1).
weight(x151, t153, 1).
weight(t153, x0, 1).
weight(t153, x152, 1).
weight(x76, t154, 1).
weight(t154, x77, 1).
weight(x77, t155, 1).
weight(x151, t155, 1).
weight(t155, x0, 1).
weight(t155, x152, 1).
weight(x77, t156, 1).
weight(t156, x78, 1).
weight(x78, t157, 1).
weight(x151, t157, 1).
weight(t157, x0, 1).
weight(t157, x152, 1).
weight(x78, t158, 1).
weight(t158, x79, 1).
weight(x79, t159, 1).
weight(x151, t159, 1).
weight(t159, x0, 1).
weight(t159, x152, 1).
weight(x79, t160, 1).
weight(t160, x80, 1).
weight(x80, t161, 1).
weight(x151, t161, 1).
weight(t161, x0, 1).
weight(t161, x152, 1).
weight(x80, t162, 1).
weight(t162, x81, 1).
weight(x81, t163, 1).
weight(x151, t163, 1).
weight(t163, x0, 1).
weight(t163, x152, 1).
weight(x81, t164, 1).
weight(t164, x82, 1).
weight(x82, t165, 1).
weight(x151, t165, 1).
weight(t165, x0, 1).
weight(t165, x152, 1).
weight(x82, t166, 1).
weight(t166, x83, 1).
weight(x83, t167, 1).
weight(x151, t167, 1).
weight(t167, x0, 1).
weight(t167, x152, 1).
weight(x83, t168, 1).
weight(t168, x84, 1).
weight(x84, t169, 1).
weight(x151, t169, 1).
weight(t169, x0, 1).
weight(t169, x152, 1).
weight(x84, t170, 1).
weight(t170, x85, 1).
weight(x85, t171, 1).
weight(x151, t171, 1).
weight(t171, x0, 1).
weight(t171, x152, 1).
weight(x85, t172, 1).
weight(t172, x86, 1).
weight(x86, t173, 1).
weight(x151, t173, 1).
weight(t173, x0, 1).
weight(t173, x152, 1).
weight(x86, t174, 1).
weight(t174, x87, 1).
weight(x87, t175, 1).
weight(x151, t175, 1).
weight(t175, x0, 1).
weight(t175, x152, 1).
weight(x87, t176, 1).
weight(t176, x88, 1).
weight(x88, t177, 1).
weight(x151, t177, 1).
weight(t177, x0, 1).
weight(t177, x152, 1).
weight(x88, t178, 1).
weight(t178, x89, 1).
weight(x89, t179, 1).
weight(x151, t179, 1).
weight(t179, x0, 1).
weight(t179, x152, 1).
weight(x89, t180, 1).
weight(t180, x90, 1).
weight(x90, t181, 1).
weight(x151, t181, 1).
weight(t181, x0, 1).
weight(t181, x152, 1).
weight(x90, t182, 1).
weight(t182, x91, 1).
weight(x91, t183, 1).
weight(x151, t183, 1).
weight(t183, x0, 1).
weight(t183, x152, 1).
weight(x91, t184, 1).
weight(t184, x92, 1).
weight(x92, t185, 1).
weight(x151, t185, 1).
weight(t185, x0, 1).
weight(t185, x152, 1).
weight(x92, t186, 1).
weight(t186, x93, 1).
weight(x93, t187, 1).
weight(x151, t187, 1).
weight(t187, x0, 1).
weight(t187, x152, 1).
weight(x93, t188, 1).
weight(t188, x94, 1).
weight(x94, t189, 1).
weight(x151, t189, 1).
weight(t189, x0, 1).
weight(t189, x152, 1).
weight(x94, t190, 1).
weight(t190, x95, 1).
weight(x95, t191, 1).
weight(x151, t191, 1).
weight(t191, x0, 1).
weight(t191, x152, 1).
weight(x95, t192, 1).
weight(t192, x96, 1).
weight(x96, t193, 1).
weight(x151, t193, 1).
weight(t193, x0, 1).
weight(t193, x152, 1).
weight(x96, t194, 1).
weight(t194, x97, 1).
weight(x97, t195, 1).
weight(x151, t195, 1).
weight(t195, x0, 1).
weight(t195, x152, 1).
weight(x97, t196, 1).
weight(t196, x98, 1).
weight(x98, t197, 1).
weight(x151, t197, 1).
weight(t197, x0, 1).
weight(t197, x152, 1).
weight(x98, t198, 1).
weight(t198, x99, 1).
weight(x99, t199, 1).
weight(x151, t199, 1).
weight(t199, x0, 1).
weight(t199, x152, 1).
weight(x99, t200, 1).
weight(t200, x100, 1).
weight(x100, t201, 1).
weight(x151, t201, 1).
weight(t201, x0, 1).
weight(t201, x152, 1).
weight(x100, t202, 1).
weight(t202, x101, 1).
weight(x101, t203, 1).
weight(x151, t203, 1).
weight(t203, x0, 1).
weight(t203, x152, 1).
weight(x101, t204, 1).
weight(t204, x102, 1).
weight(x102, t205, 1).
weight(x151, t205, 1).
weight(t205, x0, 1).
weight(t205, x152, 1).
weight(x102, t206, 1).
weight(t206, x103, 1).
weight(x103, t207, 1).
weight(x151, t207, 1).
weight(t207, x0, 1).
weight(t207, x152, 1).
weight(x103, t208, 1).
weight(t208, x104, 1).
weight(x104, t209, 1).
weight(x151, t209, 1).
weight(t209, x0, 1).
weight(t209, x152, 1).
weight(x104, t210, 1).
weight(t210, x105, 1).
weight(x105, t211, 1).
weight(x151, t211, 1).
weight(t211, x0, 1).
weight(t211, x152, 1).
weight(x105, t212, 1).
weight(t212, x106, 1).
weight(x106, t213, 1).
weight(x151, t213, 1).
weight(t213, x0, 1).
weight(t213, x152, 1).
weight(x106, t214, 1).
weight(t214, x107, 1).
weight(x107, t215, 1).
weight(x151, t215, 1).
weight(t215, x0, 1).
weight(t215, x152, 1).
weight(x107, t216, 1).
weight(t216, x108, 1).
weight(x108, t217, 1).
weight(x151, t217, 1).
weight(t217, x0, 1).
weight(t217, x152, 1).
weight(x108, t218, 1).
weight(t218, x109, 1).
weight(x109, t219, 1).
weight(x151, t219, 1).
weight(t219, x0, 1).
weight(t219, x152, 1).
weight(x109, t220, 1).
weight(t220, x110, 1).
weight(x110, t221, 1).
weight(x151, t221, 1).
weight(t221, x0, 1).
weight(t221, x152, 1).
weight(x110, t222, 1).
weight(t222, x111, 1).
weight(x111, t223, 1).
weight(x151, t223, 1).
weight(t223, x0, 1).
weight(t223, x152, 1).
weight(x111, t224, 1).
weight(t224, x112, 1).
weight(x112, t225, 1).
weight(x151, t225, 1).
weight(t225, x0, 1).
weight(t225, x152, 1).
weight(x112, t226, 1).
weight(t226, x113, 1).
weight(x113, t227, 1).
weight(x151, t227, 1).
weight(t227, x0, 1).
weight(t227, x152, 1).
weight(x113, t228, 1).
weight(t228, x114, 1).
weight(x114, t229, 1).
weight(x151, t229, 1).
weight(t229, x0, 1).
weight(t229, x152, 1).
weight(x114, t230, 1).
weight(t230, x115, 1).
weight(x115, t231, 1).
weight(x151, t231, 1).
weight(t231, x0, 1).
weight(t231, x152, 1).
weight(x115, t232, 1).
weight(t232, x116, 1).
weight(x116, t233, 1).
weight(x151, t233, 1).
weight(t233, x0, 1).
weight(t233, x152, 1).
weight(x116, t234, 1).
weight(t234, x117, 1).
weight(x117, t235, 1).
weight(x151, t235, 1).
weight(t235, x0, 1).
weight(t235, x152, 1).
weight(x117, t236, 1).
weight(t236, x118, 1).
weight(x118, t237, 1).
weight(x151, t237, 1).
weight(t237, x0, 1).
weight(t237, x152, 1).
weight(x118, t238, 1).
weight(t238, x119, 1).
weight(x119, t239, 1).
weight(x151, t239, 1).
weight(t239, x0, 1).
weight(t239, x152, 1).
weight(x119, t240, 1).
weight(t240, x120, 1).
weight(x120, t241, 1).
weight(x151, t241, 1).
weight(t241, x0, 1).
weight(t241, x152, 1).
weight(x120, t242, 1).
weight(t242, x121, 1).
weight(x121, t243, 1).
weight(x151, t243, 1).
weight(t243, x0, 1).
weight(t243, x152, 1).
weight(x121, t244, 1).
weight(t244, x122, 1).
weight(x122, t245, 1).
weight(x151, t245, 1).
weight(t245, x0, 1).
weight(t245, x152, 1).
weight(x122, t246, 1).
weight(t246, x123, 1).
weight(x123, t247, 1).
weight(x151, t247, 1).
weight(t247, x0, 1).
weight(t247, x152, 1).
weight(x123, t248, 1).
weight(t248, x124, 1).
weight(x124, t249, 1).
weight(x151, t249, 1).
weight(t249, x0, 1).
weight(t249, x152, 1).
weight(x124, t250, 1).
weight(t250, x125, 1).
weight(x125, t251, 1).
weight(x151, t251, 1).
weight(t251, x0, 1).
weight(t251, x152, 1).
weight(x125, t252, 1).
weight(t252, x126, 1).
weight(x126, t253, 1).
weight(x151, t253, 1).
weight(t253, x0, 1).
weight(t253, x152, 1).
weight(x126, t254, 1).
weight(t254, x127, 1).
weight(x127, t255, 1).
weight(x151, t255, 1).
weight(t255, x0, 1).
weight(t255, x152, 1).
weight(x127, t256, 1).
weight(t256, x128, 1).
weight(x128, t257, 1).
weight(x151, t257, 1).
weight(t257, x0, 1).
weight(t257, x152, 1).
weight(x128, t258, 1).
weight(t258, x129, 1).
weight(x129, t259, 1).
weight(x151, t259, 1).
weight(t259, x0, 1).
weight(t259, x152, 1).
weight(x129, t260, 1).
weight(t260, x130, 1).
weight(x130, t261, 1).
weight(x151, t261, 1).
weight(t261, x0, 1).
weight(t261, x152, 1).
weight(x130, t262, 1).
weight(t262, x131, 1).
weight(x131, t263, 1).
weight(x151, t263, 1).
weight(t263, x0, 1).
weight(t263, x152, 1).
weight(x131, t264, 1).
weight(t264, x132, 1).
weight(x132, t265, 1).
weight(x151, t265, 1).
weight(t265, x0, 1).
weight(t265, x152, 1).
weight(x132, t266, 1).
weight(t266, x133, 1).
weight(x133, t267, 1).
weight(x151, t267, 1).
weight(t267, x0, 1).
weight(t267, x152, 1).
weight(x133, t268, 1).
weight(t268, x134, 1).
weight(x134, t269, 1).
weight(x151, t269, 1).
weight(t269, x0, 1).
weight(t269, x152, 1).
weight(x134, t270, 1).
weight(t270, x135, 1).
weight(x135, t271, 1).
weight(x151, t271, 1).
weight(t271, x0, 1).
weight(t271, x152, 1).
weight(x135, t272, 1).
weight(t272, x136, 1).
weight(x136, t273, 1).
weight(x151, t273, 1).
weight(t273, x0, 1).
weight(t273, x152, 1).
weight(x136, t274, 1).
weight(t274, x137, 1).
weight(x137, t275, 1).
weight(x151, t275, 1).
weight(t275, x0, 1).
weight(t275, x152, 1).
weight(x137, t276, 1).
weight(t276, x138, 1).
weight(x138, t277, 1).
weight(x151, t277, 1).
weight(t277, x0, 1).
weight(t277, x152, 1).
weight(x138, t278, 1).
weight(t278, x139, 1).
weight(x139, t279, 1).
weight(x151, t279, 1).
weight(t279, x0, 1).
weight(t279, x152, 1).
weight(x139, t280, 1).
weight(t280, x140, 1).
weight(x140, t281, 1).
weight(x151, t281, 1).
weight(t281, x0, 1).
weight(t281, x152, 1).
weight(x140, t282, 1).
weight(t282, x141, 1).
weight(x141, t283, 1).
weight(x151, t283, 1).
weight(t283, x0, 1).
weight(t283, x152, 1).
weight(x141, t284, 1).
weight(t284, x142, 1).
weight(x142, t285, 1).
weight(x151, t285, 1).
weight(t285, x0, 1).
weight(t285, x152, 1).
weight(x142, t286, 1).
weight(t286, x143, 1).
weight(x143, t287, 1).
weight(x151, t287, 1).
weight(t287, x0, 1).
weight(t287, x152, 1).
weight(x143, t288, 1).
weight(t288, x144, 1).
weight(x144, t289, 1).
weight(x151, t289, 1).
weight(t289, x0, 1).
weight(t289, x152, 1).
weight(x144, t290, 1).
weight(t290, x145, 1).
weight(x145, t291, 1).
weight(x151, t291, 1).
weight(t291, x0, 1).
weight(t291, x152, 1).
weight(x145, t292, 1).
weight(t292, x146, 1).
weight(x146, t293, 1).
weight(x151, t293, 1).
weight(t293, x0, 1).
weight(t293, x152, 1).
weight(x146, t294, 1).
weight(t294, x147, 1).
weight(x147, t295, 1).
weight(x151, t295, 1).
weight(t295, x0, 1).
weight(t295, x152, 1).
weight(x147, t296, 1).
weight(t296, x148, 1).
weight(x148, t297, 1).
weight(x151, t297, 1).
weight(t297, x0, 1).
weight(t297, x152, 1).
weight(x148, t298, 1).
weight(t298, x149, 1).
weight(x149, t299, 1).
weight(x151, t299, 1).
weight(t299, x0, 1).
weight(t299, x152, 1).
weight(x149, t300, 1).
weight(t300, x150, 1).
weight(x150, t301, 1).
weight(x151, t301, 1).
weight(t301, x0, 1).
weight(t301, x152, 1).
weight(init1, x0, 1).

init(x0, 1).
init(x152, 1).

cond('(>= x150 2)').

target(x150, 2).


* Constructing constraints C' for petri net N
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun x10 () Real)
(declare-fun x11 () Real)
(declare-fun x12 () Real)
(declare-fun x13 () Real)
(declare-fun x14 () Real)
(declare-fun x15 () Real)
(declare-fun x16 () Real)
(declare-fun x17 () Real)
(declare-fun x18 () Real)
(declare-fun x19 () Real)
(declare-fun x20 () Real)
(declare-fun x21 () Real)
(declare-fun x22 () Real)
(declare-fun x23 () Real)
(declare-fun x24 () Real)
(declare-fun x25 () Real)
(declare-fun x26 () Real)
(declare-fun x27 () Real)
(declare-fun x28 () Real)
(declare-fun x29 () Real)
(declare-fun x30 () Real)
(declare-fun x31 () Real)
(declare-fun x32 () Real)
(declare-fun x33 () Real)
(declare-fun x34 () Real)
(declare-fun x35 () Real)
(declare-fun x36 () Real)
(declare-fun x37 () Real)
(declare-fun x38 () Real)
(declare-fun x39 () Real)
(declare-fun x40 () Real)
(declare-fun x41 () Real)
(declare-fun x42 () Real)
(declare-fun x43 () Real)
(declare-fun x44 () Real)
(declare-fun x45 () Real)
(declare-fun x46 () Real)
(declare-fun x47 () Real)
(declare-fun x48 () Real)
(declare-fun x49 () Real)
(declare-fun x50 () Real)
(declare-fun x51 () Real)
(declare-fun x52 () Real)
(declare-fun x53 () Real)
(declare-fun x54 () Real)
(declare-fun x55 () Real)
(declare-fun x56 () Real)
(declare-fun x57 () Real)
(declare-fun x58 () Real)
(declare-fun x59 () Real)
(declare-fun x60 () Real)
(declare-fun x61 () Real)
(declare-fun x62 () Real)
(declare-fun x63 () Real)
(declare-fun x64 () Real)
(declare-fun x65 () Real)
(declare-fun x66 () Real)
(declare-fun x67 () Real)
(declare-fun x68 () Real)
(declare-fun x69 () Real)
(declare-fun x70 () Real)
(declare-fun x71 () Real)
(declare-fun x72 () Real)
(declare-fun x73 () Real)
(declare-fun x74 () Real)
(declare-fun x75 () Real)
(declare-fun x76 () Real)
(declare-fun x77 () Real)
(declare-fun x78 () Real)
(declare-fun x79 () Real)
(declare-fun x80 () Real)
(declare-fun x81 () Real)
(declare-fun x82 () Real)
(declare-fun x83 () Real)
(declare-fun x84 () Real)
(declare-fun x85 () Real)
(declare-fun x86 () Real)
(declare-fun x87 () Real)
(declare-fun x88 () Real)
(declare-fun x89 () Real)
(declare-fun x90 () Real)
(declare-fun x91 () Real)
(declare-fun x92 () Real)
(declare-fun x93 () Real)
(declare-fun x94 () Real)
(declare-fun x95 () Real)
(declare-fun x96 () Real)
(declare-fun x97 () Real)
(declare-fun x98 () Real)
(declare-fun x99 () Real)
(declare-fun x100 () Real)
(declare-fun x101 () Real)
(declare-fun x102 () Real)
(declare-fun x103 () Real)
(declare-fun x104 () Real)
(declare-fun x105 () Real)
(declare-fun x106 () Real)
(declare-fun x107 () Real)
(declare-fun x108 () Real)
(declare-fun x109 () Real)
(declare-fun x110 () Real)
(declare-fun x111 () Real)
(declare-fun x112 () Real)
(declare-fun x113 () Real)
(declare-fun x114 () Real)
(declare-fun x115 () Real)
(declare-fun x116 () Real)
(declare-fun x117 () Real)
(declare-fun x118 () Real)
(declare-fun x119 () Real)
(declare-fun x120 () Real)
(declare-fun x121 () Real)
(declare-fun x122 () Real)
(declare-fun x123 () Real)
(declare-fun x124 () Real)
(declare-fun x125 () Real)
(declare-fun x126 () Real)
(declare-fun x127 () Real)
(declare-fun x128 () Real)
(declare-fun x129 () Real)
(declare-fun x130 () Real)
(declare-fun x131 () Real)
(declare-fun x132 () Real)
(declare-fun x133 () Real)
(declare-fun x134 () Real)
(declare-fun x135 () Real)
(declare-fun x136 () Real)
(declare-fun x137 () Real)
(declare-fun x138 () Real)
(declare-fun x139 () Real)
(declare-fun x140 () Real)
(declare-fun x141 () Real)
(declare-fun x142 () Real)
(declare-fun x143 () Real)
(declare-fun x144 () Real)
(declare-fun x145 () Real)
(declare-fun x146 () Real)
(declare-fun x147 () Real)
(declare-fun x148 () Real)
(declare-fun x149 () Real)
(declare-fun x150 () Real)
(declare-fun x151 () Real)
(declare-fun x152 () Real)
(declare-fun x0 () Real)
(assert (>= 0 (+ (- x0) x1 x151 (- x152))))
(assert (>= 0 (+ x0 (- x1) x151 (- x152))))
(assert (>= 0 (+ x0 (- x1) (- x151) x152)))
(assert (>= 0 (+ (- x1) x2)))
(assert (>= 0 (+ x0 (- x151) x152 (- x2))))
(assert (>= 0 (+ (- x2) x3)))
(assert (>= 0 (+ x0 (- x151) x152 (- x3))))
(assert (>= 0 (+ (- x3) x4)))
(assert (>= 0 (+ x0 (- x151) x152 (- x4))))
(assert (>= 0 (+ (- x4) x5)))
(assert (>= 0 (+ x0 (- x151) x152 (- x5))))
(assert (>= 0 (+ (- x5) x6)))
(assert (>= 0 (+ x0 (- x151) x152 (- x6))))
(assert (>= 0 (+ (- x6) x7)))
(assert (>= 0 (+ x0 (- x151) x152 (- x7))))
(assert (>= 0 (+ (- x7) x8)))
(assert (>= 0 (+ x0 (- x151) x152 (- x8))))
(assert (>= 0 (+ (- x8) x9)))
(assert (>= 0 (+ x0 (- x151) x152 (- x9))))
(assert (>= 0 (+ x10 (- x9))))
(assert (>= 0 (+ x0 (- x10) (- x151) x152)))
(assert (>= 0 (+ (- x10) x11)))
(assert (>= 0 (+ x0 (- x11) (- x151) x152)))
(assert (>= 0 (+ (- x11) x12)))
(assert (>= 0 (+ x0 (- x12) (- x151) x152)))
(assert (>= 0 (+ (- x12) x13)))
(assert (>= 0 (+ x0 (- x13) (- x151) x152)))
(assert (>= 0 (+ (- x13) x14)))
(assert (>= 0 (+ x0 (- x14) (- x151) x152)))
(assert (>= 0 (+ (- x14) x15)))
(assert (>= 0 (+ x0 (- x15) (- x151) x152)))
(assert (>= 0 (+ (- x15) x16)))
(assert (>= 0 (+ x0 (- x151) x152 (- x16))))
(assert (>= 0 (+ (- x16) x17)))
(assert (>= 0 (+ x0 (- x151) x152 (- x17))))
(assert (>= 0 (+ (- x17) x18)))
(assert (>= 0 (+ x0 (- x151) x152 (- x18))))
(assert (>= 0 (+ (- x18) x19)))
(assert (>= 0 (+ x0 (- x151) x152 (- x19))))
(assert (>= 0 (+ (- x19) x20)))
(assert (>= 0 (+ x0 (- x151) x152 (- x20))))
(assert (>= 0 (+ (- x20) x21)))
(assert (>= 0 (+ x0 (- x151) x152 (- x21))))
(assert (>= 0 (+ (- x21) x22)))
(assert (>= 0 (+ x0 (- x151) x152 (- x22))))
(assert (>= 0 (+ (- x22) x23)))
(assert (>= 0 (+ x0 (- x151) x152 (- x23))))
(assert (>= 0 (+ (- x23) x24)))
(assert (>= 0 (+ x0 (- x151) x152 (- x24))))
(assert (>= 0 (+ (- x24) x25)))
(assert (>= 0 (+ x0 (- x151) x152 (- x25))))
(assert (>= 0 (+ (- x25) x26)))
(assert (>= 0 (+ x0 (- x151) x152 (- x26))))
(assert (>= 0 (+ (- x26) x27)))
(assert (>= 0 (+ x0 (- x151) x152 (- x27))))
(assert (>= 0 (+ (- x27) x28)))
(assert (>= 0 (+ x0 (- x151) x152 (- x28))))
(assert (>= 0 (+ (- x28) x29)))
(assert (>= 0 (+ x0 (- x151) x152 (- x29))))
(assert (>= 0 (+ (- x29) x30)))
(assert (>= 0 (+ x0 (- x151) x152 (- x30))))
(assert (>= 0 (+ (- x30) x31)))
(assert (>= 0 (+ x0 (- x151) x152 (- x31))))
(assert (>= 0 (+ (- x31) x32)))
(assert (>= 0 (+ x0 (- x151) x152 (- x32))))
(assert (>= 0 (+ (- x32) x33)))
(assert (>= 0 (+ x0 (- x151) x152 (- x33))))
(assert (>= 0 (+ (- x33) x34)))
(assert (>= 0 (+ x0 (- x151) x152 (- x34))))
(assert (>= 0 (+ (- x34) x35)))
(assert (>= 0 (+ x0 (- x151) x152 (- x35))))
(assert (>= 0 (+ (- x35) x36)))
(assert (>= 0 (+ x0 (- x151) x152 (- x36))))
(assert (>= 0 (+ (- x36) x37)))
(assert (>= 0 (+ x0 (- x151) x152 (- x37))))
(assert (>= 0 (+ (- x37) x38)))
(assert (>= 0 (+ x0 (- x151) x152 (- x38))))
(assert (>= 0 (+ (- x38) x39)))
(assert (>= 0 (+ x0 (- x151) x152 (- x39))))
(assert (>= 0 (+ (- x39) x40)))
(assert (>= 0 (+ x0 (- x151) x152 (- x40))))
(assert (>= 0 (+ (- x40) x41)))
(assert (>= 0 (+ x0 (- x151) x152 (- x41))))
(assert (>= 0 (+ (- x41) x42)))
(assert (>= 0 (+ x0 (- x151) x152 (- x42))))
(assert (>= 0 (+ (- x42) x43)))
(assert (>= 0 (+ x0 (- x151) x152 (- x43))))
(assert (>= 0 (+ (- x43) x44)))
(assert (>= 0 (+ x0 (- x151) x152 (- x44))))
(assert (>= 0 (+ (- x44) x45)))
(assert (>= 0 (+ x0 (- x151) x152 (- x45))))
(assert (>= 0 (+ (- x45) x46)))
(assert (>= 0 (+ x0 (- x151) x152 (- x46))))
(assert (>= 0 (+ (- x46) x47)))
(assert (>= 0 (+ x0 (- x151) x152 (- x47))))
(assert (>= 0 (+ (- x47) x48)))
(assert (>= 0 (+ x0 (- x151) x152 (- x48))))
(assert (>= 0 (+ (- x48) x49)))
(assert (>= 0 (+ x0 (- x151) x152 (- x49))))
(assert (>= 0 (+ (- x49) x50)))
(assert (>= 0 (+ x0 (- x151) x152 (- x50))))
(assert (>= 0 (+ (- x50) x51)))
(assert (>= 0 (+ x0 (- x151) x152 (- x51))))
(assert (>= 0 (+ (- x51) x52)))
(assert (>= 0 (+ x0 (- x151) x152 (- x52))))
(assert (>= 0 (+ (- x52) x53)))
(assert (>= 0 (+ x0 (- x151) x152 (- x53))))
(assert (>= 0 (+ (- x53) x54)))
(assert (>= 0 (+ x0 (- x151) x152 (- x54))))
(assert (>= 0 (+ (- x54) x55)))
(assert (>= 0 (+ x0 (- x151) x152 (- x55))))
(assert (>= 0 (+ (- x55) x56)))
(assert (>= 0 (+ x0 (- x151) x152 (- x56))))
(assert (>= 0 (+ (- x56) x57)))
(assert (>= 0 (+ x0 (- x151) x152 (- x57))))
(assert (>= 0 (+ (- x57) x58)))
(assert (>= 0 (+ x0 (- x151) x152 (- x58))))
(assert (>= 0 (+ (- x58) x59)))
(assert (>= 0 (+ x0 (- x151) x152 (- x59))))
(assert (>= 0 (+ (- x59) x60)))
(assert (>= 0 (+ x0 (- x151) x152 (- x60))))
(assert (>= 0 (+ (- x60) x61)))
(assert (>= 0 (+ x0 (- x151) x152 (- x61))))
(assert (>= 0 (+ (- x61) x62)))
(assert (>= 0 (+ x0 (- x151) x152 (- x62))))
(assert (>= 0 (+ (- x62) x63)))
(assert (>= 0 (+ x0 (- x151) x152 (- x63))))
(assert (>= 0 (+ (- x63) x64)))
(assert (>= 0 (+ x0 (- x151) x152 (- x64))))
(assert (>= 0 (+ (- x64) x65)))
(assert (>= 0 (+ x0 (- x151) x152 (- x65))))
(assert (>= 0 (+ (- x65) x66)))
(assert (>= 0 (+ x0 (- x151) x152 (- x66))))
(assert (>= 0 (+ (- x66) x67)))
(assert (>= 0 (+ x0 (- x151) x152 (- x67))))
(assert (>= 0 (+ (- x67) x68)))
(assert (>= 0 (+ x0 (- x151) x152 (- x68))))
(assert (>= 0 (+ (- x68) x69)))
(assert (>= 0 (+ x0 (- x151) x152 (- x69))))
(assert (>= 0 (+ (- x69) x70)))
(assert (>= 0 (+ x0 (- x151) x152 (- x70))))
(assert (>= 0 (+ (- x70) x71)))
(assert (>= 0 (+ x0 (- x151) x152 (- x71))))
(assert (>= 0 (+ (- x71) x72)))
(assert (>= 0 (+ x0 (- x151) x152 (- x72))))
(assert (>= 0 (+ (- x72) x73)))
(assert (>= 0 (+ x0 (- x151) x152 (- x73))))
(assert (>= 0 (+ (- x73) x74)))
(assert (>= 0 (+ x0 (- x151) x152 (- x74))))
(assert (>= 0 (+ (- x74) x75)))
(assert (>= 0 (+ x0 (- x151) x152 (- x75))))
(assert (>= 0 (+ (- x75) x76)))
(assert (>= 0 (+ x0 (- x151) x152 (- x76))))
(assert (>= 0 (+ (- x76) x77)))
(assert (>= 0 (+ x0 (- x151) x152 (- x77))))
(assert (>= 0 (+ (- x77) x78)))
(assert (>= 0 (+ x0 (- x151) x152 (- x78))))
(assert (>= 0 (+ (- x78) x79)))
(assert (>= 0 (+ x0 (- x151) x152 (- x79))))
(assert (>= 0 (+ (- x79) x80)))
(assert (>= 0 (+ x0 (- x151) x152 (- x80))))
(assert (>= 0 (+ (- x80) x81)))
(assert (>= 0 (+ x0 (- x151) x152 (- x81))))
(assert (>= 0 (+ (- x81) x82)))
(assert (>= 0 (+ x0 (- x151) x152 (- x82))))
(assert (>= 0 (+ (- x82) x83)))
(assert (>= 0 (+ x0 (- x151) x152 (- x83))))
(assert (>= 0 (+ (- x83) x84)))
(assert (>= 0 (+ x0 (- x151) x152 (- x84))))
(assert (>= 0 (+ (- x84) x85)))
(assert (>= 0 (+ x0 (- x151) x152 (- x85))))
(assert (>= 0 (+ (- x85) x86)))
(assert (>= 0 (+ x0 (- x151) x152 (- x86))))
(assert (>= 0 (+ (- x86) x87)))
(assert (>= 0 (+ x0 (- x151) x152 (- x87))))
(assert (>= 0 (+ (- x87) x88)))
(assert (>= 0 (+ x0 (- x151) x152 (- x88))))
(assert (>= 0 (+ (- x88) x89)))
(assert (>= 0 (+ x0 (- x151) x152 (- x89))))
(assert (>= 0 (+ (- x89) x90)))
(assert (>= 0 (+ x0 (- x151) x152 (- x90))))
(assert (>= 0 (+ (- x90) x91)))
(assert (>= 0 (+ x0 (- x151) x152 (- x91))))
(assert (>= 0 (+ (- x91) x92)))
(assert (>= 0 (+ x0 (- x151) x152 (- x92))))
(assert (>= 0 (+ (- x92) x93)))
(assert (>= 0 (+ x0 (- x151) x152 (- x93))))
(assert (>= 0 (+ (- x93) x94)))
(assert (>= 0 (+ x0 (- x151) x152 (- x94))))
(assert (>= 0 (+ (- x94) x95)))
(assert (>= 0 (+ x0 (- x151) x152 (- x95))))
(assert (>= 0 (+ (- x95) x96)))
(assert (>= 0 (+ x0 (- x151) x152 (- x96))))
(assert (>= 0 (+ (- x96) x97)))
(assert (>= 0 (+ x0 (- x151) x152 (- x97))))
(assert (>= 0 (+ (- x97) x98)))
(assert (>= 0 (+ x0 (- x151) x152 (- x98))))
(assert (>= 0 (+ (- x98) x99)))
(assert (>= 0 (+ x0 (- x151) x152 (- x99))))
(assert (>= 0 (+ x100 (- x99))))
(assert (>= 0 (+ x0 (- x100) (- x151) x152)))
(assert (>= 0 (+ (- x100) x101)))
(assert (>= 0 (+ x0 (- x101) (- x151) x152)))
(assert (>= 0 (+ (- x101) x102)))
(assert (>= 0 (+ x0 (- x102) (- x151) x152)))
(assert (>= 0 (+ (- x102) x103)))
(assert (>= 0 (+ x0 (- x103) (- x151) x152)))
(assert (>= 0 (+ (- x103) x104)))
(assert (>= 0 (+ x0 (- x104) (- x151) x152)))
(assert (>= 0 (+ (- x104) x105)))
(assert (>= 0 (+ x0 (- x105) (- x151) x152)))
(assert (>= 0 (+ (- x105) x106)))
(assert (>= 0 (+ x0 (- x106) (- x151) x152)))
(assert (>= 0 (+ (- x106) x107)))
(assert (>= 0 (+ x0 (- x107) (- x151) x152)))
(assert (>= 0 (+ (- x107) x108)))
(assert (>= 0 (+ x0 (- x108) (- x151) x152)))
(assert (>= 0 (+ (- x108) x109)))
(assert (>= 0 (+ x0 (- x109) (- x151) x152)))
(assert (>= 0 (+ (- x109) x110)))
(assert (>= 0 (+ x0 (- x110) (- x151) x152)))
(assert (>= 0 (+ (- x110) x111)))
(assert (>= 0 (+ x0 (- x111) (- x151) x152)))
(assert (>= 0 (+ (- x111) x112)))
(assert (>= 0 (+ x0 (- x112) (- x151) x152)))
(assert (>= 0 (+ (- x112) x113)))
(assert (>= 0 (+ x0 (- x113) (- x151) x152)))
(assert (>= 0 (+ (- x113) x114)))
(assert (>= 0 (+ x0 (- x114) (- x151) x152)))
(assert (>= 0 (+ (- x114) x115)))
(assert (>= 0 (+ x0 (- x115) (- x151) x152)))
(assert (>= 0 (+ (- x115) x116)))
(assert (>= 0 (+ x0 (- x116) (- x151) x152)))
(assert (>= 0 (+ (- x116) x117)))
(assert (>= 0 (+ x0 (- x117) (- x151) x152)))
(assert (>= 0 (+ (- x117) x118)))
(assert (>= 0 (+ x0 (- x118) (- x151) x152)))
(assert (>= 0 (+ (- x118) x119)))
(assert (>= 0 (+ x0 (- x119) (- x151) x152)))
(assert (>= 0 (+ (- x119) x120)))
(assert (>= 0 (+ x0 (- x120) (- x151) x152)))
(assert (>= 0 (+ (- x120) x121)))
(assert (>= 0 (+ x0 (- x121) (- x151) x152)))
(assert (>= 0 (+ (- x121) x122)))
(assert (>= 0 (+ x0 (- x122) (- x151) x152)))
(assert (>= 0 (+ (- x122) x123)))
(assert (>= 0 (+ x0 (- x123) (- x151) x152)))
(assert (>= 0 (+ (- x123) x124)))
(assert (>= 0 (+ x0 (- x124) (- x151) x152)))
(assert (>= 0 (+ (- x124) x125)))
(assert (>= 0 (+ x0 (- x125) (- x151) x152)))
(assert (>= 0 (+ (- x125) x126)))
(assert (>= 0 (+ x0 (- x126) (- x151) x152)))
(assert (>= 0 (+ (- x126) x127)))
(assert (>= 0 (+ x0 (- x127) (- x151) x152)))
(assert (>= 0 (+ (- x127) x128)))
(assert (>= 0 (+ x0 (- x128) (- x151) x152)))
(assert (>= 0 (+ (- x128) x129)))
(assert (>= 0 (+ x0 (- x129) (- x151) x152)))
(assert (>= 0 (+ (- x129) x130)))
(assert (>= 0 (+ x0 (- x130) (- x151) x152)))
(assert (>= 0 (+ (- x130) x131)))
(assert (>= 0 (+ x0 (- x131) (- x151) x152)))
(assert (>= 0 (+ (- x131) x132)))
(assert (>= 0 (+ x0 (- x132) (- x151) x152)))
(assert (>= 0 (+ (- x132) x133)))
(assert (>= 0 (+ x0 (- x133) (- x151) x152)))
(assert (>= 0 (+ (- x133) x134)))
(assert (>= 0 (+ x0 (- x134) (- x151) x152)))
(assert (>= 0 (+ (- x134) x135)))
(assert (>= 0 (+ x0 (- x135) (- x151) x152)))
(assert (>= 0 (+ (- x135) x136)))
(assert (>= 0 (+ x0 (- x136) (- x151) x152)))
(assert (>= 0 (+ (- x136) x137)))
(assert (>= 0 (+ x0 (- x137) (- x151) x152)))
(assert (>= 0 (+ (- x137) x138)))
(assert (>= 0 (+ x0 (- x138) (- x151) x152)))
(assert (>= 0 (+ (- x138) x139)))
(assert (>= 0 (+ x0 (- x139) (- x151) x152)))
(assert (>= 0 (+ (- x139) x140)))
(assert (>= 0 (+ x0 (- x140) (- x151) x152)))
(assert (>= 0 (+ (- x140) x141)))
(assert (>= 0 (+ x0 (- x141) (- x151) x152)))
(assert (>= 0 (+ (- x141) x142)))
(assert (>= 0 (+ x0 (- x142) (- x151) x152)))
(assert (>= 0 (+ (- x142) x143)))
(assert (>= 0 (+ x0 (- x143) (- x151) x152)))
(assert (>= 0 (+ (- x143) x144)))
(assert (>= 0 (+ x0 (- x144) (- x151) x152)))
(assert (>= 0 (+ (- x144) x145)))
(assert (>= 0 (+ x0 (- x145) (- x151) x152)))
(assert (>= 0 (+ (- x145) x146)))
(assert (>= 0 (+ x0 (- x146) (- x151) x152)))
(assert (>= 0 (+ (- x146) x147)))
(assert (>= 0 (+ x0 (- x147) (- x151) x152)))
(assert (>= 0 (+ (- x147) x148)))
(assert (>= 0 (+ x0 (- x148) (- x151) x152)))
(assert (>= 0 (+ (- x148) x149)))
(assert (>= 0 (+ x0 (- x149) (- x151) x152)))
(assert (>= 0 (+ (- x149) x150)))
(assert (>= 0 (+ x0 (- x150) (- x151) x152)))
(assert (>= 0 (+ x0)))
(assert (= 1 (+ 0 (* 2 x150) (- x152) (- x0))))
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (>= x8 0))
(assert (>= x9 0))
(assert (>= x10 0))
(assert (>= x11 0))
(assert (>= x12 0))
(assert (>= x13 0))
(assert (>= x14 0))
(assert (>= x15 0))
(assert (>= x16 0))
(assert (>= x17 0))
(assert (>= x18 0))
(assert (>= x19 0))
(assert (>= x20 0))
(assert (>= x21 0))
(assert (>= x22 0))
(assert (>= x23 0))
(assert (>= x24 0))
(assert (>= x25 0))
(assert (>= x26 0))
(assert (>= x27 0))
(assert (>= x28 0))
(assert (>= x29 0))
(assert (>= x30 0))
(assert (>= x31 0))
(assert (>= x32 0))
(assert (>= x33 0))
(assert (>= x34 0))
(assert (>= x35 0))
(assert (>= x36 0))
(assert (>= x37 0))
(assert (>= x38 0))
(assert (>= x39 0))
(assert (>= x40 0))
(assert (>= x41 0))
(assert (>= x42 0))
(assert (>= x43 0))
(assert (>= x44 0))
(assert (>= x45 0))
(assert (>= x46 0))
(assert (>= x47 0))
(assert (>= x48 0))
(assert (>= x49 0))
(assert (>= x50 0))
(assert (>= x51 0))
(assert (>= x52 0))
(assert (>= x53 0))
(assert (>= x54 0))
(assert (>= x55 0))
(assert (>= x56 0))
(assert (>= x57 0))
(assert (>= x58 0))
(assert (>= x59 0))
(assert (>= x60 0))
(assert (>= x61 0))
(assert (>= x62 0))
(assert (>= x63 0))
(assert (>= x64 0))
(assert (>= x65 0))
(assert (>= x66 0))
(assert (>= x67 0))
(assert (>= x68 0))
(assert (>= x69 0))
(assert (>= x70 0))
(assert (>= x71 0))
(assert (>= x72 0))
(assert (>= x73 0))
(assert (>= x74 0))
(assert (>= x75 0))
(assert (>= x76 0))
(assert (>= x77 0))
(assert (>= x78 0))
(assert (>= x79 0))
(assert (>= x80 0))
(assert (>= x81 0))
(assert (>= x82 0))
(assert (>= x83 0))
(assert (>= x84 0))
(assert (>= x85 0))
(assert (>= x86 0))
(assert (>= x87 0))
(assert (>= x88 0))
(assert (>= x89 0))
(assert (>= x90 0))
(assert (>= x91 0))
(assert (>= x92 0))
(assert (>= x93 0))
(assert (>= x94 0))
(assert (>= x95 0))
(assert (>= x96 0))
(assert (>= x97 0))
(assert (>= x98 0))
(assert (>= x99 0))
(assert (>= x100 0))
(assert (>= x101 0))
(assert (>= x102 0))
(assert (>= x103 0))
(assert (>= x104 0))
(assert (>= x105 0))
(assert (>= x106 0))
(assert (>= x107 0))
(assert (>= x108 0))
(assert (>= x109 0))
(assert (>= x110 0))
(assert (>= x111 0))
(assert (>= x112 0))
(assert (>= x113 0))
(assert (>= x114 0))
(assert (>= x115 0))
(assert (>= x116 0))
(assert (>= x117 0))
(assert (>= x118 0))
(assert (>= x119 0))
(assert (>= x120 0))
(assert (>= x121 0))
(assert (>= x122 0))
(assert (>= x123 0))
(assert (>= x124 0))
(assert (>= x125 0))
(assert (>= x126 0))
(assert (>= x127 0))
(assert (>= x128 0))
(assert (>= x129 0))
(assert (>= x130 0))
(assert (>= x131 0))
(assert (>= x132 0))
(assert (>= x133 0))
(assert (>= x134 0))
(assert (>= x135 0))
(assert (>= x136 0))
(assert (>= x137 0))
(assert (>= x138 0))
(assert (>= x139 0))
(assert (>= x140 0))
(assert (>= x141 0))
(assert (>= x142 0))
(assert (>= x143 0))
(assert (>= x144 0))
(assert (>= x145 0))
(assert (>= x146 0))
(assert (>= x147 0))
(assert (>= x148 0))
(assert (>= x149 0))
(assert (>= x150 0))
(assert (>= x151 0))
(assert (>= x152 0))
(assert (>= x0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun x82 () Real
    1.0)
  (define-fun x17 () Real
    1.0)
  (define-fun x65 () Real
    1.0)
  (define-fun x91 () Real
    1.0)
  (define-fun x111 () Real
    1.0)
  (define-fun x122 () Real
    1.0)
  (define-fun x44 () Real
    1.0)
  (define-fun x125 () Real
    1.0)
  (define-fun x116 () Real
    1.0)
  (define-fun x140 () Real
    1.0)
  (define-fun x118 () Real
    1.0)
  (define-fun x71 () Real
    1.0)
  (define-fun x55 () Real
    1.0)
  (define-fun x73 () Real
    1.0)
  (define-fun x19 () Real
    1.0)
  (define-fun x46 () Real
    1.0)
  (define-fun x72 () Real
    1.0)
  (define-fun x39 () Real
    1.0)
  (define-fun x147 () Real
    1.0)
  (define-fun x32 () Real
    1.0)
  (define-fun x37 () Real
    1.0)
  (define-fun x47 () Real
    1.0)
  (define-fun x68 () Real
    1.0)
  (define-fun x80 () Real
    1.0)
  (define-fun x13 () Real
    1.0)
  (define-fun x23 () Real
    1.0)
  (define-fun x103 () Real
    1.0)
  (define-fun x123 () Real
    1.0)
  (define-fun x8 () Real
    1.0)
  (define-fun x83 () Real
    1.0)
  (define-fun x143 () Real
    1.0)
  (define-fun x152 () Real
    1.0)
  (define-fun x1 () Real
    1.0)
  (define-fun x36 () Real
    1.0)
  (define-fun x54 () Real
    1.0)
  (define-fun x110 () Real
    1.0)
  (define-fun x108 () Real
    1.0)
  (define-fun x79 () Real
    1.0)
  (define-fun x63 () Real
    1.0)
  (define-fun x85 () Real
    1.0)
  (define-fun x141 () Real
    1.0)
  (define-fun x144 () Real
    1.0)
  (define-fun x48 () Real
    1.0)
  (define-fun x3 () Real
    1.0)
  (define-fun x130 () Real
    1.0)
  (define-fun x0 () Real
    0.0)
  (define-fun x127 () Real
    1.0)
  (define-fun x9 () Real
    1.0)
  (define-fun x99 () Real
    1.0)
  (define-fun x67 () Real
    1.0)
  (define-fun x117 () Real
    1.0)
  (define-fun x137 () Real
    1.0)
  (define-fun x76 () Real
    1.0)
  (define-fun x62 () Real
    1.0)
  (define-fun x89 () Real
    1.0)
  (define-fun x102 () Real
    1.0)
  (define-fun x106 () Real
    1.0)
  (define-fun x120 () Real
    1.0)
  (define-fun x27 () Real
    1.0)
  (define-fun x145 () Real
    1.0)
  (define-fun x87 () Real
    1.0)
  (define-fun x78 () Real
    1.0)
  (define-fun x25 () Real
    1.0)
  (define-fun x66 () Real
    1.0)
  (define-fun x151 () Real
    0.0)
  (define-fun x28 () Real
    1.0)
  (define-fun x77 () Real
    1.0)
  (define-fun x10 () Real
    1.0)
  (define-fun x35 () Real
    1.0)
  (define-fun x150 () Real
    1.0)
  (define-fun x86 () Real
    1.0)
  (define-fun x97 () Real
    1.0)
  (define-fun x126 () Real
    1.0)
  (define-fun x105 () Real
    1.0)
  (define-fun x70 () Real
    1.0)
  (define-fun x139 () Real
    1.0)
  (define-fun x146 () Real
    1.0)
  (define-fun x22 () Real
    1.0)
  (define-fun x20 () Real
    1.0)
  (define-fun x38 () Real
    1.0)
  (define-fun x75 () Real
    1.0)
  (define-fun x95 () Real
    1.0)
  (define-fun x24 () Real
    1.0)
  (define-fun x50 () Real
    1.0)
  (define-fun x59 () Real
    1.0)
  (define-fun x107 () Real
    1.0)
  (define-fun x69 () Real
    1.0)
  (define-fun x21 () Real
    1.0)
  (define-fun x42 () Real
    1.0)
  (define-fun x129 () Real
    1.0)
  (define-fun x93 () Real
    1.0)
  (define-fun x133 () Real
    1.0)
  (define-fun x84 () Real
    1.0)
  (define-fun x114 () Real
    1.0)
  (define-fun x49 () Real
    1.0)
  (define-fun x134 () Real
    1.0)
  (define-fun x15 () Real
    1.0)
  (define-fun x142 () Real
    1.0)
  (define-fun x58 () Real
    1.0)
  (define-fun x60 () Real
    1.0)
  (define-fun x138 () Real
    1.0)
  (define-fun x148 () Real
    1.0)
  (define-fun x16 () Real
    1.0)
  (define-fun x26 () Real
    1.0)
  (define-fun x53 () Real
    1.0)
  (define-fun x14 () Real
    1.0)
  (define-fun x112 () Real
    1.0)
  (define-fun x6 () Real
    1.0)
  (define-fun x128 () Real
    1.0)
  (define-fun x33 () Real
    1.0)
  (define-fun x115 () Real
    1.0)
  (define-fun x31 () Real
    1.0)
  (define-fun x101 () Real
    1.0)
  (define-fun x29 () Real
    1.0)
  (define-fun x43 () Real
    1.0)
  (define-fun x131 () Real
    1.0)
  (define-fun x92 () Real
    1.0)
  (define-fun x64 () Real
    1.0)
  (define-fun x4 () Real
    1.0)
  (define-fun x121 () Real
    1.0)
  (define-fun x11 () Real
    1.0)
  (define-fun x45 () Real
    1.0)
  (define-fun x2 () Real
    1.0)
  (define-fun x41 () Real
    1.0)
  (define-fun x109 () Real
    1.0)
  (define-fun x18 () Real
    1.0)
  (define-fun x30 () Real
    1.0)
  (define-fun x52 () Real
    1.0)
  (define-fun x81 () Real
    1.0)
  (define-fun x12 () Real
    1.0)
  (define-fun x88 () Real
    1.0)
  (define-fun x98 () Real
    1.0)
  (define-fun x135 () Real
    1.0)
  (define-fun x56 () Real
    1.0)
  (define-fun x57 () Real
    1.0)
  (define-fun x51 () Real
    1.0)
  (define-fun x104 () Real
    1.0)
  (define-fun x34 () Real
    1.0)
  (define-fun x132 () Real
    1.0)
  (define-fun x149 () Real
    1.0)
  (define-fun x90 () Real
    1.0)
  (define-fun x74 () Real
    1.0)
  (define-fun x40 () Real
    1.0)
  (define-fun x124 () Real
    1.0)
  (define-fun x61 () Real
    1.0)
  (define-fun x136 () Real
    1.0)
  (define-fun x100 () Real
    1.0)
  (define-fun x113 () Real
    1.0)
  (define-fun x94 () Real
    1.0)
  (define-fun x96 () Real
    1.0)
  (define-fun x119 () Real
    1.0)
  (define-fun x5 () Real
    1.0)
  (define-fun x7 () Real
    1.0)
)
- sat, getting model A' for C'
assignment('x82', 1.0).
assignment('x17', 1.0).
assignment('x65', 1.0).
assignment('x91', 1.0).
assignment('x111', 1.0).
assignment('x122', 1.0).
assignment('x44', 1.0).
assignment('x125', 1.0).
assignment('x116', 1.0).
assignment('x140', 1.0).
assignment('x118', 1.0).
assignment('x71', 1.0).
assignment('x55', 1.0).
assignment('x73', 1.0).
assignment('x19', 1.0).
assignment('x46', 1.0).
assignment('x72', 1.0).
assignment('x39', 1.0).
assignment('x147', 1.0).
assignment('x32', 1.0).
assignment('x37', 1.0).
assignment('x47', 1.0).
assignment('x68', 1.0).
assignment('x80', 1.0).
assignment('x13', 1.0).
assignment('x23', 1.0).
assignment('x103', 1.0).
assignment('x123', 1.0).
assignment('x8', 1.0).
assignment('x83', 1.0).
assignment('x143', 1.0).
assignment('x152', 1.0).
assignment('x1', 1.0).
assignment('x36', 1.0).
assignment('x54', 1.0).
assignment('x110', 1.0).
assignment('x108', 1.0).
assignment('x79', 1.0).
assignment('x63', 1.0).
assignment('x85', 1.0).
assignment('x141', 1.0).
assignment('x144', 1.0).
assignment('x48', 1.0).
assignment('x3', 1.0).
assignment('x130', 1.0).
assignment('x0', 0.0).
assignment('x127', 1.0).
assignment('x9', 1.0).
assignment('x99', 1.0).
assignment('x67', 1.0).
assignment('x117', 1.0).
assignment('x137', 1.0).
assignment('x76', 1.0).
assignment('x62', 1.0).
assignment('x89', 1.0).
assignment('x102', 1.0).
assignment('x106', 1.0).
assignment('x120', 1.0).
assignment('x27', 1.0).
assignment('x145', 1.0).
assignment('x87', 1.0).
assignment('x78', 1.0).
assignment('x25', 1.0).
assignment('x66', 1.0).
assignment('x151', 0.0).
assignment('x28', 1.0).
assignment('x77', 1.0).
assignment('x10', 1.0).
assignment('x35', 1.0).
assignment('x150', 1.0).
assignment('x86', 1.0).
assignment('x97', 1.0).
assignment('x126', 1.0).
assignment('x105', 1.0).
assignment('x70', 1.0).
assignment('x139', 1.0).
assignment('x146', 1.0).
assignment('x22', 1.0).
assignment('x20', 1.0).
assignment('x38', 1.0).
assignment('x75', 1.0).
assignment('x95', 1.0).
assignment('x24', 1.0).
assignment('x50', 1.0).
assignment('x59', 1.0).
assignment('x107', 1.0).
assignment('x69', 1.0).
assignment('x21', 1.0).
assignment('x42', 1.0).
assignment('x129', 1.0).
assignment('x93', 1.0).
assignment('x133', 1.0).
assignment('x84', 1.0).
assignment('x114', 1.0).
assignment('x49', 1.0).
assignment('x134', 1.0).
assignment('x15', 1.0).
assignment('x142', 1.0).
assignment('x58', 1.0).
assignment('x60', 1.0).
assignment('x138', 1.0).
assignment('x148', 1.0).
assignment('x16', 1.0).
assignment('x26', 1.0).
assignment('x53', 1.0).
assignment('x14', 1.0).
assignment('x112', 1.0).
assignment('x6', 1.0).
assignment('x128', 1.0).
assignment('x33', 1.0).
assignment('x115', 1.0).
assignment('x31', 1.0).
assignment('x101', 1.0).
assignment('x29', 1.0).
assignment('x43', 1.0).
assignment('x131', 1.0).
assignment('x92', 1.0).
assignment('x64', 1.0).
assignment('x4', 1.0).
assignment('x121', 1.0).
assignment('x11', 1.0).
assignment('x45', 1.0).
assignment('x2', 1.0).
assignment('x41', 1.0).
assignment('x109', 1.0).
assignment('x18', 1.0).
assignment('x30', 1.0).
assignment('x52', 1.0).
assignment('x81', 1.0).
assignment('x12', 1.0).
assignment('x88', 1.0).
assignment('x98', 1.0).
assignment('x135', 1.0).
assignment('x56', 1.0).
assignment('x57', 1.0).
assignment('x51', 1.0).
assignment('x104', 1.0).
assignment('x34', 1.0).
assignment('x132', 1.0).
assignment('x149', 1.0).
assignment('x90', 1.0).
assignment('x74', 1.0).
assignment('x40', 1.0).
assignment('x124', 1.0).
assignment('x61', 1.0).
assignment('x136', 1.0).
assignment('x100', 1.0).
assignment('x113', 1.0).
assignment('x94', 1.0).
assignment('x96', 1.0).
assignment('x119', 1.0).
assignment('x5', 1.0).
assignment('x7', 1.0).
- constructing invariant I for petri net N and model A'
(assert (>= 1.0 (+ x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99 x100 x101 x102 x103 x104 x105 x106 x107 x108 x109 x110 x111 x112 x113 x114 x115 x116 x117 x118 x119 x120 x121 x122 x123 x124 x125 x126 x127 x128 x129 x130 x131 x132 x133 x134 x135 x136 x137 x138 x139 x140 x141 x142 x143 x144 x145 x146 x147 x148 x149 x150 x152)))

* Invariant I for the petri net:
(assert (>= 1.0 (+ x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 x31 x32 x33 x34 x35 x36 x37 x38 x39 x40 x41 x42 x43 x44 x45 x46 x47 x48 x49 x50 x51 x52 x53 x54 x55 x56 x57 x58 x59 x60 x61 x62 x63 x64 x65 x66 x67 x68 x69 x70 x71 x72 x73 x74 x75 x76 x77 x78 x79 x80 x81 x82 x83 x84 x85 x86 x87 x88 x89 x90 x91 x92 x93 x94 x95 x96 x97 x98 x99 x100 x101 x102 x103 x104 x105 x106 x107 x108 x109 x110 x111 x112 x113 x114 x115 x116 x117 x118 x119 x120 x121 x122 x123 x124 x125 x126 x127 x128 x129 x130 x131 x132 x133 x134 x135 x136 x137 x138 x139 x140 x141 x142 x143 x144 x145 x146 x147 x148 x149 x150 x152)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


