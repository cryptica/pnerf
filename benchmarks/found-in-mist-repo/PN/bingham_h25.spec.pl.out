PETRINIZER: The checker for Petri Nets
[-v benchmarks/found-in-mist-repo/PN/bingham_h25.spec.pl]

* Constructing petri net N from input file
place(x1, [t1], [t4,t3,t2]).
place(x2, [t4], [t6,t5]).
place(x3, [t6], [t8,t7]).
place(x4, [t8], [t10,t9]).
place(x5, [t10], [t12,t11]).
place(x6, [t12], [t14,t13]).
place(x7, [t14], [t16,t15]).
place(x8, [t16], [t18,t17]).
place(x9, [t18], [t20,t19]).
place(x10, [t20], [t22,t21]).
place(x11, [t22], [t24,t23]).
place(x12, [t24], [t26,t25]).
place(x13, [t26], [t28,t27]).
place(x14, [t28], [t30,t29]).
place(x15, [t30], [t32,t31]).
place(x16, [t32], [t34,t33]).
place(x17, [t34], [t36,t35]).
place(x18, [t36], [t38,t37]).
place(x19, [t38], [t40,t39]).
place(x20, [t40], [t42,t41]).
place(x21, [t42], [t44,t43]).
place(x22, [t44], [t46,t45]).
place(x23, [t46], [t48,t47]).
place(x24, [t48], [t50,t49]).
place(x25, [t50], [t51]).
place(x26, [t2,t1], [t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3]).
place(x27, [t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3], [t2,t1]).
place(x0, [init1,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t5,t3,t2], [t1]).

transition(t1, [x0,x27], [x26,x1]).
transition(t2, [x1,x27], [x26,x0]).
transition(t3, [x1,x26], [x0,x27]).
transition(t4, [x1], [x2]).
transition(t5, [x2,x26], [x0,x27]).
transition(t6, [x2], [x3]).
transition(t7, [x3,x26], [x0,x27]).
transition(t8, [x3], [x4]).
transition(t9, [x4,x26], [x0,x27]).
transition(t10, [x4], [x5]).
transition(t11, [x5,x26], [x0,x27]).
transition(t12, [x5], [x6]).
transition(t13, [x6,x26], [x0,x27]).
transition(t14, [x6], [x7]).
transition(t15, [x7,x26], [x0,x27]).
transition(t16, [x7], [x8]).
transition(t17, [x8,x26], [x0,x27]).
transition(t18, [x8], [x9]).
transition(t19, [x9,x26], [x0,x27]).
transition(t20, [x9], [x10]).
transition(t21, [x10,x26], [x0,x27]).
transition(t22, [x10], [x11]).
transition(t23, [x11,x26], [x0,x27]).
transition(t24, [x11], [x12]).
transition(t25, [x12,x26], [x0,x27]).
transition(t26, [x12], [x13]).
transition(t27, [x13,x26], [x0,x27]).
transition(t28, [x13], [x14]).
transition(t29, [x14,x26], [x0,x27]).
transition(t30, [x14], [x15]).
transition(t31, [x15,x26], [x0,x27]).
transition(t32, [x15], [x16]).
transition(t33, [x16,x26], [x0,x27]).
transition(t34, [x16], [x17]).
transition(t35, [x17,x26], [x0,x27]).
transition(t36, [x17], [x18]).
transition(t37, [x18,x26], [x0,x27]).
transition(t38, [x18], [x19]).
transition(t39, [x19,x26], [x0,x27]).
transition(t40, [x19], [x20]).
transition(t41, [x20,x26], [x0,x27]).
transition(t42, [x20], [x21]).
transition(t43, [x21,x26], [x0,x27]).
transition(t44, [x21], [x22]).
transition(t45, [x22,x26], [x0,x27]).
transition(t46, [x22], [x23]).
transition(t47, [x23,x26], [x0,x27]).
transition(t48, [x23], [x24]).
transition(t49, [x24,x26], [x0,x27]).
transition(t50, [x24], [x25]).
transition(t51, [x25,x26], [x0,x27]).
transition(init1, [], [x0]).

weight(x0, t1, 1).
weight(x27, t1, 1).
weight(t1, x26, 1).
weight(t1, x1, 1).
weight(x1, t2, 1).
weight(x27, t2, 1).
weight(t2, x26, 1).
weight(t2, x0, 1).
weight(x1, t3, 1).
weight(x26, t3, 1).
weight(t3, x0, 1).
weight(t3, x27, 1).
weight(x1, t4, 1).
weight(t4, x2, 1).
weight(x2, t5, 1).
weight(x26, t5, 1).
weight(t5, x0, 1).
weight(t5, x27, 1).
weight(x2, t6, 1).
weight(t6, x3, 1).
weight(x3, t7, 1).
weight(x26, t7, 1).
weight(t7, x0, 1).
weight(t7, x27, 1).
weight(x3, t8, 1).
weight(t8, x4, 1).
weight(x4, t9, 1).
weight(x26, t9, 1).
weight(t9, x0, 1).
weight(t9, x27, 1).
weight(x4, t10, 1).
weight(t10, x5, 1).
weight(x5, t11, 1).
weight(x26, t11, 1).
weight(t11, x0, 1).
weight(t11, x27, 1).
weight(x5, t12, 1).
weight(t12, x6, 1).
weight(x6, t13, 1).
weight(x26, t13, 1).
weight(t13, x0, 1).
weight(t13, x27, 1).
weight(x6, t14, 1).
weight(t14, x7, 1).
weight(x7, t15, 1).
weight(x26, t15, 1).
weight(t15, x0, 1).
weight(t15, x27, 1).
weight(x7, t16, 1).
weight(t16, x8, 1).
weight(x8, t17, 1).
weight(x26, t17, 1).
weight(t17, x0, 1).
weight(t17, x27, 1).
weight(x8, t18, 1).
weight(t18, x9, 1).
weight(x9, t19, 1).
weight(x26, t19, 1).
weight(t19, x0, 1).
weight(t19, x27, 1).
weight(x9, t20, 1).
weight(t20, x10, 1).
weight(x10, t21, 1).
weight(x26, t21, 1).
weight(t21, x0, 1).
weight(t21, x27, 1).
weight(x10, t22, 1).
weight(t22, x11, 1).
weight(x11, t23, 1).
weight(x26, t23, 1).
weight(t23, x0, 1).
weight(t23, x27, 1).
weight(x11, t24, 1).
weight(t24, x12, 1).
weight(x12, t25, 1).
weight(x26, t25, 1).
weight(t25, x0, 1).
weight(t25, x27, 1).
weight(x12, t26, 1).
weight(t26, x13, 1).
weight(x13, t27, 1).
weight(x26, t27, 1).
weight(t27, x0, 1).
weight(t27, x27, 1).
weight(x13, t28, 1).
weight(t28, x14, 1).
weight(x14, t29, 1).
weight(x26, t29, 1).
weight(t29, x0, 1).
weight(t29, x27, 1).
weight(x14, t30, 1).
weight(t30, x15, 1).
weight(x15, t31, 1).
weight(x26, t31, 1).
weight(t31, x0, 1).
weight(t31, x27, 1).
weight(x15, t32, 1).
weight(t32, x16, 1).
weight(x16, t33, 1).
weight(x26, t33, 1).
weight(t33, x0, 1).
weight(t33, x27, 1).
weight(x16, t34, 1).
weight(t34, x17, 1).
weight(x17, t35, 1).
weight(x26, t35, 1).
weight(t35, x0, 1).
weight(t35, x27, 1).
weight(x17, t36, 1).
weight(t36, x18, 1).
weight(x18, t37, 1).
weight(x26, t37, 1).
weight(t37, x0, 1).
weight(t37, x27, 1).
weight(x18, t38, 1).
weight(t38, x19, 1).
weight(x19, t39, 1).
weight(x26, t39, 1).
weight(t39, x0, 1).
weight(t39, x27, 1).
weight(x19, t40, 1).
weight(t40, x20, 1).
weight(x20, t41, 1).
weight(x26, t41, 1).
weight(t41, x0, 1).
weight(t41, x27, 1).
weight(x20, t42, 1).
weight(t42, x21, 1).
weight(x21, t43, 1).
weight(x26, t43, 1).
weight(t43, x0, 1).
weight(t43, x27, 1).
weight(x21, t44, 1).
weight(t44, x22, 1).
weight(x22, t45, 1).
weight(x26, t45, 1).
weight(t45, x0, 1).
weight(t45, x27, 1).
weight(x22, t46, 1).
weight(t46, x23, 1).
weight(x23, t47, 1).
weight(x26, t47, 1).
weight(t47, x0, 1).
weight(t47, x27, 1).
weight(x23, t48, 1).
weight(t48, x24, 1).
weight(x24, t49, 1).
weight(x26, t49, 1).
weight(t49, x0, 1).
weight(t49, x27, 1).
weight(x24, t50, 1).
weight(t50, x25, 1).
weight(x25, t51, 1).
weight(x26, t51, 1).
weight(t51, x0, 1).
weight(t51, x27, 1).
weight(init1, x0, 1).

init(x0, 1).
init(x27, 1).

cond('(>= x25 2)').

target(x25, 2).


* Constructing constraints C' for petri net N
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun x10 () Real)
(declare-fun x11 () Real)
(declare-fun x12 () Real)
(declare-fun x13 () Real)
(declare-fun x14 () Real)
(declare-fun x15 () Real)
(declare-fun x16 () Real)
(declare-fun x17 () Real)
(declare-fun x18 () Real)
(declare-fun x19 () Real)
(declare-fun x20 () Real)
(declare-fun x21 () Real)
(declare-fun x22 () Real)
(declare-fun x23 () Real)
(declare-fun x24 () Real)
(declare-fun x25 () Real)
(declare-fun x26 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(assert (>= 0 (+ (- x0) x1 x26 (- x27))))
(assert (>= 0 (+ x0 (- x1) x26 (- x27))))
(assert (>= 0 (+ x0 (- x1) (- x26) x27)))
(assert (>= 0 (+ (- x1) x2)))
(assert (>= 0 (+ x0 (- x2) (- x26) x27)))
(assert (>= 0 (+ (- x2) x3)))
(assert (>= 0 (+ x0 (- x26) x27 (- x3))))
(assert (>= 0 (+ (- x3) x4)))
(assert (>= 0 (+ x0 (- x26) x27 (- x4))))
(assert (>= 0 (+ (- x4) x5)))
(assert (>= 0 (+ x0 (- x26) x27 (- x5))))
(assert (>= 0 (+ (- x5) x6)))
(assert (>= 0 (+ x0 (- x26) x27 (- x6))))
(assert (>= 0 (+ (- x6) x7)))
(assert (>= 0 (+ x0 (- x26) x27 (- x7))))
(assert (>= 0 (+ (- x7) x8)))
(assert (>= 0 (+ x0 (- x26) x27 (- x8))))
(assert (>= 0 (+ (- x8) x9)))
(assert (>= 0 (+ x0 (- x26) x27 (- x9))))
(assert (>= 0 (+ x10 (- x9))))
(assert (>= 0 (+ x0 (- x10) (- x26) x27)))
(assert (>= 0 (+ (- x10) x11)))
(assert (>= 0 (+ x0 (- x11) (- x26) x27)))
(assert (>= 0 (+ (- x11) x12)))
(assert (>= 0 (+ x0 (- x12) (- x26) x27)))
(assert (>= 0 (+ (- x12) x13)))
(assert (>= 0 (+ x0 (- x13) (- x26) x27)))
(assert (>= 0 (+ (- x13) x14)))
(assert (>= 0 (+ x0 (- x14) (- x26) x27)))
(assert (>= 0 (+ (- x14) x15)))
(assert (>= 0 (+ x0 (- x15) (- x26) x27)))
(assert (>= 0 (+ (- x15) x16)))
(assert (>= 0 (+ x0 (- x16) (- x26) x27)))
(assert (>= 0 (+ (- x16) x17)))
(assert (>= 0 (+ x0 (- x17) (- x26) x27)))
(assert (>= 0 (+ (- x17) x18)))
(assert (>= 0 (+ x0 (- x18) (- x26) x27)))
(assert (>= 0 (+ (- x18) x19)))
(assert (>= 0 (+ x0 (- x19) (- x26) x27)))
(assert (>= 0 (+ (- x19) x20)))
(assert (>= 0 (+ x0 (- x20) (- x26) x27)))
(assert (>= 0 (+ (- x20) x21)))
(assert (>= 0 (+ x0 (- x21) (- x26) x27)))
(assert (>= 0 (+ (- x21) x22)))
(assert (>= 0 (+ x0 (- x22) (- x26) x27)))
(assert (>= 0 (+ (- x22) x23)))
(assert (>= 0 (+ x0 (- x23) (- x26) x27)))
(assert (>= 0 (+ (- x23) x24)))
(assert (>= 0 (+ x0 (- x24) (- x26) x27)))
(assert (>= 0 (+ (- x24) x25)))
(assert (>= 0 (+ x0 (- x25) (- x26) x27)))
(assert (>= 0 (+ x0)))
(assert (= 1 (+ 0 (* 2 x25) (- x27) (- x0))))
(assert (>= x1 0))
(assert (>= x2 0))
(assert (>= x3 0))
(assert (>= x4 0))
(assert (>= x5 0))
(assert (>= x6 0))
(assert (>= x7 0))
(assert (>= x8 0))
(assert (>= x9 0))
(assert (>= x10 0))
(assert (>= x11 0))
(assert (>= x12 0))
(assert (>= x13 0))
(assert (>= x14 0))
(assert (>= x15 0))
(assert (>= x16 0))
(assert (>= x17 0))
(assert (>= x18 0))
(assert (>= x19 0))
(assert (>= x20 0))
(assert (>= x21 0))
(assert (>= x22 0))
(assert (>= x23 0))
(assert (>= x24 0))
(assert (>= x25 0))
(assert (>= x26 0))
(assert (>= x27 0))
(assert (>= x0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun x11 () Real
    1.0)
  (define-fun x20 () Real
    1.0)
  (define-fun x7 () Real
    1.0)
  (define-fun x9 () Real
    1.0)
  (define-fun x17 () Real
    1.0)
  (define-fun x22 () Real
    1.0)
  (define-fun x2 () Real
    1.0)
  (define-fun x24 () Real
    1.0)
  (define-fun x21 () Real
    1.0)
  (define-fun x18 () Real
    1.0)
  (define-fun x12 () Real
    1.0)
  (define-fun x19 () Real
    1.0)
  (define-fun x27 () Real
    1.0)
  (define-fun x15 () Real
    1.0)
  (define-fun x13 () Real
    1.0)
  (define-fun x25 () Real
    1.0)
  (define-fun x26 () Real
    0.0)
  (define-fun x16 () Real
    1.0)
  (define-fun x8 () Real
    1.0)
  (define-fun x14 () Real
    1.0)
  (define-fun x23 () Real
    1.0)
  (define-fun x1 () Real
    1.0)
  (define-fun x6 () Real
    1.0)
  (define-fun x10 () Real
    1.0)
  (define-fun x3 () Real
    1.0)
  (define-fun x4 () Real
    1.0)
  (define-fun x5 () Real
    1.0)
  (define-fun x0 () Real
    0.0)
)
- sat, getting model A' for C'
assignment('x11', 1.0).
assignment('x20', 1.0).
assignment('x7', 1.0).
assignment('x9', 1.0).
assignment('x17', 1.0).
assignment('x22', 1.0).
assignment('x2', 1.0).
assignment('x24', 1.0).
assignment('x21', 1.0).
assignment('x18', 1.0).
assignment('x12', 1.0).
assignment('x19', 1.0).
assignment('x27', 1.0).
assignment('x15', 1.0).
assignment('x13', 1.0).
assignment('x25', 1.0).
assignment('x26', 0.0).
assignment('x16', 1.0).
assignment('x8', 1.0).
assignment('x14', 1.0).
assignment('x23', 1.0).
assignment('x1', 1.0).
assignment('x6', 1.0).
assignment('x10', 1.0).
assignment('x3', 1.0).
assignment('x4', 1.0).
assignment('x5', 1.0).
assignment('x0', 0.0).
- constructing invariant I for petri net N and model A'
(assert (>= 1.0 (+ x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x27)))

* Invariant I for the petri net:
(assert (>= 1.0 (+ x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x27)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


