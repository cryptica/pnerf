PETRINIZER: The checker for Petri Nets
[benchmarks/given-by-daniel-kroening/cprover_software_analysis/peterson_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s8, [], []).
place(s9, [], []).
place(s10, [], []).
place(s11, [], []).
place(s12, [], []).
place(s13, [], []).
place(s14, [], []).
place(s15, [], []).
place(s16, [t42,t23,t14,t9], []).
place(l13, [t42,t23,t14,t9], []).
place(l0, [], [t44,t43,t30,t29,t16,t15,t2,t1]).
place(l1, [t44,t43,t30,t29,t16,t15,t2,t1], [t46,t45,t32,t31,t18,t17,t4,t3]).
place(l2, [t46,t45,t32,t31,t18,t17,t4,t3], [t47,t33,t19,t5]).
place(l5, [t49,t35,t21,t7], [t50,t36,t22,t8]).
place(l6, [t50,t36,t22,t8], [t51,t37,t23,t9]).
place(l7, [t51,t37], []).
place(l9, [t53,t52,t39,t38,t25,t24,t11,t10], [t54,t53,t40,t39,t26,t25,t12,t11]).
place(l10, [t54,t40,t26,t12], [t55,t41,t27,t13]).
place(l11, [t55,t41,t27,t13], [t56,t42,t28,t14]).
place(l12, [t56,t28], []).
place(l8, [t60,t59,t58,t57], [t52,t38,t24,t10]).
place(s0, [t57,t29,t17,t12,t11,t10,t7,t6,t3,t1], [t61,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s4, [t61], [t57]).
place(s1, [t58,t55,t43,t41,t28,t27,t26,t25,t24,t21,t20,t18,t15,t13,t4], [t62,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15]).
place(s5, [t62], [t58]).
place(s2, [t59,t50,t47,t45,t40,t39,t38,t37,t36,t35,t34,t33,t31,t30,t22,t19,t8,t5,t2], [t63,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29]).
place(s6, [t63], [t59]).
place(s3, [t60,t56,t54,t53,t52,t51,t49,t48,t46,t44,t32,t16], [t64,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43]).
place(l3, [t64,t63,t62,t61,t47,t33,t19,t5], [t64,t63,t62,t61,t60,t59,t58,t57]).
place(s7, [t64], [t60]).
place(l4, [t64,t63,t62,t61,t48,t34,t20,t6], [t49,t48,t35,t34,t21,t20,t7,t6]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s2,l1]).
transition(t3, [l1,s0], [s0,l2]).
transition(t4, [l1,s0], [s1,l2]).
transition(t5, [l2,s0], [s2,l3]).
transition(t6, [l4,s0], [l4,s0]).
transition(t7, [l4,s0], [s0,l5]).
transition(t8, [l5,s0], [s2,l6]).
transition(t9, [l6,s0], [s16,l13]).
transition(t10, [l8,s0], [s0,l9]).
transition(t11, [l9,s0], [l9,s0]).
transition(t12, [l9,s0], [s0,l10]).
transition(t13, [l10,s0], [s1,l11]).
transition(t14, [l11,s0], [s16,l13]).
transition(t15, [l0,s1], [s1,l1]).
transition(t16, [l0,s1], [s3,l1]).
transition(t17, [l1,s1], [s0,l2]).
transition(t18, [l1,s1], [s1,l2]).
transition(t19, [l2,s1], [s2,l3]).
transition(t20, [l4,s1], [l4,s1]).
transition(t21, [l4,s1], [s1,l5]).
transition(t22, [l5,s1], [s2,l6]).
transition(t23, [l6,s1], [s16,l13]).
transition(t24, [l8,s1], [s1,l9]).
transition(t25, [l9,s1], [l9,s1]).
transition(t26, [l9,s1], [s1,l10]).
transition(t27, [l10,s1], [s1,l11]).
transition(t28, [l11,s1], [s1,l12]).
transition(t29, [l0,s2], [s0,l1]).
transition(t30, [l0,s2], [s2,l1]).
transition(t31, [l1,s2], [s2,l2]).
transition(t32, [l1,s2], [s3,l2]).
transition(t33, [l2,s2], [s2,l3]).
transition(t34, [l4,s2], [l4,s2]).
transition(t35, [l4,s2], [s2,l5]).
transition(t36, [l5,s2], [s2,l6]).
transition(t37, [l6,s2], [s2,l7]).
transition(t38, [l8,s2], [s2,l9]).
transition(t39, [l9,s2], [l9,s2]).
transition(t40, [l9,s2], [s2,l10]).
transition(t41, [l10,s2], [s1,l11]).
transition(t42, [l11,s2], [s16,l13]).
transition(t43, [l0,s3], [s1,l1]).
transition(t44, [l0,s3], [s3,l1]).
transition(t45, [l1,s3], [s2,l2]).
transition(t46, [l1,s3], [s3,l2]).
transition(t47, [l2,s3], [s2,l3]).
transition(t48, [l4,s3], [l4,s3]).
transition(t49, [l4,s3], [s3,l5]).
transition(t50, [l5,s3], [s2,l6]).
transition(t51, [l6,s3], [s3,l7]).
transition(t52, [l8,s3], [s3,l9]).
transition(t53, [l9,s3], [l9,s3]).
transition(t54, [l9,s3], [s3,l10]).
transition(t55, [l10,s3], [s1,l11]).
transition(t56, [l11,s3], [s3,l12]).
transition(t57, [l3,s4], [s0,l8]).
transition(t58, [l3,s5], [s1,l8]).
transition(t59, [l3,s6], [s2,l8]).
transition(t60, [l3,s7], [s3,l8]).
transition(t61, [l3,s0], [l3,s4,l4]).
transition(t62, [l3,s1], [l3,s5,l4]).
transition(t63, [l3,s2], [l3,s6,l4]).
transition(t64, [l3,s3], [l3,s7,l4]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s16 1)').
cond('(>= l13 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s8 () Int)
(declare-fun s9 () Int)
(declare-fun s10 () Int)
(declare-fun s11 () Int)
(declare-fun s12 () Int)
(declare-fun s13 () Int)
(declare-fun s14 () Int)
(declare-fun s15 () Int)
(declare-fun s16 () Int)
(declare-fun l13 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l2 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l9 () Int)
(declare-fun l10 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l8 () Int)
(declare-fun s0 () Int)
(declare-fun s4 () Int)
(declare-fun s1 () Int)
(declare-fun s5 () Int)
(declare-fun s2 () Int)
(declare-fun s6 () Int)
(declare-fun s3 () Int)
(declare-fun l3 () Int)
(declare-fun s7 () Int)
(declare-fun l4 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(declare-fun t59 () Int)
(declare-fun t60 () Int)
(declare-fun t61 () Int)
(declare-fun t62 () Int)
(declare-fun t63 () Int)
(declare-fun t64 () Int)
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= l13 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l8 0))
(assert (>= s0 0))
(assert (>= s4 0))
(assert (>= s1 0))
(assert (>= s5 0))
(assert (>= s2 0))
(assert (>= s6 0))
(assert (>= s3 0))
(assert (>= l3 0))
(assert (>= s7 0))
(assert (>= l4 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (>= t59 0))
(assert (>= t60 0))
(assert (>= t61 0))
(assert (>= t62 0))
(assert (>= t63 0))
(assert (>= t64 0))
(assert (= s8 (+ 0)))
(assert (= s9 (+ 0)))
(assert (= s10 (+ 0)))
(assert (= s11 (+ 0)))
(assert (= s12 (+ 0)))
(assert (= s13 (+ 0)))
(assert (= s14 (+ 0)))
(assert (= s15 (+ 0)))
(assert (= s16 (+ 0 t14 t23 t42 t9)))
(assert (= l13 (+ 0 t14 t23 t42 t9)))
(assert (= l0 (+ init1 (- t1) (- t15) (- t16) (- t2) (- t29) (- t30) (- t43) (- t44))))
(assert (= l1 (+ 0 t1 t15 t16 t2 t29 t30 t43 t44 (- t17) (- t18) (- t3) (- t31) (- t32) (- t4) (- t45) (- t46))))
(assert (= l2 (+ 0 t17 t18 t3 t31 t32 t4 t45 t46 (- t19) (- t33) (- t47) (- t5))))
(assert (= l5 (+ 0 t21 t35 t49 t7 (- t22) (- t36) (- t50) (- t8))))
(assert (= l6 (+ 0 t22 t36 t50 t8 (- t23) (- t37) (- t51) (- t9))))
(assert (= l7 (+ 0 t37 t51)))
(assert (= l9 (+ 0 t10 t24 t38 t52 (- t12) (- t26) (- t40) (- t54))))
(assert (= l10 (+ 0 t12 t26 t40 t54 (- t13) (- t27) (- t41) (- t55))))
(assert (= l11 (+ 0 t13 t27 t41 t55 (- t14) (- t28) (- t42) (- t56))))
(assert (= l12 (+ 0 t28 t56)))
(assert (= l8 (+ 0 t57 t58 t59 t60 (- t10) (- t24) (- t38) (- t52))))
(assert (= s0 (+ 1 t17 t29 t57 (- t13) (- t14) (- t2) (- t4) (- t5) (- t61) (- t8) (- t9))))
(assert (= s4 (+ 0 t61 (- t57))))
(assert (= s1 (+ 0 t13 t4 t41 t43 t55 t58 (- t16) (- t17) (- t19) (- t22) (- t23) (- t62))))
(assert (= s5 (+ 0 t62 (- t58))))
(assert (= s2 (+ 0 t19 t2 t22 t45 t47 t5 t50 t59 t8 (- t29) (- t32) (- t41) (- t42) (- t63))))
(assert (= s6 (+ 0 t63 (- t59))))
(assert (= s3 (+ 0 t16 t32 t60 (- t43) (- t45) (- t47) (- t50) (- t55) (- t64))))
(assert (= l3 (+ 0 t19 t33 t47 t5 (- t57) (- t58) (- t59) (- t60))))
(assert (= s7 (+ 0 t64 (- t60))))
(assert (= l4 (+ 0 t61 t62 t63 t64 (- t21) (- t35) (- t49) (- t7))))
(assert (>= init1 1))
(assert (>= s16 1))
(assert (>= l13 1))
(check-sat)
(get-model)

* Checking SAT(C0)
sat
(model 
  (define-fun t3 () Int
    1)
  (define-fun t28 () Int
    0)
  (define-fun t5 () Int
    0)
  (define-fun t15 () Int
    0)
  (define-fun t60 () Int
    1)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    1)
  (define-fun t51 () Int
    0)
  (define-fun t62 () Int
    0)
  (define-fun t33 () Int
    1)
  (define-fun t40 () Int
    0)
  (define-fun t41 () Int
    0)
  (define-fun t31 () Int
    0)
  (define-fun t2 () Int
    0)
  (define-fun t46 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t52 () Int
    0)
  (define-fun t59 () Int
    0)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t24 () Int
    0)
  (define-fun t54 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    1)
  (define-fun t55 () Int
    0)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t21 () Int
    0)
  (define-fun t63 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t17 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t1 () Int
    0)
  (define-fun t23 () Int
    0)
  (define-fun t57 () Int
    0)
  (define-fun t56 () Int
    0)
  (define-fun t61 () Int
    0)
  (define-fun t30 () Int
    1)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    0)
  (define-fun t50 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t58 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t36 () Int
    1)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t64 () Int
    1)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun t53 () Int
    0)
  (define-fun t48 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t34 () Int
    0)
  (define-fun t25 () Int
    0)
  (define-fun t20 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t6 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun s7 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun s6 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l8 () Int
    1)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    0)
  (define-fun l13 () Int
    1)
  (define-fun s16 () Int
    1)
  (define-fun s15 () Int
    0)
  (define-fun s14 () Int
    0)
  (define-fun s13 () Int
    0)
  (define-fun s12 () Int
    0)
  (define-fun s11 () Int
    0)
  (define-fun s10 () Int
    0)
  (define-fun s9 () Int
    0)
  (define-fun s8 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t3, 1).
assignment(t28, 0).
assignment(t5, 0).
assignment(t15, 0).
assignment(t60, 1).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 1).
assignment(t51, 0).
assignment(t62, 0).
assignment(t33, 1).
assignment(t40, 0).
assignment(t41, 0).
assignment(t31, 0).
assignment(t2, 0).
assignment(t46, 0).
assignment(t4, 0).
assignment(t52, 0).
assignment(t59, 0).
assignment(t49, 0).
assignment(t8, 0).
assignment(t24, 0).
assignment(t54, 0).
assignment(t37, 0).
assignment(t9, 1).
assignment(t55, 0).
assignment(t18, 0).
assignment(t35, 0).
assignment(t12, 0).
assignment(t21, 0).
assignment(t63, 0).
assignment(t44, 0).
assignment(init1, 1).
assignment(t17, 0).
assignment(t26, 0).
assignment(t1, 0).
assignment(t23, 0).
assignment(t57, 0).
assignment(t56, 0).
assignment(t61, 0).
assignment(t30, 1).
assignment(t43, 0).
assignment(t47, 0).
assignment(t50, 0).
assignment(t32, 0).
assignment(t45, 0).
assignment(t42, 0).
assignment(t58, 0).
assignment(t19, 0).
assignment(t36, 1).
assignment(t22, 0).
assignment(t13, 0).
assignment(t64, 1).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t10, 0).
assignment(t53, 0).
assignment(t48, 0).
assignment(t39, 0).
assignment(t34, 0).
assignment(t25, 0).
assignment(t20, 0).
assignment(t11, 0).
assignment(t6, 0).
assignment(l4, 0).
assignment(s7, 0).
assignment(l3, 0).
assignment(s3, 0).
assignment(s6, 0).
assignment(s2, 0).
assignment(s5, 0).
assignment(s1, 0).
assignment(s4, 0).
assignment(s0, 0).
assignment(l8, 1).
assignment(l12, 0).
assignment(l11, 0).
assignment(l10, 0).
assignment(l9, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(l5, 0).
assignment(l2, 0).
assignment(l1, 0).
assignment(l0, 0).
assignment(l13, 1).
assignment(s16, 1).
assignment(s15, 0).
assignment(s14, 0).
assignment(s13, 0).
assignment(s12, 0).
assignment(s11, 0).
assignment(s10, 0).
assignment(s9, 0).
assignment(s8, 0).

- constraints C_theta...
(declare-fun s8 () Bool)
(declare-fun s9 () Bool)
(declare-fun s10 () Bool)
(declare-fun s11 () Bool)
(declare-fun s12 () Bool)
(declare-fun s13 () Bool)
(declare-fun s14 () Bool)
(declare-fun s15 () Bool)
(declare-fun s16 () Bool)
(declare-fun l13 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l2 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l9 () Bool)
(declare-fun l10 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l8 () Bool)
(declare-fun s0 () Bool)
(declare-fun s4 () Bool)
(declare-fun s1 () Bool)
(declare-fun s5 () Bool)
(declare-fun s2 () Bool)
(declare-fun s6 () Bool)
(declare-fun s3 () Bool)
(declare-fun l3 () Bool)
(declare-fun s7 () Bool)
(declare-fun l4 () Bool)

(assert (implies l0 (and (or s3 l1) (or s1 l1) (or s2 l1) (or s0 l1) (or s3 l1) (or s1 l1) (or s2 l1) (or s0 l1))))
(assert (implies l1 (and (or s3 l2) (or s2 l2) (or s3 l2) (or s2 l2) (or s1 l2) (or s0 l2) (or s1 l2) (or s0 l2))))
(assert (implies l2 (and (or s2 l3) (or s2 l3) (or s2 l3) (or s2 l3))))
(assert (implies l5 (and (or s2 l6) (or s2 l6) (or s2 l6) (or s2 l6))))
(assert (implies l6 (and (or s3 l7) (or s2 l7) (or s16 l13) (or s16 l13))))
(assert (implies l9 (and (or s3 l10) (or l9 s3) (or s2 l10) (or l9 s2) (or s1 l10) (or l9 s1) (or s0 l10) (or l9 s0))))
(assert (implies l10 (and (or s1 l11) (or s1 l11) (or s1 l11) (or s1 l11))))
(assert (implies l11 (and (or s3 l12) (or s16 l13) (or s1 l12) (or s16 l13))))
(assert (implies l8 (and (or s3 l9) (or s2 l9) (or s1 l9) (or s0 l9))))
(assert (implies s0 (and (or l3 s4 l4) (or s16 l13) (or s1 l11) (or s0 l10) (or l9 s0) (or s0 l9) (or s16 l13) (or s2 l6) (or s0 l5) (or l4 s0) (or s2 l3) (or s1 l2) (or s0 l2) (or s2 l1) (or s0 l1))))
(assert (implies s4 (or s0 l8)))
(assert (implies s1 (and (or l3 s5 l4) (or s1 l12) (or s1 l11) (or s1 l10) (or l9 s1) (or s1 l9) (or s16 l13) (or s2 l6) (or s1 l5) (or l4 s1) (or s2 l3) (or s1 l2) (or s0 l2) (or s3 l1) (or s1 l1))))
(assert (implies s5 (or s1 l8)))
(assert (implies s2 (and (or l3 s6 l4) (or s16 l13) (or s1 l11) (or s2 l10) (or l9 s2) (or s2 l9) (or s2 l7) (or s2 l6) (or s2 l5) (or l4 s2) (or s2 l3) (or s3 l2) (or s2 l2) (or s2 l1) (or s0 l1))))
(assert (implies s6 (or s2 l8)))
(assert (implies s3 (and (or l3 s7 l4) (or s3 l12) (or s1 l11) (or s3 l10) (or l9 s3) (or s3 l9) (or s3 l7) (or s2 l6) (or s3 l5) (or l4 s3) (or s2 l3) (or s3 l2) (or s2 l2) (or s3 l1) (or s1 l1))))
(assert (implies l3 (and (or l3 s7 l4) (or l3 s6 l4) (or l3 s5 l4) (or l3 s4 l4) (or s3 l8) (or s2 l8) (or s1 l8) (or s0 l8))))
(assert (implies s7 (or s3 l8)))
(assert (implies l4 (and (or s3 l5) (or l4 s3) (or s2 l5) (or l4 s2) (or s1 l5) (or l4 s1) (or s0 l5) (or l4 s0))))

(assert (or s0 l0))

(assert (not l8))
(assert (not l13))
(assert (not s16))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 60 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

