PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/peterson_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s8, [], []).
place(s9, [], []).
place(s10, [], []).
place(s11, [], []).
place(s12, [], []).
place(s13, [], []).
place(s14, [], []).
place(s15, [], []).
place(s16, [t42,t23,t14,t9], []).
place(l13, [t42,t23,t14,t9], []).
place(l1, [t44,t43,t30,t29,t16,t15,t2,t1], [t46,t45,t32,t31,t18,t17,t4,t3]).
place(l2, [t46,t45,t32,t31,t18,t17,t4,t3], [t47,t33,t19,t5]).
place(l5, [t49,t35,t21,t7], [t50,t36,t22,t8]).
place(l6, [t50,t36,t22,t8], [t51,t37,t23,t9]).
place(l7, [t51,t37], []).
place(l9, [t53,t52,t39,t38,t25,t24,t11,t10], [t54,t53,t40,t39,t26,t25,t12,t11]).
place(l10, [t54,t40,t26,t12], [t55,t41,t27,t13]).
place(l11, [t55,t41,t27,t13], [t56,t42,t28,t14]).
place(l12, [t56,t28], []).
place(l8, [t60,t59,t58,t57], [t52,t38,t24,t10]).
place(s0, [t57,t29,t17,t12,t11,t10,t7,t6,t3,t1], [t61,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s4, [t61], [t57]).
place(s1, [t58,t55,t43,t41,t28,t27,t26,t25,t24,t21,t20,t18,t15,t13,t4], [t62,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15]).
place(s5, [t62], [t58]).
place(s2, [t59,t50,t47,t45,t40,t39,t38,t37,t36,t35,t34,t33,t31,t30,t22,t19,t8,t5,t2], [t63,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29]).
place(s6, [t63], [t59]).
place(s3, [t60,t56,t54,t53,t52,t51,t49,t48,t46,t44,t32,t16], [t64,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43]).
place(l3, [t64,t63,t62,t61,t47,t33,t19,t5], [t64,t63,t62,t61,t60,t59,t58,t57]).
place(s7, [t64], [t60]).
place(l4, [t64,t63,t62,t61,t48,t34,t20,t6], [t49,t48,t35,t34,t21,t20,t7,t6]).
place(l0, [init1], [t44,t43,t30,t29,t16,t15,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s2,l1]).
transition(t3, [l1,s0], [s0,l2]).
transition(t4, [l1,s0], [s1,l2]).
transition(t5, [l2,s0], [s2,l3]).
transition(t6, [l4,s0], [l4,s0]).
transition(t7, [l4,s0], [s0,l5]).
transition(t8, [l5,s0], [s2,l6]).
transition(t9, [l6,s0], [s16,l13]).
transition(t10, [l8,s0], [s0,l9]).
transition(t11, [l9,s0], [l9,s0]).
transition(t12, [l9,s0], [s0,l10]).
transition(t13, [l10,s0], [s1,l11]).
transition(t14, [l11,s0], [s16,l13]).
transition(t15, [l0,s1], [s1,l1]).
transition(t16, [l0,s1], [s3,l1]).
transition(t17, [l1,s1], [s0,l2]).
transition(t18, [l1,s1], [s1,l2]).
transition(t19, [l2,s1], [s2,l3]).
transition(t20, [l4,s1], [l4,s1]).
transition(t21, [l4,s1], [s1,l5]).
transition(t22, [l5,s1], [s2,l6]).
transition(t23, [l6,s1], [s16,l13]).
transition(t24, [l8,s1], [s1,l9]).
transition(t25, [l9,s1], [l9,s1]).
transition(t26, [l9,s1], [s1,l10]).
transition(t27, [l10,s1], [s1,l11]).
transition(t28, [l11,s1], [s1,l12]).
transition(t29, [l0,s2], [s0,l1]).
transition(t30, [l0,s2], [s2,l1]).
transition(t31, [l1,s2], [s2,l2]).
transition(t32, [l1,s2], [s3,l2]).
transition(t33, [l2,s2], [s2,l3]).
transition(t34, [l4,s2], [l4,s2]).
transition(t35, [l4,s2], [s2,l5]).
transition(t36, [l5,s2], [s2,l6]).
transition(t37, [l6,s2], [s2,l7]).
transition(t38, [l8,s2], [s2,l9]).
transition(t39, [l9,s2], [l9,s2]).
transition(t40, [l9,s2], [s2,l10]).
transition(t41, [l10,s2], [s1,l11]).
transition(t42, [l11,s2], [s16,l13]).
transition(t43, [l0,s3], [s1,l1]).
transition(t44, [l0,s3], [s3,l1]).
transition(t45, [l1,s3], [s2,l2]).
transition(t46, [l1,s3], [s3,l2]).
transition(t47, [l2,s3], [s2,l3]).
transition(t48, [l4,s3], [l4,s3]).
transition(t49, [l4,s3], [s3,l5]).
transition(t50, [l5,s3], [s2,l6]).
transition(t51, [l6,s3], [s3,l7]).
transition(t52, [l8,s3], [s3,l9]).
transition(t53, [l9,s3], [l9,s3]).
transition(t54, [l9,s3], [s3,l10]).
transition(t55, [l10,s3], [s1,l11]).
transition(t56, [l11,s3], [s3,l12]).
transition(t57, [l3,s4], [s0,l8]).
transition(t58, [l3,s5], [s1,l8]).
transition(t59, [l3,s6], [s2,l8]).
transition(t60, [l3,s7], [s3,l8]).
transition(t61, [l3,s0], [l3,s4,l4]).
transition(t62, [l3,s1], [l3,s5,l4]).
transition(t63, [l3,s2], [l3,s6,l4]).
transition(t64, [l3,s3], [l3,s7,l4]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s2, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l2, 1).
weight(l1, t4, 1).
weight(s0, t4, 1).
weight(t4, s1, 1).
weight(t4, l2, 1).
weight(l2, t5, 1).
weight(s0, t5, 1).
weight(t5, s2, 1).
weight(t5, l3, 1).
weight(l4, t6, 1).
weight(s0, t6, 1).
weight(t6, l4, 1).
weight(t6, s0, 1).
weight(l4, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l5, 1).
weight(l5, t8, 1).
weight(s0, t8, 1).
weight(t8, s2, 1).
weight(t8, l6, 1).
weight(l6, t9, 1).
weight(s0, t9, 1).
weight(t9, s16, 1).
weight(t9, l13, 1).
weight(l8, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l9, 1).
weight(l9, t11, 1).
weight(s0, t11, 1).
weight(t11, l9, 1).
weight(t11, s0, 1).
weight(l9, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l10, 1).
weight(l10, t13, 1).
weight(s0, t13, 1).
weight(t13, s1, 1).
weight(t13, l11, 1).
weight(l11, t14, 1).
weight(s0, t14, 1).
weight(t14, s16, 1).
weight(t14, l13, 1).
weight(l0, t15, 1).
weight(s1, t15, 1).
weight(t15, s1, 1).
weight(t15, l1, 1).
weight(l0, t16, 1).
weight(s1, t16, 1).
weight(t16, s3, 1).
weight(t16, l1, 1).
weight(l1, t17, 1).
weight(s1, t17, 1).
weight(t17, s0, 1).
weight(t17, l2, 1).
weight(l1, t18, 1).
weight(s1, t18, 1).
weight(t18, s1, 1).
weight(t18, l2, 1).
weight(l2, t19, 1).
weight(s1, t19, 1).
weight(t19, s2, 1).
weight(t19, l3, 1).
weight(l4, t20, 1).
weight(s1, t20, 1).
weight(t20, l4, 1).
weight(t20, s1, 1).
weight(l4, t21, 1).
weight(s1, t21, 1).
weight(t21, s1, 1).
weight(t21, l5, 1).
weight(l5, t22, 1).
weight(s1, t22, 1).
weight(t22, s2, 1).
weight(t22, l6, 1).
weight(l6, t23, 1).
weight(s1, t23, 1).
weight(t23, s16, 1).
weight(t23, l13, 1).
weight(l8, t24, 1).
weight(s1, t24, 1).
weight(t24, s1, 1).
weight(t24, l9, 1).
weight(l9, t25, 1).
weight(s1, t25, 1).
weight(t25, l9, 1).
weight(t25, s1, 1).
weight(l9, t26, 1).
weight(s1, t26, 1).
weight(t26, s1, 1).
weight(t26, l10, 1).
weight(l10, t27, 1).
weight(s1, t27, 1).
weight(t27, s1, 1).
weight(t27, l11, 1).
weight(l11, t28, 1).
weight(s1, t28, 1).
weight(t28, s1, 1).
weight(t28, l12, 1).
weight(l0, t29, 1).
weight(s2, t29, 1).
weight(t29, s0, 1).
weight(t29, l1, 1).
weight(l0, t30, 1).
weight(s2, t30, 1).
weight(t30, s2, 1).
weight(t30, l1, 1).
weight(l1, t31, 1).
weight(s2, t31, 1).
weight(t31, s2, 1).
weight(t31, l2, 1).
weight(l1, t32, 1).
weight(s2, t32, 1).
weight(t32, s3, 1).
weight(t32, l2, 1).
weight(l2, t33, 1).
weight(s2, t33, 1).
weight(t33, s2, 1).
weight(t33, l3, 1).
weight(l4, t34, 1).
weight(s2, t34, 1).
weight(t34, l4, 1).
weight(t34, s2, 1).
weight(l4, t35, 1).
weight(s2, t35, 1).
weight(t35, s2, 1).
weight(t35, l5, 1).
weight(l5, t36, 1).
weight(s2, t36, 1).
weight(t36, s2, 1).
weight(t36, l6, 1).
weight(l6, t37, 1).
weight(s2, t37, 1).
weight(t37, s2, 1).
weight(t37, l7, 1).
weight(l8, t38, 1).
weight(s2, t38, 1).
weight(t38, s2, 1).
weight(t38, l9, 1).
weight(l9, t39, 1).
weight(s2, t39, 1).
weight(t39, l9, 1).
weight(t39, s2, 1).
weight(l9, t40, 1).
weight(s2, t40, 1).
weight(t40, s2, 1).
weight(t40, l10, 1).
weight(l10, t41, 1).
weight(s2, t41, 1).
weight(t41, s1, 1).
weight(t41, l11, 1).
weight(l11, t42, 1).
weight(s2, t42, 1).
weight(t42, s16, 1).
weight(t42, l13, 1).
weight(l0, t43, 1).
weight(s3, t43, 1).
weight(t43, s1, 1).
weight(t43, l1, 1).
weight(l0, t44, 1).
weight(s3, t44, 1).
weight(t44, s3, 1).
weight(t44, l1, 1).
weight(l1, t45, 1).
weight(s3, t45, 1).
weight(t45, s2, 1).
weight(t45, l2, 1).
weight(l1, t46, 1).
weight(s3, t46, 1).
weight(t46, s3, 1).
weight(t46, l2, 1).
weight(l2, t47, 1).
weight(s3, t47, 1).
weight(t47, s2, 1).
weight(t47, l3, 1).
weight(l4, t48, 1).
weight(s3, t48, 1).
weight(t48, l4, 1).
weight(t48, s3, 1).
weight(l4, t49, 1).
weight(s3, t49, 1).
weight(t49, s3, 1).
weight(t49, l5, 1).
weight(l5, t50, 1).
weight(s3, t50, 1).
weight(t50, s2, 1).
weight(t50, l6, 1).
weight(l6, t51, 1).
weight(s3, t51, 1).
weight(t51, s3, 1).
weight(t51, l7, 1).
weight(l8, t52, 1).
weight(s3, t52, 1).
weight(t52, s3, 1).
weight(t52, l9, 1).
weight(l9, t53, 1).
weight(s3, t53, 1).
weight(t53, l9, 1).
weight(t53, s3, 1).
weight(l9, t54, 1).
weight(s3, t54, 1).
weight(t54, s3, 1).
weight(t54, l10, 1).
weight(l10, t55, 1).
weight(s3, t55, 1).
weight(t55, s1, 1).
weight(t55, l11, 1).
weight(l11, t56, 1).
weight(s3, t56, 1).
weight(t56, s3, 1).
weight(t56, l12, 1).
weight(l3, t57, 1).
weight(s4, t57, 1).
weight(t57, s0, 1).
weight(t57, l8, 1).
weight(l3, t58, 1).
weight(s5, t58, 1).
weight(t58, s1, 1).
weight(t58, l8, 1).
weight(l3, t59, 1).
weight(s6, t59, 1).
weight(t59, s2, 1).
weight(t59, l8, 1).
weight(l3, t60, 1).
weight(s7, t60, 1).
weight(t60, s3, 1).
weight(t60, l8, 1).
weight(l3, t61, 1).
weight(s0, t61, 1).
weight(t61, l3, 1).
weight(t61, s4, 1).
weight(t61, l4, 1).
weight(l3, t62, 1).
weight(s1, t62, 1).
weight(t62, l3, 1).
weight(t62, s5, 1).
weight(t62, l4, 1).
weight(l3, t63, 1).
weight(s2, t63, 1).
weight(t63, l3, 1).
weight(t63, s6, 1).
weight(t63, l4, 1).
weight(l3, t64, 1).
weight(s3, t64, 1).
weight(t64, l3, 1).
weight(t64, s7, 1).
weight(t64, l4, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s16 1)').
cond('(>= l13 1)').

target(s16, 1).
target(l13, 1).


* Constructing constraints C' for petri net N
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun s11 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun l13 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l8 () Real)
(declare-fun s0 () Real)
(declare-fun s4 () Real)
(declare-fun s1 () Real)
(declare-fun s5 () Real)
(declare-fun s2 () Real)
(declare-fun s6 () Real)
(declare-fun s3 () Real)
(declare-fun l3 () Real)
(declare-fun s7 () Real)
(declare-fun l4 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s2)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l2) l3 (- s0) s2)))
(assert (>= 0 (+)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 (- s0) s2)))
(assert (>= 0 (+ l13 (- l6) (- s0) s16)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+)))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ (- l10) l11 (- s0) s1)))
(assert (>= 0 (+ (- l11) l13 (- s0) s16)))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s1) s3)))
(assert (>= 0 (+ (- l1) l2 s0 (- s1))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3 (- s1) s2)))
(assert (>= 0 (+)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 (- s1) s2)))
(assert (>= 0 (+ l13 (- l6) (- s1) s16)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+)))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l0) l1 s0 (- s2))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s2) s3)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+)))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ (- l10) l11 s1 (- s2))))
(assert (>= 0 (+ (- l11) l13 s16 (- s2))))
(assert (>= 0 (+ (- l0) l1 s1 (- s3))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2 s2 (- s3))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3 s2 (- s3))))
(assert (>= 0 (+)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 s2 (- s3))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+)))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ (- l10) l11 s1 (- s3))))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l3) l8 s0 (- s4))))
(assert (>= 0 (+ (- l3) l8 s1 (- s5))))
(assert (>= 0 (+ (- l3) l8 s2 (- s6))))
(assert (>= 0 (+ (- l3) l8 s3 (- s7))))
(assert (>= 0 (+ l4 (- s0) s4)))
(assert (>= 0 (+ l4 (- s1) s5)))
(assert (>= 0 (+ l4 (- s2) s6)))
(assert (>= 0 (+ l4 (- s3) s7)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s16 l13 (- s0) (- l0))))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= l13 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l8 0))
(assert (>= s0 0))
(assert (>= s4 0))
(assert (>= s1 0))
(assert (>= s5 0))
(assert (>= s2 0))
(assert (>= s6 0))
(assert (>= s3 0))
(assert (>= l3 0))
(assert (>= s7 0))
(assert (>= l4 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
(error "line 37 column 16: invalid function application, arguments missing")
(error "line 42 column 16: invalid function application, arguments missing")
(error "line 51 column 16: invalid function application, arguments missing")
(error "line 56 column 16: invalid function application, arguments missing")
(error "line 65 column 16: invalid function application, arguments missing")
(error "line 70 column 16: invalid function application, arguments missing")
(error "line 79 column 16: invalid function application, arguments missing")
(error "line 84 column 16: invalid function application, arguments missing")
unsat
(error "line 130 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


