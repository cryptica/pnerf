PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/rand_lock_p0_vs_satabs.2/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(l1, [], [t124,t123,t4,t3]).
place(l2, [], [t126,t125,t6,t5]).
place(l3, [], [t128,t127,t8,t7]).
place(l4, [t122,t121,t2,t1], [t130,t129,t10,t9]).
place(l5, [t124,t123,t4,t3], [t132,t131,t12,t11]).
place(l6, [t126,t125,t6,t5], [t134,t133,t14,t13]).
place(l7, [t128,t127,t8,t7], [t136,t135,t16,t15]).
place(l8, [t133,t129,t13,t9], [t138,t137,t18,t17]).
place(l9, [t135,t131,t15,t11], [t140,t139,t20,t19]).
place(l10, [t134,t130,t14,t10], [t142,t141,t22,t21]).
place(l11, [t136,t132,t16,t12], [t144,t143,t24,t23]).
place(l12, [t139,t137,t19,t17], [t145,t25]).
place(l13, [t140,t138,t20,t18], [t146,t26]).
place(l14, [t143,t141,t23,t21], [t147,t27]).
place(l15, [t144,t142,t24,t22], [t148,t28]).
place(l16, [t145,t25], [t149,t29]).
place(l17, [t146,t26], [t150,t30]).
place(l18, [t147,t27], [t151,t31]).
place(l19, [t148,t28], [t152,t32]).
place(s8, [t160,t159,t158,t157], []).
place(l100, [t160,t159,t158,t157], []).
place(l32, [t37], [t161,t41]).
place(l33, [t38], [t162,t42]).
place(l34, [t39], [t163,t43]).
place(l35, [t40], [t164,t44]).
place(l48, [t167,t165,t47,t45], [t174,t173,t54,t53]).
place(l49, [t168,t166,t48,t46], [t176,t175,t56,t55]).
place(l50, [t171,t169,t51,t49], [t178,t177,t58,t57]).
place(l51, [t172,t170,t52,t50], [t180,t179,t60,t59]).
place(l52, [t175,t173,t55,t53], [t184,t183,t182,t181,t64,t63,t62,t61]).
place(l53, [t176,t174,t56,t54], [t188,t187,t186,t185,t68,t67,t66,t65]).
place(l54, [t179,t177,t59,t57], [t192,t191,t190,t189,t72,t71,t70,t69]).
place(l55, [t180,t178,t60,t58], [t196,t195,t194,t193,t76,t75,t74,t73]).
place(l56, [t193,t189,t185,t181,t73,t69,t65,t61], [t197,t77]).
place(l60, [t197,t77], [t204,t203,t202,t201,t84,t83,t82,t81]).
place(l61, [t198,t78], [t208,t207,t206,t205,t88,t87,t86,t85]).
place(l62, [t199,t79], [t212,t211,t210,t209,t92,t91,t90,t89]).
place(l63, [t200,t80], [t216,t215,t214,t213,t96,t95,t94,t93]).
place(l64, [t213,t209,t205,t201,t93,t89,t85,t81], [t217,t97]).
place(l65, [t214,t210,t206,t202,t94,t90,t86,t82], [t218,t98]).
place(l57, [t218,t194,t190,t186,t182,t98,t74,t70,t66,t62], [t198,t78]).
place(l66, [t215,t211,t207,t203,t95,t91,t87,t83], [t219,t99]).
place(l58, [t219,t195,t191,t187,t183,t99,t75,t71,t67,t63], [t199,t79]).
place(l67, [t216,t212,t208,t204,t96,t92,t88,t84], [t220,t100]).
place(l59, [t220,t196,t192,t188,t184,t100,t76,t72,t68,t64], [t200,t80]).
place(l68, [t217,t97], [t222,t221,t102,t101]).
place(l69, [], [t224,t223,t104,t103]).
place(l70, [], [t226,t225,t106,t105]).
place(l71, [], [t228,t227,t108,t107]).
place(l72, [t222,t221,t102,t101], [t229,t109]).
place(l73, [t224,t223,t104,t103], [t230,t110]).
place(l74, [t226,t225,t106,t105], [t231,t111]).
place(l75, [t228,t227,t108,t107], [t232,t112]).
place(l20, [t233,t149,t113,t29], [t153,t33]).
place(l21, [t234,t150,t114,t30], [t154,t34]).
place(l22, [t235,t151,t115,t31], [t155,t35]).
place(l23, [t236,t152,t116,t32], [t156,t36]).
place(l92, [], [t237,t117]).
place(l96, [t237,t117], []).
place(l93, [], [t238,t118]).
place(l97, [t238,t118], []).
place(l94, [], [t239,t119]).
place(l98, [t239,t119], []).
place(l95, [], [t240,t120]).
place(l99, [t240,t120], []).
place(l88, [t245,t241], [t233,t113]).
place(l89, [t246,t242], [t234,t114]).
place(l90, [t247,t243], [t235,t115]).
place(l91, [t248,t244], [t236,t116]).
place(s4, [t260,t259,t258,t257,t252,t251,t250,t249,t112,t111,t110,t109,t44,t43,t42,t41], [t264,t263,t262,t261,t260,t259,t258,t257,t256,t255,t254,t253,t252,t251,t250,t249]).
place(l36, [t161,t41], [t265,t249]).
place(l37, [t162,t42], [t266,t250]).
place(l38, [t163,t43], [t267,t251]).
place(l39, [t164,t44], [t268,t252]).
place(l40, [t265,t249], [t269,t253]).
place(l44, [t269,t253], [t166,t165,t46,t45]).
place(l41, [t266,t250], [t270,t254]).
place(l45, [t270,t254], [t168,t167,t48,t47]).
place(l42, [t267,t251], [t271,t255]).
place(l46, [t271,t255], [t170,t169,t50,t49]).
place(l43, [t268,t252], [t272,t256]).
place(l47, [t272,t256], [t172,t171,t52,t51]).
place(l76, [t229,t109], [t273,t257]).
place(l77, [t230,t110], [t274,t258]).
place(l78, [t231,t111], [t275,t259]).
place(l79, [t232,t112], [t276,t260]).
place(l80, [t273,t257], [t277,t261]).
place(l84, [t277,t261], []).
place(l81, [t274,t258], [t278,t262]).
place(l85, [t278,t262], []).
place(l82, [t275,t259], [t279,t263]).
place(l86, [t279,t263], []).
place(l83, [t276,t260], [t280,t264]).
place(s5, [t276,t275,t274,t273,t268,t267,t266,t265,t232,t231,t230,t229,t164,t163,t162,t161], [t280,t279,t278,t277,t276,t275,t274,t273,t272,t271,t270,t269,t268,t267,t266,t265]).
place(l87, [t280,t264], []).
place(s0, [t264,t263,t262,t261,t256,t255,t254,t253,t244,t243,t242,t241,t227,t225,t223,t221,t152,t151,t150,t149,t127,t125,t123,t121,t120,t119,t118,t117,t116,t115,t114,t113,t107,t105,t103,t101,t100,t99,t98,t97,t96,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t7,t5,t3,t1], [t284,t283,t282,t281,t120,t119,t118,t117,t116,t115,t114,t113,t112,t111,t110,t109,t108,t107,t106,t105,t104,t103,t102,t101,t100,t99,t98,t97,t96,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t284,t283,t282,t281], [t244,t243,t242,t241]).
place(l24, [t285,t281,t153,t33], [t285,t281,t245,t241]).
place(l28, [t285,t281], [t157,t37]).
place(l25, [t286,t282,t154,t34], [t286,t282,t246,t242]).
place(l29, [t286,t282], [t158,t38]).
place(l26, [t287,t283,t155,t35], [t287,t283,t247,t243]).
place(l30, [t287,t283], [t159,t39]).
place(s1, [t280,t279,t278,t277,t272,t271,t270,t269,t248,t247,t246,t245,t240,t239,t238,t237,t236,t235,t234,t233,t228,t226,t224,t222,t220,t219,t218,t217,t216,t215,t214,t213,t212,t211,t210,t209,t208,t207,t206,t205,t204,t203,t202,t201,t200,t199,t198,t197,t196,t195,t194,t193,t192,t191,t190,t189,t188,t187,t186,t185,t184,t183,t182,t181,t180,t179,t178,t177,t176,t175,t174,t173,t172,t171,t170,t169,t168,t167,t166,t165,t156,t155,t154,t153,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t126,t124,t122,t108,t106,t104,t102,t28,t27,t26,t25,t8,t6,t4,t2], [t288,t287,t286,t285,t240,t239,t238,t237,t236,t235,t234,t233,t232,t231,t230,t229,t228,t227,t226,t225,t224,t223,t222,t221,t220,t219,t218,t217,t216,t215,t214,t213,t212,t211,t210,t209,t208,t207,t206,t205,t204,t203,t202,t201,t200,t199,t198,t197,t196,t195,t194,t193,t192,t191,t190,t189,t188,t187,t186,t185,t184,t183,t182,t181,t180,t179,t178,t177,t176,t175,t174,t173,t172,t171,t170,t169,t168,t167,t166,t165,t164,t163,t162,t161,t160,t159,t158,t157,t156,t155,t154,t153,t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121]).
place(l27, [t288,t284,t156,t36], [t288,t284,t248,t244]).
place(s3, [t288,t287,t286,t285], [t248,t247,t246,t245]).
place(l31, [t288,t284], [t160,t40]).
place(l0, [init1], [t122,t121,t2,t1]).

transition(t1, [l0,s0], [s0,l4]).
transition(t2, [l0,s0], [s1,l4]).
transition(t3, [l1,s0], [s0,l5]).
transition(t4, [l1,s0], [s1,l5]).
transition(t5, [l2,s0], [s0,l6]).
transition(t6, [l2,s0], [s1,l6]).
transition(t7, [l3,s0], [s0,l7]).
transition(t8, [l3,s0], [s1,l7]).
transition(t9, [l4,s0], [s0,l8]).
transition(t10, [l4,s0], [s0,l10]).
transition(t11, [l5,s0], [s0,l9]).
transition(t12, [l5,s0], [s0,l11]).
transition(t13, [l6,s0], [s0,l8]).
transition(t14, [l6,s0], [s0,l10]).
transition(t15, [l7,s0], [s0,l9]).
transition(t16, [l7,s0], [s0,l11]).
transition(t17, [l8,s0], [s0,l12]).
transition(t18, [l8,s0], [s0,l13]).
transition(t19, [l9,s0], [s0,l12]).
transition(t20, [l9,s0], [s0,l13]).
transition(t21, [l10,s0], [s0,l14]).
transition(t22, [l10,s0], [s0,l15]).
transition(t23, [l11,s0], [s0,l14]).
transition(t24, [l11,s0], [s0,l15]).
transition(t25, [l12,s0], [s1,l16]).
transition(t26, [l13,s0], [s1,l17]).
transition(t27, [l14,s0], [s1,l18]).
transition(t28, [l15,s0], [s1,l19]).
transition(t29, [l16,s0], [s0,l20]).
transition(t30, [l17,s0], [s0,l21]).
transition(t31, [l18,s0], [s0,l22]).
transition(t32, [l19,s0], [s0,l23]).
transition(t33, [l20,s0], [s0,l24]).
transition(t34, [l21,s0], [s0,l25]).
transition(t35, [l22,s0], [s0,l26]).
transition(t36, [l23,s0], [s0,l27]).
transition(t37, [l28,s0], [s0,l32]).
transition(t38, [l29,s0], [s0,l33]).
transition(t39, [l30,s0], [s0,l34]).
transition(t40, [l31,s0], [s0,l35]).
transition(t41, [l32,s0], [s4,l36]).
transition(t42, [l33,s0], [s4,l37]).
transition(t43, [l34,s0], [s4,l38]).
transition(t44, [l35,s0], [s4,l39]).
transition(t45, [l44,s0], [s0,l48]).
transition(t46, [l44,s0], [s0,l49]).
transition(t47, [l45,s0], [s0,l48]).
transition(t48, [l45,s0], [s0,l49]).
transition(t49, [l46,s0], [s0,l50]).
transition(t50, [l46,s0], [s0,l51]).
transition(t51, [l47,s0], [s0,l50]).
transition(t52, [l47,s0], [s0,l51]).
transition(t53, [l48,s0], [s0,l52]).
transition(t54, [l48,s0], [s0,l53]).
transition(t55, [l49,s0], [s0,l52]).
transition(t56, [l49,s0], [s0,l53]).
transition(t57, [l50,s0], [s0,l54]).
transition(t58, [l50,s0], [s0,l55]).
transition(t59, [l51,s0], [s0,l54]).
transition(t60, [l51,s0], [s0,l55]).
transition(t61, [l52,s0], [s0,l56]).
transition(t62, [l52,s0], [s0,l57]).
transition(t63, [l52,s0], [s0,l58]).
transition(t64, [l52,s0], [s0,l59]).
transition(t65, [l53,s0], [s0,l56]).
transition(t66, [l53,s0], [s0,l57]).
transition(t67, [l53,s0], [s0,l58]).
transition(t68, [l53,s0], [s0,l59]).
transition(t69, [l54,s0], [s0,l56]).
transition(t70, [l54,s0], [s0,l57]).
transition(t71, [l54,s0], [s0,l58]).
transition(t72, [l54,s0], [s0,l59]).
transition(t73, [l55,s0], [s0,l56]).
transition(t74, [l55,s0], [s0,l57]).
transition(t75, [l55,s0], [s0,l58]).
transition(t76, [l55,s0], [s0,l59]).
transition(t77, [l56,s0], [s0,l60]).
transition(t78, [l57,s0], [s0,l61]).
transition(t79, [l58,s0], [s0,l62]).
transition(t80, [l59,s0], [s0,l63]).
transition(t81, [l60,s0], [s0,l64]).
transition(t82, [l60,s0], [s0,l65]).
transition(t83, [l60,s0], [s0,l66]).
transition(t84, [l60,s0], [s0,l67]).
transition(t85, [l61,s0], [s0,l64]).
transition(t86, [l61,s0], [s0,l65]).
transition(t87, [l61,s0], [s0,l66]).
transition(t88, [l61,s0], [s0,l67]).
transition(t89, [l62,s0], [s0,l64]).
transition(t90, [l62,s0], [s0,l65]).
transition(t91, [l62,s0], [s0,l66]).
transition(t92, [l62,s0], [s0,l67]).
transition(t93, [l63,s0], [s0,l64]).
transition(t94, [l63,s0], [s0,l65]).
transition(t95, [l63,s0], [s0,l66]).
transition(t96, [l63,s0], [s0,l67]).
transition(t97, [l64,s0], [s0,l68]).
transition(t98, [l65,s0], [s0,l57]).
transition(t99, [l66,s0], [s0,l58]).
transition(t100, [l67,s0], [s0,l59]).
transition(t101, [l68,s0], [s0,l72]).
transition(t102, [l68,s0], [s1,l72]).
transition(t103, [l69,s0], [s0,l73]).
transition(t104, [l69,s0], [s1,l73]).
transition(t105, [l70,s0], [s0,l74]).
transition(t106, [l70,s0], [s1,l74]).
transition(t107, [l71,s0], [s0,l75]).
transition(t108, [l71,s0], [s1,l75]).
transition(t109, [l72,s0], [s4,l76]).
transition(t110, [l73,s0], [s4,l77]).
transition(t111, [l74,s0], [s4,l78]).
transition(t112, [l75,s0], [s4,l79]).
transition(t113, [l88,s0], [s0,l20]).
transition(t114, [l89,s0], [s0,l21]).
transition(t115, [l90,s0], [s0,l22]).
transition(t116, [l91,s0], [s0,l23]).
transition(t117, [l92,s0], [s0,l96]).
transition(t118, [l93,s0], [s0,l97]).
transition(t119, [l94,s0], [s0,l98]).
transition(t120, [l95,s0], [s0,l99]).
transition(t121, [l0,s1], [s0,l4]).
transition(t122, [l0,s1], [s1,l4]).
transition(t123, [l1,s1], [s0,l5]).
transition(t124, [l1,s1], [s1,l5]).
transition(t125, [l2,s1], [s0,l6]).
transition(t126, [l2,s1], [s1,l6]).
transition(t127, [l3,s1], [s0,l7]).
transition(t128, [l3,s1], [s1,l7]).
transition(t129, [l4,s1], [s1,l8]).
transition(t130, [l4,s1], [s1,l10]).
transition(t131, [l5,s1], [s1,l9]).
transition(t132, [l5,s1], [s1,l11]).
transition(t133, [l6,s1], [s1,l8]).
transition(t134, [l6,s1], [s1,l10]).
transition(t135, [l7,s1], [s1,l9]).
transition(t136, [l7,s1], [s1,l11]).
transition(t137, [l8,s1], [s1,l12]).
transition(t138, [l8,s1], [s1,l13]).
transition(t139, [l9,s1], [s1,l12]).
transition(t140, [l9,s1], [s1,l13]).
transition(t141, [l10,s1], [s1,l14]).
transition(t142, [l10,s1], [s1,l15]).
transition(t143, [l11,s1], [s1,l14]).
transition(t144, [l11,s1], [s1,l15]).
transition(t145, [l12,s1], [s1,l16]).
transition(t146, [l13,s1], [s1,l17]).
transition(t147, [l14,s1], [s1,l18]).
transition(t148, [l15,s1], [s1,l19]).
transition(t149, [l16,s1], [s0,l20]).
transition(t150, [l17,s1], [s0,l21]).
transition(t151, [l18,s1], [s0,l22]).
transition(t152, [l19,s1], [s0,l23]).
transition(t153, [l20,s1], [s1,l24]).
transition(t154, [l21,s1], [s1,l25]).
transition(t155, [l22,s1], [s1,l26]).
transition(t156, [l23,s1], [s1,l27]).
transition(t157, [l28,s1], [s8,l100]).
transition(t158, [l29,s1], [s8,l100]).
transition(t159, [l30,s1], [s8,l100]).
transition(t160, [l31,s1], [s8,l100]).
transition(t161, [l32,s1], [s5,l36]).
transition(t162, [l33,s1], [s5,l37]).
transition(t163, [l34,s1], [s5,l38]).
transition(t164, [l35,s1], [s5,l39]).
transition(t165, [l44,s1], [s1,l48]).
transition(t166, [l44,s1], [s1,l49]).
transition(t167, [l45,s1], [s1,l48]).
transition(t168, [l45,s1], [s1,l49]).
transition(t169, [l46,s1], [s1,l50]).
transition(t170, [l46,s1], [s1,l51]).
transition(t171, [l47,s1], [s1,l50]).
transition(t172, [l47,s1], [s1,l51]).
transition(t173, [l48,s1], [s1,l52]).
transition(t174, [l48,s1], [s1,l53]).
transition(t175, [l49,s1], [s1,l52]).
transition(t176, [l49,s1], [s1,l53]).
transition(t177, [l50,s1], [s1,l54]).
transition(t178, [l50,s1], [s1,l55]).
transition(t179, [l51,s1], [s1,l54]).
transition(t180, [l51,s1], [s1,l55]).
transition(t181, [l52,s1], [s1,l56]).
transition(t182, [l52,s1], [s1,l57]).
transition(t183, [l52,s1], [s1,l58]).
transition(t184, [l52,s1], [s1,l59]).
transition(t185, [l53,s1], [s1,l56]).
transition(t186, [l53,s1], [s1,l57]).
transition(t187, [l53,s1], [s1,l58]).
transition(t188, [l53,s1], [s1,l59]).
transition(t189, [l54,s1], [s1,l56]).
transition(t190, [l54,s1], [s1,l57]).
transition(t191, [l54,s1], [s1,l58]).
transition(t192, [l54,s1], [s1,l59]).
transition(t193, [l55,s1], [s1,l56]).
transition(t194, [l55,s1], [s1,l57]).
transition(t195, [l55,s1], [s1,l58]).
transition(t196, [l55,s1], [s1,l59]).
transition(t197, [l56,s1], [s1,l60]).
transition(t198, [l57,s1], [s1,l61]).
transition(t199, [l58,s1], [s1,l62]).
transition(t200, [l59,s1], [s1,l63]).
transition(t201, [l60,s1], [s1,l64]).
transition(t202, [l60,s1], [s1,l65]).
transition(t203, [l60,s1], [s1,l66]).
transition(t204, [l60,s1], [s1,l67]).
transition(t205, [l61,s1], [s1,l64]).
transition(t206, [l61,s1], [s1,l65]).
transition(t207, [l61,s1], [s1,l66]).
transition(t208, [l61,s1], [s1,l67]).
transition(t209, [l62,s1], [s1,l64]).
transition(t210, [l62,s1], [s1,l65]).
transition(t211, [l62,s1], [s1,l66]).
transition(t212, [l62,s1], [s1,l67]).
transition(t213, [l63,s1], [s1,l64]).
transition(t214, [l63,s1], [s1,l65]).
transition(t215, [l63,s1], [s1,l66]).
transition(t216, [l63,s1], [s1,l67]).
transition(t217, [l64,s1], [s1,l68]).
transition(t218, [l65,s1], [s1,l57]).
transition(t219, [l66,s1], [s1,l58]).
transition(t220, [l67,s1], [s1,l59]).
transition(t221, [l68,s1], [s0,l72]).
transition(t222, [l68,s1], [s1,l72]).
transition(t223, [l69,s1], [s0,l73]).
transition(t224, [l69,s1], [s1,l73]).
transition(t225, [l70,s1], [s0,l74]).
transition(t226, [l70,s1], [s1,l74]).
transition(t227, [l71,s1], [s0,l75]).
transition(t228, [l71,s1], [s1,l75]).
transition(t229, [l72,s1], [s5,l76]).
transition(t230, [l73,s1], [s5,l77]).
transition(t231, [l74,s1], [s5,l78]).
transition(t232, [l75,s1], [s5,l79]).
transition(t233, [l88,s1], [s1,l20]).
transition(t234, [l89,s1], [s1,l21]).
transition(t235, [l90,s1], [s1,l22]).
transition(t236, [l91,s1], [s1,l23]).
transition(t237, [l92,s1], [s1,l96]).
transition(t238, [l93,s1], [s1,l97]).
transition(t239, [l94,s1], [s1,l98]).
transition(t240, [l95,s1], [s1,l99]).
transition(t241, [l24,s2], [s0,l88]).
transition(t242, [l25,s2], [s0,l89]).
transition(t243, [l26,s2], [s0,l90]).
transition(t244, [l27,s2], [s0,l91]).
transition(t245, [l24,s3], [s1,l88]).
transition(t246, [l25,s3], [s1,l89]).
transition(t247, [l26,s3], [s1,l90]).
transition(t248, [l27,s3], [s1,l91]).
transition(t249, [l36,s4], [s4,l40]).
transition(t250, [l37,s4], [s4,l41]).
transition(t251, [l38,s4], [s4,l42]).
transition(t252, [l39,s4], [s4,l43]).
transition(t253, [l40,s4], [s0,l44]).
transition(t254, [l41,s4], [s0,l45]).
transition(t255, [l42,s4], [s0,l46]).
transition(t256, [l43,s4], [s0,l47]).
transition(t257, [l76,s4], [s4,l80]).
transition(t258, [l77,s4], [s4,l81]).
transition(t259, [l78,s4], [s4,l82]).
transition(t260, [l79,s4], [s4,l83]).
transition(t261, [l80,s4], [s0,l84]).
transition(t262, [l81,s4], [s0,l85]).
transition(t263, [l82,s4], [s0,l86]).
transition(t264, [l83,s4], [s0,l87]).
transition(t265, [l36,s5], [s5,l40]).
transition(t266, [l37,s5], [s5,l41]).
transition(t267, [l38,s5], [s5,l42]).
transition(t268, [l39,s5], [s5,l43]).
transition(t269, [l40,s5], [s1,l44]).
transition(t270, [l41,s5], [s1,l45]).
transition(t271, [l42,s5], [s1,l46]).
transition(t272, [l43,s5], [s1,l47]).
transition(t273, [l76,s5], [s5,l80]).
transition(t274, [l77,s5], [s5,l81]).
transition(t275, [l78,s5], [s5,l82]).
transition(t276, [l79,s5], [s5,l83]).
transition(t277, [l80,s5], [s1,l84]).
transition(t278, [l81,s5], [s1,l85]).
transition(t279, [l82,s5], [s1,l86]).
transition(t280, [l83,s5], [s1,l87]).
transition(t281, [l24,s0], [l24,s2,l28]).
transition(t282, [l25,s0], [l25,s2,l29]).
transition(t283, [l26,s0], [l26,s2,l30]).
transition(t284, [l27,s0], [l27,s2,l31]).
transition(t285, [l24,s1], [l24,s3,l28]).
transition(t286, [l25,s1], [l25,s3,l29]).
transition(t287, [l26,s1], [l26,s3,l30]).
transition(t288, [l27,s1], [l27,s3,l31]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l4, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l4, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l5, 1).
weight(l1, t4, 1).
weight(s0, t4, 1).
weight(t4, s1, 1).
weight(t4, l5, 1).
weight(l2, t5, 1).
weight(s0, t5, 1).
weight(t5, s0, 1).
weight(t5, l6, 1).
weight(l2, t6, 1).
weight(s0, t6, 1).
weight(t6, s1, 1).
weight(t6, l6, 1).
weight(l3, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l7, 1).
weight(l3, t8, 1).
weight(s0, t8, 1).
weight(t8, s1, 1).
weight(t8, l7, 1).
weight(l4, t9, 1).
weight(s0, t9, 1).
weight(t9, s0, 1).
weight(t9, l8, 1).
weight(l4, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l10, 1).
weight(l5, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l9, 1).
weight(l5, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l11, 1).
weight(l6, t13, 1).
weight(s0, t13, 1).
weight(t13, s0, 1).
weight(t13, l8, 1).
weight(l6, t14, 1).
weight(s0, t14, 1).
weight(t14, s0, 1).
weight(t14, l10, 1).
weight(l7, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l9, 1).
weight(l7, t16, 1).
weight(s0, t16, 1).
weight(t16, s0, 1).
weight(t16, l11, 1).
weight(l8, t17, 1).
weight(s0, t17, 1).
weight(t17, s0, 1).
weight(t17, l12, 1).
weight(l8, t18, 1).
weight(s0, t18, 1).
weight(t18, s0, 1).
weight(t18, l13, 1).
weight(l9, t19, 1).
weight(s0, t19, 1).
weight(t19, s0, 1).
weight(t19, l12, 1).
weight(l9, t20, 1).
weight(s0, t20, 1).
weight(t20, s0, 1).
weight(t20, l13, 1).
weight(l10, t21, 1).
weight(s0, t21, 1).
weight(t21, s0, 1).
weight(t21, l14, 1).
weight(l10, t22, 1).
weight(s0, t22, 1).
weight(t22, s0, 1).
weight(t22, l15, 1).
weight(l11, t23, 1).
weight(s0, t23, 1).
weight(t23, s0, 1).
weight(t23, l14, 1).
weight(l11, t24, 1).
weight(s0, t24, 1).
weight(t24, s0, 1).
weight(t24, l15, 1).
weight(l12, t25, 1).
weight(s0, t25, 1).
weight(t25, s1, 1).
weight(t25, l16, 1).
weight(l13, t26, 1).
weight(s0, t26, 1).
weight(t26, s1, 1).
weight(t26, l17, 1).
weight(l14, t27, 1).
weight(s0, t27, 1).
weight(t27, s1, 1).
weight(t27, l18, 1).
weight(l15, t28, 1).
weight(s0, t28, 1).
weight(t28, s1, 1).
weight(t28, l19, 1).
weight(l16, t29, 1).
weight(s0, t29, 1).
weight(t29, s0, 1).
weight(t29, l20, 1).
weight(l17, t30, 1).
weight(s0, t30, 1).
weight(t30, s0, 1).
weight(t30, l21, 1).
weight(l18, t31, 1).
weight(s0, t31, 1).
weight(t31, s0, 1).
weight(t31, l22, 1).
weight(l19, t32, 1).
weight(s0, t32, 1).
weight(t32, s0, 1).
weight(t32, l23, 1).
weight(l20, t33, 1).
weight(s0, t33, 1).
weight(t33, s0, 1).
weight(t33, l24, 1).
weight(l21, t34, 1).
weight(s0, t34, 1).
weight(t34, s0, 1).
weight(t34, l25, 1).
weight(l22, t35, 1).
weight(s0, t35, 1).
weight(t35, s0, 1).
weight(t35, l26, 1).
weight(l23, t36, 1).
weight(s0, t36, 1).
weight(t36, s0, 1).
weight(t36, l27, 1).
weight(l28, t37, 1).
weight(s0, t37, 1).
weight(t37, s0, 1).
weight(t37, l32, 1).
weight(l29, t38, 1).
weight(s0, t38, 1).
weight(t38, s0, 1).
weight(t38, l33, 1).
weight(l30, t39, 1).
weight(s0, t39, 1).
weight(t39, s0, 1).
weight(t39, l34, 1).
weight(l31, t40, 1).
weight(s0, t40, 1).
weight(t40, s0, 1).
weight(t40, l35, 1).
weight(l32, t41, 1).
weight(s0, t41, 1).
weight(t41, s4, 1).
weight(t41, l36, 1).
weight(l33, t42, 1).
weight(s0, t42, 1).
weight(t42, s4, 1).
weight(t42, l37, 1).
weight(l34, t43, 1).
weight(s0, t43, 1).
weight(t43, s4, 1).
weight(t43, l38, 1).
weight(l35, t44, 1).
weight(s0, t44, 1).
weight(t44, s4, 1).
weight(t44, l39, 1).
weight(l44, t45, 1).
weight(s0, t45, 1).
weight(t45, s0, 1).
weight(t45, l48, 1).
weight(l44, t46, 1).
weight(s0, t46, 1).
weight(t46, s0, 1).
weight(t46, l49, 1).
weight(l45, t47, 1).
weight(s0, t47, 1).
weight(t47, s0, 1).
weight(t47, l48, 1).
weight(l45, t48, 1).
weight(s0, t48, 1).
weight(t48, s0, 1).
weight(t48, l49, 1).
weight(l46, t49, 1).
weight(s0, t49, 1).
weight(t49, s0, 1).
weight(t49, l50, 1).
weight(l46, t50, 1).
weight(s0, t50, 1).
weight(t50, s0, 1).
weight(t50, l51, 1).
weight(l47, t51, 1).
weight(s0, t51, 1).
weight(t51, s0, 1).
weight(t51, l50, 1).
weight(l47, t52, 1).
weight(s0, t52, 1).
weight(t52, s0, 1).
weight(t52, l51, 1).
weight(l48, t53, 1).
weight(s0, t53, 1).
weight(t53, s0, 1).
weight(t53, l52, 1).
weight(l48, t54, 1).
weight(s0, t54, 1).
weight(t54, s0, 1).
weight(t54, l53, 1).
weight(l49, t55, 1).
weight(s0, t55, 1).
weight(t55, s0, 1).
weight(t55, l52, 1).
weight(l49, t56, 1).
weight(s0, t56, 1).
weight(t56, s0, 1).
weight(t56, l53, 1).
weight(l50, t57, 1).
weight(s0, t57, 1).
weight(t57, s0, 1).
weight(t57, l54, 1).
weight(l50, t58, 1).
weight(s0, t58, 1).
weight(t58, s0, 1).
weight(t58, l55, 1).
weight(l51, t59, 1).
weight(s0, t59, 1).
weight(t59, s0, 1).
weight(t59, l54, 1).
weight(l51, t60, 1).
weight(s0, t60, 1).
weight(t60, s0, 1).
weight(t60, l55, 1).
weight(l52, t61, 1).
weight(s0, t61, 1).
weight(t61, s0, 1).
weight(t61, l56, 1).
weight(l52, t62, 1).
weight(s0, t62, 1).
weight(t62, s0, 1).
weight(t62, l57, 1).
weight(l52, t63, 1).
weight(s0, t63, 1).
weight(t63, s0, 1).
weight(t63, l58, 1).
weight(l52, t64, 1).
weight(s0, t64, 1).
weight(t64, s0, 1).
weight(t64, l59, 1).
weight(l53, t65, 1).
weight(s0, t65, 1).
weight(t65, s0, 1).
weight(t65, l56, 1).
weight(l53, t66, 1).
weight(s0, t66, 1).
weight(t66, s0, 1).
weight(t66, l57, 1).
weight(l53, t67, 1).
weight(s0, t67, 1).
weight(t67, s0, 1).
weight(t67, l58, 1).
weight(l53, t68, 1).
weight(s0, t68, 1).
weight(t68, s0, 1).
weight(t68, l59, 1).
weight(l54, t69, 1).
weight(s0, t69, 1).
weight(t69, s0, 1).
weight(t69, l56, 1).
weight(l54, t70, 1).
weight(s0, t70, 1).
weight(t70, s0, 1).
weight(t70, l57, 1).
weight(l54, t71, 1).
weight(s0, t71, 1).
weight(t71, s0, 1).
weight(t71, l58, 1).
weight(l54, t72, 1).
weight(s0, t72, 1).
weight(t72, s0, 1).
weight(t72, l59, 1).
weight(l55, t73, 1).
weight(s0, t73, 1).
weight(t73, s0, 1).
weight(t73, l56, 1).
weight(l55, t74, 1).
weight(s0, t74, 1).
weight(t74, s0, 1).
weight(t74, l57, 1).
weight(l55, t75, 1).
weight(s0, t75, 1).
weight(t75, s0, 1).
weight(t75, l58, 1).
weight(l55, t76, 1).
weight(s0, t76, 1).
weight(t76, s0, 1).
weight(t76, l59, 1).
weight(l56, t77, 1).
weight(s0, t77, 1).
weight(t77, s0, 1).
weight(t77, l60, 1).
weight(l57, t78, 1).
weight(s0, t78, 1).
weight(t78, s0, 1).
weight(t78, l61, 1).
weight(l58, t79, 1).
weight(s0, t79, 1).
weight(t79, s0, 1).
weight(t79, l62, 1).
weight(l59, t80, 1).
weight(s0, t80, 1).
weight(t80, s0, 1).
weight(t80, l63, 1).
weight(l60, t81, 1).
weight(s0, t81, 1).
weight(t81, s0, 1).
weight(t81, l64, 1).
weight(l60, t82, 1).
weight(s0, t82, 1).
weight(t82, s0, 1).
weight(t82, l65, 1).
weight(l60, t83, 1).
weight(s0, t83, 1).
weight(t83, s0, 1).
weight(t83, l66, 1).
weight(l60, t84, 1).
weight(s0, t84, 1).
weight(t84, s0, 1).
weight(t84, l67, 1).
weight(l61, t85, 1).
weight(s0, t85, 1).
weight(t85, s0, 1).
weight(t85, l64, 1).
weight(l61, t86, 1).
weight(s0, t86, 1).
weight(t86, s0, 1).
weight(t86, l65, 1).
weight(l61, t87, 1).
weight(s0, t87, 1).
weight(t87, s0, 1).
weight(t87, l66, 1).
weight(l61, t88, 1).
weight(s0, t88, 1).
weight(t88, s0, 1).
weight(t88, l67, 1).
weight(l62, t89, 1).
weight(s0, t89, 1).
weight(t89, s0, 1).
weight(t89, l64, 1).
weight(l62, t90, 1).
weight(s0, t90, 1).
weight(t90, s0, 1).
weight(t90, l65, 1).
weight(l62, t91, 1).
weight(s0, t91, 1).
weight(t91, s0, 1).
weight(t91, l66, 1).
weight(l62, t92, 1).
weight(s0, t92, 1).
weight(t92, s0, 1).
weight(t92, l67, 1).
weight(l63, t93, 1).
weight(s0, t93, 1).
weight(t93, s0, 1).
weight(t93, l64, 1).
weight(l63, t94, 1).
weight(s0, t94, 1).
weight(t94, s0, 1).
weight(t94, l65, 1).
weight(l63, t95, 1).
weight(s0, t95, 1).
weight(t95, s0, 1).
weight(t95, l66, 1).
weight(l63, t96, 1).
weight(s0, t96, 1).
weight(t96, s0, 1).
weight(t96, l67, 1).
weight(l64, t97, 1).
weight(s0, t97, 1).
weight(t97, s0, 1).
weight(t97, l68, 1).
weight(l65, t98, 1).
weight(s0, t98, 1).
weight(t98, s0, 1).
weight(t98, l57, 1).
weight(l66, t99, 1).
weight(s0, t99, 1).
weight(t99, s0, 1).
weight(t99, l58, 1).
weight(l67, t100, 1).
weight(s0, t100, 1).
weight(t100, s0, 1).
weight(t100, l59, 1).
weight(l68, t101, 1).
weight(s0, t101, 1).
weight(t101, s0, 1).
weight(t101, l72, 1).
weight(l68, t102, 1).
weight(s0, t102, 1).
weight(t102, s1, 1).
weight(t102, l72, 1).
weight(l69, t103, 1).
weight(s0, t103, 1).
weight(t103, s0, 1).
weight(t103, l73, 1).
weight(l69, t104, 1).
weight(s0, t104, 1).
weight(t104, s1, 1).
weight(t104, l73, 1).
weight(l70, t105, 1).
weight(s0, t105, 1).
weight(t105, s0, 1).
weight(t105, l74, 1).
weight(l70, t106, 1).
weight(s0, t106, 1).
weight(t106, s1, 1).
weight(t106, l74, 1).
weight(l71, t107, 1).
weight(s0, t107, 1).
weight(t107, s0, 1).
weight(t107, l75, 1).
weight(l71, t108, 1).
weight(s0, t108, 1).
weight(t108, s1, 1).
weight(t108, l75, 1).
weight(l72, t109, 1).
weight(s0, t109, 1).
weight(t109, s4, 1).
weight(t109, l76, 1).
weight(l73, t110, 1).
weight(s0, t110, 1).
weight(t110, s4, 1).
weight(t110, l77, 1).
weight(l74, t111, 1).
weight(s0, t111, 1).
weight(t111, s4, 1).
weight(t111, l78, 1).
weight(l75, t112, 1).
weight(s0, t112, 1).
weight(t112, s4, 1).
weight(t112, l79, 1).
weight(l88, t113, 1).
weight(s0, t113, 1).
weight(t113, s0, 1).
weight(t113, l20, 1).
weight(l89, t114, 1).
weight(s0, t114, 1).
weight(t114, s0, 1).
weight(t114, l21, 1).
weight(l90, t115, 1).
weight(s0, t115, 1).
weight(t115, s0, 1).
weight(t115, l22, 1).
weight(l91, t116, 1).
weight(s0, t116, 1).
weight(t116, s0, 1).
weight(t116, l23, 1).
weight(l92, t117, 1).
weight(s0, t117, 1).
weight(t117, s0, 1).
weight(t117, l96, 1).
weight(l93, t118, 1).
weight(s0, t118, 1).
weight(t118, s0, 1).
weight(t118, l97, 1).
weight(l94, t119, 1).
weight(s0, t119, 1).
weight(t119, s0, 1).
weight(t119, l98, 1).
weight(l95, t120, 1).
weight(s0, t120, 1).
weight(t120, s0, 1).
weight(t120, l99, 1).
weight(l0, t121, 1).
weight(s1, t121, 1).
weight(t121, s0, 1).
weight(t121, l4, 1).
weight(l0, t122, 1).
weight(s1, t122, 1).
weight(t122, s1, 1).
weight(t122, l4, 1).
weight(l1, t123, 1).
weight(s1, t123, 1).
weight(t123, s0, 1).
weight(t123, l5, 1).
weight(l1, t124, 1).
weight(s1, t124, 1).
weight(t124, s1, 1).
weight(t124, l5, 1).
weight(l2, t125, 1).
weight(s1, t125, 1).
weight(t125, s0, 1).
weight(t125, l6, 1).
weight(l2, t126, 1).
weight(s1, t126, 1).
weight(t126, s1, 1).
weight(t126, l6, 1).
weight(l3, t127, 1).
weight(s1, t127, 1).
weight(t127, s0, 1).
weight(t127, l7, 1).
weight(l3, t128, 1).
weight(s1, t128, 1).
weight(t128, s1, 1).
weight(t128, l7, 1).
weight(l4, t129, 1).
weight(s1, t129, 1).
weight(t129, s1, 1).
weight(t129, l8, 1).
weight(l4, t130, 1).
weight(s1, t130, 1).
weight(t130, s1, 1).
weight(t130, l10, 1).
weight(l5, t131, 1).
weight(s1, t131, 1).
weight(t131, s1, 1).
weight(t131, l9, 1).
weight(l5, t132, 1).
weight(s1, t132, 1).
weight(t132, s1, 1).
weight(t132, l11, 1).
weight(l6, t133, 1).
weight(s1, t133, 1).
weight(t133, s1, 1).
weight(t133, l8, 1).
weight(l6, t134, 1).
weight(s1, t134, 1).
weight(t134, s1, 1).
weight(t134, l10, 1).
weight(l7, t135, 1).
weight(s1, t135, 1).
weight(t135, s1, 1).
weight(t135, l9, 1).
weight(l7, t136, 1).
weight(s1, t136, 1).
weight(t136, s1, 1).
weight(t136, l11, 1).
weight(l8, t137, 1).
weight(s1, t137, 1).
weight(t137, s1, 1).
weight(t137, l12, 1).
weight(l8, t138, 1).
weight(s1, t138, 1).
weight(t138, s1, 1).
weight(t138, l13, 1).
weight(l9, t139, 1).
weight(s1, t139, 1).
weight(t139, s1, 1).
weight(t139, l12, 1).
weight(l9, t140, 1).
weight(s1, t140, 1).
weight(t140, s1, 1).
weight(t140, l13, 1).
weight(l10, t141, 1).
weight(s1, t141, 1).
weight(t141, s1, 1).
weight(t141, l14, 1).
weight(l10, t142, 1).
weight(s1, t142, 1).
weight(t142, s1, 1).
weight(t142, l15, 1).
weight(l11, t143, 1).
weight(s1, t143, 1).
weight(t143, s1, 1).
weight(t143, l14, 1).
weight(l11, t144, 1).
weight(s1, t144, 1).
weight(t144, s1, 1).
weight(t144, l15, 1).
weight(l12, t145, 1).
weight(s1, t145, 1).
weight(t145, s1, 1).
weight(t145, l16, 1).
weight(l13, t146, 1).
weight(s1, t146, 1).
weight(t146, s1, 1).
weight(t146, l17, 1).
weight(l14, t147, 1).
weight(s1, t147, 1).
weight(t147, s1, 1).
weight(t147, l18, 1).
weight(l15, t148, 1).
weight(s1, t148, 1).
weight(t148, s1, 1).
weight(t148, l19, 1).
weight(l16, t149, 1).
weight(s1, t149, 1).
weight(t149, s0, 1).
weight(t149, l20, 1).
weight(l17, t150, 1).
weight(s1, t150, 1).
weight(t150, s0, 1).
weight(t150, l21, 1).
weight(l18, t151, 1).
weight(s1, t151, 1).
weight(t151, s0, 1).
weight(t151, l22, 1).
weight(l19, t152, 1).
weight(s1, t152, 1).
weight(t152, s0, 1).
weight(t152, l23, 1).
weight(l20, t153, 1).
weight(s1, t153, 1).
weight(t153, s1, 1).
weight(t153, l24, 1).
weight(l21, t154, 1).
weight(s1, t154, 1).
weight(t154, s1, 1).
weight(t154, l25, 1).
weight(l22, t155, 1).
weight(s1, t155, 1).
weight(t155, s1, 1).
weight(t155, l26, 1).
weight(l23, t156, 1).
weight(s1, t156, 1).
weight(t156, s1, 1).
weight(t156, l27, 1).
weight(l28, t157, 1).
weight(s1, t157, 1).
weight(t157, s8, 1).
weight(t157, l100, 1).
weight(l29, t158, 1).
weight(s1, t158, 1).
weight(t158, s8, 1).
weight(t158, l100, 1).
weight(l30, t159, 1).
weight(s1, t159, 1).
weight(t159, s8, 1).
weight(t159, l100, 1).
weight(l31, t160, 1).
weight(s1, t160, 1).
weight(t160, s8, 1).
weight(t160, l100, 1).
weight(l32, t161, 1).
weight(s1, t161, 1).
weight(t161, s5, 1).
weight(t161, l36, 1).
weight(l33, t162, 1).
weight(s1, t162, 1).
weight(t162, s5, 1).
weight(t162, l37, 1).
weight(l34, t163, 1).
weight(s1, t163, 1).
weight(t163, s5, 1).
weight(t163, l38, 1).
weight(l35, t164, 1).
weight(s1, t164, 1).
weight(t164, s5, 1).
weight(t164, l39, 1).
weight(l44, t165, 1).
weight(s1, t165, 1).
weight(t165, s1, 1).
weight(t165, l48, 1).
weight(l44, t166, 1).
weight(s1, t166, 1).
weight(t166, s1, 1).
weight(t166, l49, 1).
weight(l45, t167, 1).
weight(s1, t167, 1).
weight(t167, s1, 1).
weight(t167, l48, 1).
weight(l45, t168, 1).
weight(s1, t168, 1).
weight(t168, s1, 1).
weight(t168, l49, 1).
weight(l46, t169, 1).
weight(s1, t169, 1).
weight(t169, s1, 1).
weight(t169, l50, 1).
weight(l46, t170, 1).
weight(s1, t170, 1).
weight(t170, s1, 1).
weight(t170, l51, 1).
weight(l47, t171, 1).
weight(s1, t171, 1).
weight(t171, s1, 1).
weight(t171, l50, 1).
weight(l47, t172, 1).
weight(s1, t172, 1).
weight(t172, s1, 1).
weight(t172, l51, 1).
weight(l48, t173, 1).
weight(s1, t173, 1).
weight(t173, s1, 1).
weight(t173, l52, 1).
weight(l48, t174, 1).
weight(s1, t174, 1).
weight(t174, s1, 1).
weight(t174, l53, 1).
weight(l49, t175, 1).
weight(s1, t175, 1).
weight(t175, s1, 1).
weight(t175, l52, 1).
weight(l49, t176, 1).
weight(s1, t176, 1).
weight(t176, s1, 1).
weight(t176, l53, 1).
weight(l50, t177, 1).
weight(s1, t177, 1).
weight(t177, s1, 1).
weight(t177, l54, 1).
weight(l50, t178, 1).
weight(s1, t178, 1).
weight(t178, s1, 1).
weight(t178, l55, 1).
weight(l51, t179, 1).
weight(s1, t179, 1).
weight(t179, s1, 1).
weight(t179, l54, 1).
weight(l51, t180, 1).
weight(s1, t180, 1).
weight(t180, s1, 1).
weight(t180, l55, 1).
weight(l52, t181, 1).
weight(s1, t181, 1).
weight(t181, s1, 1).
weight(t181, l56, 1).
weight(l52, t182, 1).
weight(s1, t182, 1).
weight(t182, s1, 1).
weight(t182, l57, 1).
weight(l52, t183, 1).
weight(s1, t183, 1).
weight(t183, s1, 1).
weight(t183, l58, 1).
weight(l52, t184, 1).
weight(s1, t184, 1).
weight(t184, s1, 1).
weight(t184, l59, 1).
weight(l53, t185, 1).
weight(s1, t185, 1).
weight(t185, s1, 1).
weight(t185, l56, 1).
weight(l53, t186, 1).
weight(s1, t186, 1).
weight(t186, s1, 1).
weight(t186, l57, 1).
weight(l53, t187, 1).
weight(s1, t187, 1).
weight(t187, s1, 1).
weight(t187, l58, 1).
weight(l53, t188, 1).
weight(s1, t188, 1).
weight(t188, s1, 1).
weight(t188, l59, 1).
weight(l54, t189, 1).
weight(s1, t189, 1).
weight(t189, s1, 1).
weight(t189, l56, 1).
weight(l54, t190, 1).
weight(s1, t190, 1).
weight(t190, s1, 1).
weight(t190, l57, 1).
weight(l54, t191, 1).
weight(s1, t191, 1).
weight(t191, s1, 1).
weight(t191, l58, 1).
weight(l54, t192, 1).
weight(s1, t192, 1).
weight(t192, s1, 1).
weight(t192, l59, 1).
weight(l55, t193, 1).
weight(s1, t193, 1).
weight(t193, s1, 1).
weight(t193, l56, 1).
weight(l55, t194, 1).
weight(s1, t194, 1).
weight(t194, s1, 1).
weight(t194, l57, 1).
weight(l55, t195, 1).
weight(s1, t195, 1).
weight(t195, s1, 1).
weight(t195, l58, 1).
weight(l55, t196, 1).
weight(s1, t196, 1).
weight(t196, s1, 1).
weight(t196, l59, 1).
weight(l56, t197, 1).
weight(s1, t197, 1).
weight(t197, s1, 1).
weight(t197, l60, 1).
weight(l57, t198, 1).
weight(s1, t198, 1).
weight(t198, s1, 1).
weight(t198, l61, 1).
weight(l58, t199, 1).
weight(s1, t199, 1).
weight(t199, s1, 1).
weight(t199, l62, 1).
weight(l59, t200, 1).
weight(s1, t200, 1).
weight(t200, s1, 1).
weight(t200, l63, 1).
weight(l60, t201, 1).
weight(s1, t201, 1).
weight(t201, s1, 1).
weight(t201, l64, 1).
weight(l60, t202, 1).
weight(s1, t202, 1).
weight(t202, s1, 1).
weight(t202, l65, 1).
weight(l60, t203, 1).
weight(s1, t203, 1).
weight(t203, s1, 1).
weight(t203, l66, 1).
weight(l60, t204, 1).
weight(s1, t204, 1).
weight(t204, s1, 1).
weight(t204, l67, 1).
weight(l61, t205, 1).
weight(s1, t205, 1).
weight(t205, s1, 1).
weight(t205, l64, 1).
weight(l61, t206, 1).
weight(s1, t206, 1).
weight(t206, s1, 1).
weight(t206, l65, 1).
weight(l61, t207, 1).
weight(s1, t207, 1).
weight(t207, s1, 1).
weight(t207, l66, 1).
weight(l61, t208, 1).
weight(s1, t208, 1).
weight(t208, s1, 1).
weight(t208, l67, 1).
weight(l62, t209, 1).
weight(s1, t209, 1).
weight(t209, s1, 1).
weight(t209, l64, 1).
weight(l62, t210, 1).
weight(s1, t210, 1).
weight(t210, s1, 1).
weight(t210, l65, 1).
weight(l62, t211, 1).
weight(s1, t211, 1).
weight(t211, s1, 1).
weight(t211, l66, 1).
weight(l62, t212, 1).
weight(s1, t212, 1).
weight(t212, s1, 1).
weight(t212, l67, 1).
weight(l63, t213, 1).
weight(s1, t213, 1).
weight(t213, s1, 1).
weight(t213, l64, 1).
weight(l63, t214, 1).
weight(s1, t214, 1).
weight(t214, s1, 1).
weight(t214, l65, 1).
weight(l63, t215, 1).
weight(s1, t215, 1).
weight(t215, s1, 1).
weight(t215, l66, 1).
weight(l63, t216, 1).
weight(s1, t216, 1).
weight(t216, s1, 1).
weight(t216, l67, 1).
weight(l64, t217, 1).
weight(s1, t217, 1).
weight(t217, s1, 1).
weight(t217, l68, 1).
weight(l65, t218, 1).
weight(s1, t218, 1).
weight(t218, s1, 1).
weight(t218, l57, 1).
weight(l66, t219, 1).
weight(s1, t219, 1).
weight(t219, s1, 1).
weight(t219, l58, 1).
weight(l67, t220, 1).
weight(s1, t220, 1).
weight(t220, s1, 1).
weight(t220, l59, 1).
weight(l68, t221, 1).
weight(s1, t221, 1).
weight(t221, s0, 1).
weight(t221, l72, 1).
weight(l68, t222, 1).
weight(s1, t222, 1).
weight(t222, s1, 1).
weight(t222, l72, 1).
weight(l69, t223, 1).
weight(s1, t223, 1).
weight(t223, s0, 1).
weight(t223, l73, 1).
weight(l69, t224, 1).
weight(s1, t224, 1).
weight(t224, s1, 1).
weight(t224, l73, 1).
weight(l70, t225, 1).
weight(s1, t225, 1).
weight(t225, s0, 1).
weight(t225, l74, 1).
weight(l70, t226, 1).
weight(s1, t226, 1).
weight(t226, s1, 1).
weight(t226, l74, 1).
weight(l71, t227, 1).
weight(s1, t227, 1).
weight(t227, s0, 1).
weight(t227, l75, 1).
weight(l71, t228, 1).
weight(s1, t228, 1).
weight(t228, s1, 1).
weight(t228, l75, 1).
weight(l72, t229, 1).
weight(s1, t229, 1).
weight(t229, s5, 1).
weight(t229, l76, 1).
weight(l73, t230, 1).
weight(s1, t230, 1).
weight(t230, s5, 1).
weight(t230, l77, 1).
weight(l74, t231, 1).
weight(s1, t231, 1).
weight(t231, s5, 1).
weight(t231, l78, 1).
weight(l75, t232, 1).
weight(s1, t232, 1).
weight(t232, s5, 1).
weight(t232, l79, 1).
weight(l88, t233, 1).
weight(s1, t233, 1).
weight(t233, s1, 1).
weight(t233, l20, 1).
weight(l89, t234, 1).
weight(s1, t234, 1).
weight(t234, s1, 1).
weight(t234, l21, 1).
weight(l90, t235, 1).
weight(s1, t235, 1).
weight(t235, s1, 1).
weight(t235, l22, 1).
weight(l91, t236, 1).
weight(s1, t236, 1).
weight(t236, s1, 1).
weight(t236, l23, 1).
weight(l92, t237, 1).
weight(s1, t237, 1).
weight(t237, s1, 1).
weight(t237, l96, 1).
weight(l93, t238, 1).
weight(s1, t238, 1).
weight(t238, s1, 1).
weight(t238, l97, 1).
weight(l94, t239, 1).
weight(s1, t239, 1).
weight(t239, s1, 1).
weight(t239, l98, 1).
weight(l95, t240, 1).
weight(s1, t240, 1).
weight(t240, s1, 1).
weight(t240, l99, 1).
weight(l24, t241, 1).
weight(s2, t241, 1).
weight(t241, s0, 1).
weight(t241, l88, 1).
weight(l25, t242, 1).
weight(s2, t242, 1).
weight(t242, s0, 1).
weight(t242, l89, 1).
weight(l26, t243, 1).
weight(s2, t243, 1).
weight(t243, s0, 1).
weight(t243, l90, 1).
weight(l27, t244, 1).
weight(s2, t244, 1).
weight(t244, s0, 1).
weight(t244, l91, 1).
weight(l24, t245, 1).
weight(s3, t245, 1).
weight(t245, s1, 1).
weight(t245, l88, 1).
weight(l25, t246, 1).
weight(s3, t246, 1).
weight(t246, s1, 1).
weight(t246, l89, 1).
weight(l26, t247, 1).
weight(s3, t247, 1).
weight(t247, s1, 1).
weight(t247, l90, 1).
weight(l27, t248, 1).
weight(s3, t248, 1).
weight(t248, s1, 1).
weight(t248, l91, 1).
weight(l36, t249, 1).
weight(s4, t249, 1).
weight(t249, s4, 1).
weight(t249, l40, 1).
weight(l37, t250, 1).
weight(s4, t250, 1).
weight(t250, s4, 1).
weight(t250, l41, 1).
weight(l38, t251, 1).
weight(s4, t251, 1).
weight(t251, s4, 1).
weight(t251, l42, 1).
weight(l39, t252, 1).
weight(s4, t252, 1).
weight(t252, s4, 1).
weight(t252, l43, 1).
weight(l40, t253, 1).
weight(s4, t253, 1).
weight(t253, s0, 1).
weight(t253, l44, 1).
weight(l41, t254, 1).
weight(s4, t254, 1).
weight(t254, s0, 1).
weight(t254, l45, 1).
weight(l42, t255, 1).
weight(s4, t255, 1).
weight(t255, s0, 1).
weight(t255, l46, 1).
weight(l43, t256, 1).
weight(s4, t256, 1).
weight(t256, s0, 1).
weight(t256, l47, 1).
weight(l76, t257, 1).
weight(s4, t257, 1).
weight(t257, s4, 1).
weight(t257, l80, 1).
weight(l77, t258, 1).
weight(s4, t258, 1).
weight(t258, s4, 1).
weight(t258, l81, 1).
weight(l78, t259, 1).
weight(s4, t259, 1).
weight(t259, s4, 1).
weight(t259, l82, 1).
weight(l79, t260, 1).
weight(s4, t260, 1).
weight(t260, s4, 1).
weight(t260, l83, 1).
weight(l80, t261, 1).
weight(s4, t261, 1).
weight(t261, s0, 1).
weight(t261, l84, 1).
weight(l81, t262, 1).
weight(s4, t262, 1).
weight(t262, s0, 1).
weight(t262, l85, 1).
weight(l82, t263, 1).
weight(s4, t263, 1).
weight(t263, s0, 1).
weight(t263, l86, 1).
weight(l83, t264, 1).
weight(s4, t264, 1).
weight(t264, s0, 1).
weight(t264, l87, 1).
weight(l36, t265, 1).
weight(s5, t265, 1).
weight(t265, s5, 1).
weight(t265, l40, 1).
weight(l37, t266, 1).
weight(s5, t266, 1).
weight(t266, s5, 1).
weight(t266, l41, 1).
weight(l38, t267, 1).
weight(s5, t267, 1).
weight(t267, s5, 1).
weight(t267, l42, 1).
weight(l39, t268, 1).
weight(s5, t268, 1).
weight(t268, s5, 1).
weight(t268, l43, 1).
weight(l40, t269, 1).
weight(s5, t269, 1).
weight(t269, s1, 1).
weight(t269, l44, 1).
weight(l41, t270, 1).
weight(s5, t270, 1).
weight(t270, s1, 1).
weight(t270, l45, 1).
weight(l42, t271, 1).
weight(s5, t271, 1).
weight(t271, s1, 1).
weight(t271, l46, 1).
weight(l43, t272, 1).
weight(s5, t272, 1).
weight(t272, s1, 1).
weight(t272, l47, 1).
weight(l76, t273, 1).
weight(s5, t273, 1).
weight(t273, s5, 1).
weight(t273, l80, 1).
weight(l77, t274, 1).
weight(s5, t274, 1).
weight(t274, s5, 1).
weight(t274, l81, 1).
weight(l78, t275, 1).
weight(s5, t275, 1).
weight(t275, s5, 1).
weight(t275, l82, 1).
weight(l79, t276, 1).
weight(s5, t276, 1).
weight(t276, s5, 1).
weight(t276, l83, 1).
weight(l80, t277, 1).
weight(s5, t277, 1).
weight(t277, s1, 1).
weight(t277, l84, 1).
weight(l81, t278, 1).
weight(s5, t278, 1).
weight(t278, s1, 1).
weight(t278, l85, 1).
weight(l82, t279, 1).
weight(s5, t279, 1).
weight(t279, s1, 1).
weight(t279, l86, 1).
weight(l83, t280, 1).
weight(s5, t280, 1).
weight(t280, s1, 1).
weight(t280, l87, 1).
weight(l24, t281, 1).
weight(s0, t281, 1).
weight(t281, l24, 1).
weight(t281, s2, 1).
weight(t281, l28, 1).
weight(l25, t282, 1).
weight(s0, t282, 1).
weight(t282, l25, 1).
weight(t282, s2, 1).
weight(t282, l29, 1).
weight(l26, t283, 1).
weight(s0, t283, 1).
weight(t283, l26, 1).
weight(t283, s2, 1).
weight(t283, l30, 1).
weight(l27, t284, 1).
weight(s0, t284, 1).
weight(t284, l27, 1).
weight(t284, s2, 1).
weight(t284, l31, 1).
weight(l24, t285, 1).
weight(s1, t285, 1).
weight(t285, l24, 1).
weight(t285, s3, 1).
weight(t285, l28, 1).
weight(l25, t286, 1).
weight(s1, t286, 1).
weight(t286, l25, 1).
weight(t286, s3, 1).
weight(t286, l29, 1).
weight(l26, t287, 1).
weight(s1, t287, 1).
weight(t287, l26, 1).
weight(t287, s3, 1).
weight(t287, l30, 1).
weight(l27, t288, 1).
weight(s1, t288, 1).
weight(t288, l27, 1).
weight(t288, s3, 1).
weight(t288, l31, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s8 1)').
cond('(>= l100 1)').

target(s8, 1).
target(l100, 1).


* Constructing constraints C' for petri net N
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun s8 () Real)
(declare-fun l100 () Real)
(declare-fun l32 () Real)
(declare-fun l33 () Real)
(declare-fun l34 () Real)
(declare-fun l35 () Real)
(declare-fun l48 () Real)
(declare-fun l49 () Real)
(declare-fun l50 () Real)
(declare-fun l51 () Real)
(declare-fun l52 () Real)
(declare-fun l53 () Real)
(declare-fun l54 () Real)
(declare-fun l55 () Real)
(declare-fun l56 () Real)
(declare-fun l60 () Real)
(declare-fun l61 () Real)
(declare-fun l62 () Real)
(declare-fun l63 () Real)
(declare-fun l64 () Real)
(declare-fun l65 () Real)
(declare-fun l57 () Real)
(declare-fun l66 () Real)
(declare-fun l58 () Real)
(declare-fun l67 () Real)
(declare-fun l59 () Real)
(declare-fun l68 () Real)
(declare-fun l69 () Real)
(declare-fun l70 () Real)
(declare-fun l71 () Real)
(declare-fun l72 () Real)
(declare-fun l73 () Real)
(declare-fun l74 () Real)
(declare-fun l75 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l92 () Real)
(declare-fun l96 () Real)
(declare-fun l93 () Real)
(declare-fun l97 () Real)
(declare-fun l94 () Real)
(declare-fun l98 () Real)
(declare-fun l95 () Real)
(declare-fun l99 () Real)
(declare-fun l88 () Real)
(declare-fun l89 () Real)
(declare-fun l90 () Real)
(declare-fun l91 () Real)
(declare-fun s4 () Real)
(declare-fun l36 () Real)
(declare-fun l37 () Real)
(declare-fun l38 () Real)
(declare-fun l39 () Real)
(declare-fun l40 () Real)
(declare-fun l44 () Real)
(declare-fun l41 () Real)
(declare-fun l45 () Real)
(declare-fun l42 () Real)
(declare-fun l46 () Real)
(declare-fun l43 () Real)
(declare-fun l47 () Real)
(declare-fun l76 () Real)
(declare-fun l77 () Real)
(declare-fun l78 () Real)
(declare-fun l79 () Real)
(declare-fun l80 () Real)
(declare-fun l84 () Real)
(declare-fun l81 () Real)
(declare-fun l85 () Real)
(declare-fun l82 () Real)
(declare-fun l86 () Real)
(declare-fun l83 () Real)
(declare-fun s5 () Real)
(declare-fun l87 () Real)
(declare-fun s0 () Real)
(declare-fun s2 () Real)
(declare-fun l24 () Real)
(declare-fun l28 () Real)
(declare-fun l25 () Real)
(declare-fun l29 () Real)
(declare-fun l26 () Real)
(declare-fun l30 () Real)
(declare-fun s1 () Real)
(declare-fun l27 () Real)
(declare-fun s3 () Real)
(declare-fun l31 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l4)))
(assert (>= 0 (+ (- l0) l4 (- s0) s1)))
(assert (>= 0 (+ (- l1) l5)))
(assert (>= 0 (+ (- l1) l5 (- s0) s1)))
(assert (>= 0 (+ (- l2) l6)))
(assert (>= 0 (+ (- l2) l6 (- s0) s1)))
(assert (>= 0 (+ (- l3) l7)))
(assert (>= 0 (+ (- l3) l7 (- s0) s1)))
(assert (>= 0 (+ (- l4) l8)))
(assert (>= 0 (+ l10 (- l4))))
(assert (>= 0 (+ (- l5) l9)))
(assert (>= 0 (+ l11 (- l5))))
(assert (>= 0 (+ (- l6) l8)))
(assert (>= 0 (+ l10 (- l6))))
(assert (>= 0 (+ (- l7) l9)))
(assert (>= 0 (+ l11 (- l7))))
(assert (>= 0 (+ l12 (- l8))))
(assert (>= 0 (+ l13 (- l8))))
(assert (>= 0 (+ l12 (- l9))))
(assert (>= 0 (+ l13 (- l9))))
(assert (>= 0 (+ (- l10) l14)))
(assert (>= 0 (+ (- l10) l15)))
(assert (>= 0 (+ (- l11) l14)))
(assert (>= 0 (+ (- l11) l15)))
(assert (>= 0 (+ (- l12) l16 (- s0) s1)))
(assert (>= 0 (+ (- l13) l17 (- s0) s1)))
(assert (>= 0 (+ (- l14) l18 (- s0) s1)))
(assert (>= 0 (+ (- l15) l19 (- s0) s1)))
(assert (>= 0 (+ (- l16) l20)))
(assert (>= 0 (+ (- l17) l21)))
(assert (>= 0 (+ (- l18) l22)))
(assert (>= 0 (+ (- l19) l23)))
(assert (>= 0 (+ (- l20) l24)))
(assert (>= 0 (+ (- l21) l25)))
(assert (>= 0 (+ (- l22) l26)))
(assert (>= 0 (+ (- l23) l27)))
(assert (>= 0 (+ (- l28) l32)))
(assert (>= 0 (+ (- l29) l33)))
(assert (>= 0 (+ (- l30) l34)))
(assert (>= 0 (+ (- l31) l35)))
(assert (>= 0 (+ (- l32) l36 (- s0) s4)))
(assert (>= 0 (+ (- l33) l37 (- s0) s4)))
(assert (>= 0 (+ (- l34) l38 (- s0) s4)))
(assert (>= 0 (+ (- l35) l39 (- s0) s4)))
(assert (>= 0 (+ (- l44) l48)))
(assert (>= 0 (+ (- l44) l49)))
(assert (>= 0 (+ (- l45) l48)))
(assert (>= 0 (+ (- l45) l49)))
(assert (>= 0 (+ (- l46) l50)))
(assert (>= 0 (+ (- l46) l51)))
(assert (>= 0 (+ (- l47) l50)))
(assert (>= 0 (+ (- l47) l51)))
(assert (>= 0 (+ (- l48) l52)))
(assert (>= 0 (+ (- l48) l53)))
(assert (>= 0 (+ (- l49) l52)))
(assert (>= 0 (+ (- l49) l53)))
(assert (>= 0 (+ (- l50) l54)))
(assert (>= 0 (+ (- l50) l55)))
(assert (>= 0 (+ (- l51) l54)))
(assert (>= 0 (+ (- l51) l55)))
(assert (>= 0 (+ (- l52) l56)))
(assert (>= 0 (+ (- l52) l57)))
(assert (>= 0 (+ (- l52) l58)))
(assert (>= 0 (+ (- l52) l59)))
(assert (>= 0 (+ (- l53) l56)))
(assert (>= 0 (+ (- l53) l57)))
(assert (>= 0 (+ (- l53) l58)))
(assert (>= 0 (+ (- l53) l59)))
(assert (>= 0 (+ (- l54) l56)))
(assert (>= 0 (+ (- l54) l57)))
(assert (>= 0 (+ (- l54) l58)))
(assert (>= 0 (+ (- l54) l59)))
(assert (>= 0 (+ (- l55) l56)))
(assert (>= 0 (+ (- l55) l57)))
(assert (>= 0 (+ (- l55) l58)))
(assert (>= 0 (+ (- l55) l59)))
(assert (>= 0 (+ (- l56) l60)))
(assert (>= 0 (+ (- l57) l61)))
(assert (>= 0 (+ (- l58) l62)))
(assert (>= 0 (+ (- l59) l63)))
(assert (>= 0 (+ (- l60) l64)))
(assert (>= 0 (+ (- l60) l65)))
(assert (>= 0 (+ (- l60) l66)))
(assert (>= 0 (+ (- l60) l67)))
(assert (>= 0 (+ (- l61) l64)))
(assert (>= 0 (+ (- l61) l65)))
(assert (>= 0 (+ (- l61) l66)))
(assert (>= 0 (+ (- l61) l67)))
(assert (>= 0 (+ (- l62) l64)))
(assert (>= 0 (+ (- l62) l65)))
(assert (>= 0 (+ (- l62) l66)))
(assert (>= 0 (+ (- l62) l67)))
(assert (>= 0 (+ (- l63) l64)))
(assert (>= 0 (+ (- l63) l65)))
(assert (>= 0 (+ (- l63) l66)))
(assert (>= 0 (+ (- l63) l67)))
(assert (>= 0 (+ (- l64) l68)))
(assert (>= 0 (+ l57 (- l65))))
(assert (>= 0 (+ l58 (- l66))))
(assert (>= 0 (+ l59 (- l67))))
(assert (>= 0 (+ (- l68) l72)))
(assert (>= 0 (+ (- l68) l72 (- s0) s1)))
(assert (>= 0 (+ (- l69) l73)))
(assert (>= 0 (+ (- l69) l73 (- s0) s1)))
(assert (>= 0 (+ (- l70) l74)))
(assert (>= 0 (+ (- l70) l74 (- s0) s1)))
(assert (>= 0 (+ (- l71) l75)))
(assert (>= 0 (+ (- l71) l75 (- s0) s1)))
(assert (>= 0 (+ (- l72) l76 (- s0) s4)))
(assert (>= 0 (+ (- l73) l77 (- s0) s4)))
(assert (>= 0 (+ (- l74) l78 (- s0) s4)))
(assert (>= 0 (+ (- l75) l79 (- s0) s4)))
(assert (>= 0 (+ l20 (- l88))))
(assert (>= 0 (+ l21 (- l89))))
(assert (>= 0 (+ l22 (- l90))))
(assert (>= 0 (+ l23 (- l91))))
(assert (>= 0 (+ (- l92) l96)))
(assert (>= 0 (+ (- l93) l97)))
(assert (>= 0 (+ (- l94) l98)))
(assert (>= 0 (+ (- l95) l99)))
(assert (>= 0 (+ (- l0) l4 s0 (- s1))))
(assert (>= 0 (+ (- l0) l4)))
(assert (>= 0 (+ (- l1) l5 s0 (- s1))))
(assert (>= 0 (+ (- l1) l5)))
(assert (>= 0 (+ (- l2) l6 s0 (- s1))))
(assert (>= 0 (+ (- l2) l6)))
(assert (>= 0 (+ (- l3) l7 s0 (- s1))))
(assert (>= 0 (+ (- l3) l7)))
(assert (>= 0 (+ (- l4) l8)))
(assert (>= 0 (+ l10 (- l4))))
(assert (>= 0 (+ (- l5) l9)))
(assert (>= 0 (+ l11 (- l5))))
(assert (>= 0 (+ (- l6) l8)))
(assert (>= 0 (+ l10 (- l6))))
(assert (>= 0 (+ (- l7) l9)))
(assert (>= 0 (+ l11 (- l7))))
(assert (>= 0 (+ l12 (- l8))))
(assert (>= 0 (+ l13 (- l8))))
(assert (>= 0 (+ l12 (- l9))))
(assert (>= 0 (+ l13 (- l9))))
(assert (>= 0 (+ (- l10) l14)))
(assert (>= 0 (+ (- l10) l15)))
(assert (>= 0 (+ (- l11) l14)))
(assert (>= 0 (+ (- l11) l15)))
(assert (>= 0 (+ (- l12) l16)))
(assert (>= 0 (+ (- l13) l17)))
(assert (>= 0 (+ (- l14) l18)))
(assert (>= 0 (+ (- l15) l19)))
(assert (>= 0 (+ (- l16) l20 s0 (- s1))))
(assert (>= 0 (+ (- l17) l21 s0 (- s1))))
(assert (>= 0 (+ (- l18) l22 s0 (- s1))))
(assert (>= 0 (+ (- l19) l23 s0 (- s1))))
(assert (>= 0 (+ (- l20) l24)))
(assert (>= 0 (+ (- l21) l25)))
(assert (>= 0 (+ (- l22) l26)))
(assert (>= 0 (+ (- l23) l27)))
(assert (>= 0 (+ l100 (- l28) (- s1) s8)))
(assert (>= 0 (+ l100 (- l29) (- s1) s8)))
(assert (>= 0 (+ l100 (- l30) (- s1) s8)))
(assert (>= 0 (+ l100 (- l31) (- s1) s8)))
(assert (>= 0 (+ (- l32) l36 (- s1) s5)))
(assert (>= 0 (+ (- l33) l37 (- s1) s5)))
(assert (>= 0 (+ (- l34) l38 (- s1) s5)))
(assert (>= 0 (+ (- l35) l39 (- s1) s5)))
(assert (>= 0 (+ (- l44) l48)))
(assert (>= 0 (+ (- l44) l49)))
(assert (>= 0 (+ (- l45) l48)))
(assert (>= 0 (+ (- l45) l49)))
(assert (>= 0 (+ (- l46) l50)))
(assert (>= 0 (+ (- l46) l51)))
(assert (>= 0 (+ (- l47) l50)))
(assert (>= 0 (+ (- l47) l51)))
(assert (>= 0 (+ (- l48) l52)))
(assert (>= 0 (+ (- l48) l53)))
(assert (>= 0 (+ (- l49) l52)))
(assert (>= 0 (+ (- l49) l53)))
(assert (>= 0 (+ (- l50) l54)))
(assert (>= 0 (+ (- l50) l55)))
(assert (>= 0 (+ (- l51) l54)))
(assert (>= 0 (+ (- l51) l55)))
(assert (>= 0 (+ (- l52) l56)))
(assert (>= 0 (+ (- l52) l57)))
(assert (>= 0 (+ (- l52) l58)))
(assert (>= 0 (+ (- l52) l59)))
(assert (>= 0 (+ (- l53) l56)))
(assert (>= 0 (+ (- l53) l57)))
(assert (>= 0 (+ (- l53) l58)))
(assert (>= 0 (+ (- l53) l59)))
(assert (>= 0 (+ (- l54) l56)))
(assert (>= 0 (+ (- l54) l57)))
(assert (>= 0 (+ (- l54) l58)))
(assert (>= 0 (+ (- l54) l59)))
(assert (>= 0 (+ (- l55) l56)))
(assert (>= 0 (+ (- l55) l57)))
(assert (>= 0 (+ (- l55) l58)))
(assert (>= 0 (+ (- l55) l59)))
(assert (>= 0 (+ (- l56) l60)))
(assert (>= 0 (+ (- l57) l61)))
(assert (>= 0 (+ (- l58) l62)))
(assert (>= 0 (+ (- l59) l63)))
(assert (>= 0 (+ (- l60) l64)))
(assert (>= 0 (+ (- l60) l65)))
(assert (>= 0 (+ (- l60) l66)))
(assert (>= 0 (+ (- l60) l67)))
(assert (>= 0 (+ (- l61) l64)))
(assert (>= 0 (+ (- l61) l65)))
(assert (>= 0 (+ (- l61) l66)))
(assert (>= 0 (+ (- l61) l67)))
(assert (>= 0 (+ (- l62) l64)))
(assert (>= 0 (+ (- l62) l65)))
(assert (>= 0 (+ (- l62) l66)))
(assert (>= 0 (+ (- l62) l67)))
(assert (>= 0 (+ (- l63) l64)))
(assert (>= 0 (+ (- l63) l65)))
(assert (>= 0 (+ (- l63) l66)))
(assert (>= 0 (+ (- l63) l67)))
(assert (>= 0 (+ (- l64) l68)))
(assert (>= 0 (+ l57 (- l65))))
(assert (>= 0 (+ l58 (- l66))))
(assert (>= 0 (+ l59 (- l67))))
(assert (>= 0 (+ (- l68) l72 s0 (- s1))))
(assert (>= 0 (+ (- l68) l72)))
(assert (>= 0 (+ (- l69) l73 s0 (- s1))))
(assert (>= 0 (+ (- l69) l73)))
(assert (>= 0 (+ (- l70) l74 s0 (- s1))))
(assert (>= 0 (+ (- l70) l74)))
(assert (>= 0 (+ (- l71) l75 s0 (- s1))))
(assert (>= 0 (+ (- l71) l75)))
(assert (>= 0 (+ (- l72) l76 (- s1) s5)))
(assert (>= 0 (+ (- l73) l77 (- s1) s5)))
(assert (>= 0 (+ (- l74) l78 (- s1) s5)))
(assert (>= 0 (+ (- l75) l79 (- s1) s5)))
(assert (>= 0 (+ l20 (- l88))))
(assert (>= 0 (+ l21 (- l89))))
(assert (>= 0 (+ l22 (- l90))))
(assert (>= 0 (+ l23 (- l91))))
(assert (>= 0 (+ (- l92) l96)))
(assert (>= 0 (+ (- l93) l97)))
(assert (>= 0 (+ (- l94) l98)))
(assert (>= 0 (+ (- l95) l99)))
(assert (>= 0 (+ (- l24) l88 s0 (- s2))))
(assert (>= 0 (+ (- l25) l89 s0 (- s2))))
(assert (>= 0 (+ (- l26) l90 s0 (- s2))))
(assert (>= 0 (+ (- l27) l91 s0 (- s2))))
(assert (>= 0 (+ (- l24) l88 s1 (- s3))))
(assert (>= 0 (+ (- l25) l89 s1 (- s3))))
(assert (>= 0 (+ (- l26) l90 s1 (- s3))))
(assert (>= 0 (+ (- l27) l91 s1 (- s3))))
(assert (>= 0 (+ (- l36) l40)))
(assert (>= 0 (+ (- l37) l41)))
(assert (>= 0 (+ (- l38) l42)))
(assert (>= 0 (+ (- l39) l43)))
(assert (>= 0 (+ (- l40) l44 s0 (- s4))))
(assert (>= 0 (+ (- l41) l45 s0 (- s4))))
(assert (>= 0 (+ (- l42) l46 s0 (- s4))))
(assert (>= 0 (+ (- l43) l47 s0 (- s4))))
(assert (>= 0 (+ (- l76) l80)))
(assert (>= 0 (+ (- l77) l81)))
(assert (>= 0 (+ (- l78) l82)))
(assert (>= 0 (+ (- l79) l83)))
(assert (>= 0 (+ (- l80) l84 s0 (- s4))))
(assert (>= 0 (+ (- l81) l85 s0 (- s4))))
(assert (>= 0 (+ (- l82) l86 s0 (- s4))))
(assert (>= 0 (+ (- l83) l87 s0 (- s4))))
(assert (>= 0 (+ (- l36) l40)))
(assert (>= 0 (+ (- l37) l41)))
(assert (>= 0 (+ (- l38) l42)))
(assert (>= 0 (+ (- l39) l43)))
(assert (>= 0 (+ (- l40) l44 s1 (- s5))))
(assert (>= 0 (+ (- l41) l45 s1 (- s5))))
(assert (>= 0 (+ (- l42) l46 s1 (- s5))))
(assert (>= 0 (+ (- l43) l47 s1 (- s5))))
(assert (>= 0 (+ (- l76) l80)))
(assert (>= 0 (+ (- l77) l81)))
(assert (>= 0 (+ (- l78) l82)))
(assert (>= 0 (+ (- l79) l83)))
(assert (>= 0 (+ (- l80) l84 s1 (- s5))))
(assert (>= 0 (+ (- l81) l85 s1 (- s5))))
(assert (>= 0 (+ (- l82) l86 s1 (- s5))))
(assert (>= 0 (+ (- l83) l87 s1 (- s5))))
(assert (>= 0 (+ l28 (- s0) s2)))
(assert (>= 0 (+ l29 (- s0) s2)))
(assert (>= 0 (+ l30 (- s0) s2)))
(assert (>= 0 (+ l31 (- s0) s2)))
(assert (>= 0 (+ l28 (- s1) s3)))
(assert (>= 0 (+ l29 (- s1) s3)))
(assert (>= 0 (+ l30 (- s1) s3)))
(assert (>= 0 (+ l31 (- s1) s3)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s8 l100 (- s0) (- l0))))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= s8 0))
(assert (>= l100 0))
(assert (>= l32 0))
(assert (>= l33 0))
(assert (>= l34 0))
(assert (>= l35 0))
(assert (>= l48 0))
(assert (>= l49 0))
(assert (>= l50 0))
(assert (>= l51 0))
(assert (>= l52 0))
(assert (>= l53 0))
(assert (>= l54 0))
(assert (>= l55 0))
(assert (>= l56 0))
(assert (>= l60 0))
(assert (>= l61 0))
(assert (>= l62 0))
(assert (>= l63 0))
(assert (>= l64 0))
(assert (>= l65 0))
(assert (>= l57 0))
(assert (>= l66 0))
(assert (>= l58 0))
(assert (>= l67 0))
(assert (>= l59 0))
(assert (>= l68 0))
(assert (>= l69 0))
(assert (>= l70 0))
(assert (>= l71 0))
(assert (>= l72 0))
(assert (>= l73 0))
(assert (>= l74 0))
(assert (>= l75 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l92 0))
(assert (>= l96 0))
(assert (>= l93 0))
(assert (>= l97 0))
(assert (>= l94 0))
(assert (>= l98 0))
(assert (>= l95 0))
(assert (>= l99 0))
(assert (>= l88 0))
(assert (>= l89 0))
(assert (>= l90 0))
(assert (>= l91 0))
(assert (>= s4 0))
(assert (>= l36 0))
(assert (>= l37 0))
(assert (>= l38 0))
(assert (>= l39 0))
(assert (>= l40 0))
(assert (>= l44 0))
(assert (>= l41 0))
(assert (>= l45 0))
(assert (>= l42 0))
(assert (>= l46 0))
(assert (>= l43 0))
(assert (>= l47 0))
(assert (>= l76 0))
(assert (>= l77 0))
(assert (>= l78 0))
(assert (>= l79 0))
(assert (>= l80 0))
(assert (>= l84 0))
(assert (>= l81 0))
(assert (>= l85 0))
(assert (>= l82 0))
(assert (>= l86 0))
(assert (>= l83 0))
(assert (>= s5 0))
(assert (>= l87 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= l24 0))
(assert (>= l28 0))
(assert (>= l25 0))
(assert (>= l29 0))
(assert (>= l26 0))
(assert (>= l30 0))
(assert (>= s1 0))
(assert (>= l27 0))
(assert (>= s3 0))
(assert (>= l31 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 512 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


