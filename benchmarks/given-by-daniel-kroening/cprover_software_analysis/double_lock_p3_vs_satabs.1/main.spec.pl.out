PETRINIZER: The checker for Petri Nets
[benchmarks/given-by-daniel-kroening/cprover_software_analysis/double_lock_p3_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(s8, [t6], []).
place(l36, [t6], []).
place(l0, [], [t26,t25,t2,t1]).
place(l1, [t26,t25,t2,t1], [t27,t3]).
place(l4, [t28,t4], [t29,t5]).
place(l8, [t30], [t31,t7]).
place(l12, [], [t33,t9]).
place(l13, [t33,t9], []).
place(l20, [t37,t36,t13,t12], [t39,t38,t15,t14]).
place(l21, [t39,t38,t15,t14], [t40,t16]).
place(l28, [t43,t42,t19,t18], [t45,t44,t21,t20]).
place(l29, [t45,t44,t21,t20], [t46,t22]).
place(l34, [], [t48,t24]).
place(l35, [t48,t24], []).
place(l14, [t51,t49,t47,t23], [t34,t10]).
place(l33, [t52,t50], [t47,t23]).
place(s4, [t63,t61,t59,t57,t55,t53,t22,t17,t16,t11,t7,t5], [t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53]).
place(l5, [t29,t5], [t65,t53]).
place(l6, [t65,t53], [t66,t54]).
place(l7, [t66,t54], [t30,t6]).
place(l9, [t31,t7], [t67,t55]).
place(l10, [t67,t55], [t68,t56]).
place(l11, [t68,t56], [t32,t8]).
place(l17, [t35,t11], [t69,t57]).
place(l18, [t69,t57], [t70,t58]).
place(l19, [t70,t58], [t37,t36,t13,t12]).
place(l22, [t40,t16], [t71,t59]).
place(l23, [t71,t59], [t72,t60]).
place(l24, [t72,t60], [t41,t17]).
place(l25, [t41,t17], [t73,t61]).
place(l26, [t73,t61], [t74,t62]).
place(l27, [t74,t62], [t43,t42,t19,t18]).
place(l30, [t46,t22], [t75,t63]).
place(l31, [t75,t63], [t76,t64]).
place(s5, [t75,t73,t71,t69,t67,t65,t46,t41,t40,t35,t31,t29], [t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65]).
place(l32, [t76,t64], []).
place(s0, [t64,t62,t60,t58,t56,t54,t50,t49,t44,t42,t38,t36,t25,t24,t23,t20,t18,t14,t12,t10,t9,t8,t4,t1], [t78,t77,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t78,t77], [t50,t49]).
place(l2, [t79,t77,t27,t3], [t79,t77,t51,t49]).
place(l3, [t79,t77,t32,t8], [t28,t4]).
place(s1, [t76,t74,t72,t70,t68,t66,t52,t51,t48,t47,t45,t43,t39,t37,t34,t33,t32,t30,t28,t27,t26,t21,t19,t15,t13,t3,t2], [t80,t79,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25]).
place(l15, [t80,t78,t34,t10], [t80,t78,t52,t50]).
place(s3, [t80,t79], [t52,t51]).
place(l16, [t80,t78], [t35,t11]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l3,s0], [s0,l4]).
transition(t5, [l4,s0], [s4,l5]).
transition(t6, [l7,s0], [s8,l36]).
transition(t7, [l8,s0], [s4,l9]).
transition(t8, [l11,s0], [s0,l3]).
transition(t9, [l12,s0], [s0,l13]).
transition(t10, [l14,s0], [s0,l15]).
transition(t11, [l16,s0], [s4,l17]).
transition(t12, [l19,s0], [s0,l20]).
transition(t13, [l19,s0], [s1,l20]).
transition(t14, [l20,s0], [s0,l21]).
transition(t15, [l20,s0], [s1,l21]).
transition(t16, [l21,s0], [s4,l22]).
transition(t17, [l24,s0], [s4,l25]).
transition(t18, [l27,s0], [s0,l28]).
transition(t19, [l27,s0], [s1,l28]).
transition(t20, [l28,s0], [s0,l29]).
transition(t21, [l28,s0], [s1,l29]).
transition(t22, [l29,s0], [s4,l30]).
transition(t23, [l33,s0], [s0,l14]).
transition(t24, [l34,s0], [s0,l35]).
transition(t25, [l0,s1], [s0,l1]).
transition(t26, [l0,s1], [s1,l1]).
transition(t27, [l1,s1], [s1,l2]).
transition(t28, [l3,s1], [s1,l4]).
transition(t29, [l4,s1], [s5,l5]).
transition(t30, [l7,s1], [s1,l8]).
transition(t31, [l8,s1], [s5,l9]).
transition(t32, [l11,s1], [s1,l3]).
transition(t33, [l12,s1], [s1,l13]).
transition(t34, [l14,s1], [s1,l15]).
transition(t35, [l16,s1], [s5,l17]).
transition(t36, [l19,s1], [s0,l20]).
transition(t37, [l19,s1], [s1,l20]).
transition(t38, [l20,s1], [s0,l21]).
transition(t39, [l20,s1], [s1,l21]).
transition(t40, [l21,s1], [s5,l22]).
transition(t41, [l24,s1], [s5,l25]).
transition(t42, [l27,s1], [s0,l28]).
transition(t43, [l27,s1], [s1,l28]).
transition(t44, [l28,s1], [s0,l29]).
transition(t45, [l28,s1], [s1,l29]).
transition(t46, [l29,s1], [s5,l30]).
transition(t47, [l33,s1], [s1,l14]).
transition(t48, [l34,s1], [s1,l35]).
transition(t49, [l2,s2], [s0,l14]).
transition(t50, [l15,s2], [s0,l33]).
transition(t51, [l2,s3], [s1,l14]).
transition(t52, [l15,s3], [s1,l33]).
transition(t53, [l5,s4], [s4,l6]).
transition(t54, [l6,s4], [s0,l7]).
transition(t55, [l9,s4], [s4,l10]).
transition(t56, [l10,s4], [s0,l11]).
transition(t57, [l17,s4], [s4,l18]).
transition(t58, [l18,s4], [s0,l19]).
transition(t59, [l22,s4], [s4,l23]).
transition(t60, [l23,s4], [s0,l24]).
transition(t61, [l25,s4], [s4,l26]).
transition(t62, [l26,s4], [s0,l27]).
transition(t63, [l30,s4], [s4,l31]).
transition(t64, [l31,s4], [s0,l32]).
transition(t65, [l5,s5], [s5,l6]).
transition(t66, [l6,s5], [s1,l7]).
transition(t67, [l9,s5], [s5,l10]).
transition(t68, [l10,s5], [s1,l11]).
transition(t69, [l17,s5], [s5,l18]).
transition(t70, [l18,s5], [s1,l19]).
transition(t71, [l22,s5], [s5,l23]).
transition(t72, [l23,s5], [s1,l24]).
transition(t73, [l25,s5], [s5,l26]).
transition(t74, [l26,s5], [s1,l27]).
transition(t75, [l30,s5], [s5,l31]).
transition(t76, [l31,s5], [s1,l32]).
transition(t77, [l2,s0], [l2,s2,l3]).
transition(t78, [l15,s0], [l15,s2,l16]).
transition(t79, [l2,s1], [l2,s3,l3]).
transition(t80, [l15,s1], [l15,s3,l16]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s8 1)').
cond('(>= l36 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun s8 () Int)
(declare-fun l36 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l4 () Int)
(declare-fun l8 () Int)
(declare-fun l12 () Int)
(declare-fun l13 () Int)
(declare-fun l20 () Int)
(declare-fun l21 () Int)
(declare-fun l28 () Int)
(declare-fun l29 () Int)
(declare-fun l34 () Int)
(declare-fun l35 () Int)
(declare-fun l14 () Int)
(declare-fun l33 () Int)
(declare-fun s4 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l9 () Int)
(declare-fun l10 () Int)
(declare-fun l11 () Int)
(declare-fun l17 () Int)
(declare-fun l18 () Int)
(declare-fun l19 () Int)
(declare-fun l22 () Int)
(declare-fun l23 () Int)
(declare-fun l24 () Int)
(declare-fun l25 () Int)
(declare-fun l26 () Int)
(declare-fun l27 () Int)
(declare-fun l30 () Int)
(declare-fun l31 () Int)
(declare-fun s5 () Int)
(declare-fun l32 () Int)
(declare-fun s0 () Int)
(declare-fun s2 () Int)
(declare-fun l2 () Int)
(declare-fun l3 () Int)
(declare-fun s1 () Int)
(declare-fun l15 () Int)
(declare-fun s3 () Int)
(declare-fun l16 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(declare-fun t55 () Int)
(declare-fun t56 () Int)
(declare-fun t57 () Int)
(declare-fun t58 () Int)
(declare-fun t59 () Int)
(declare-fun t60 () Int)
(declare-fun t61 () Int)
(declare-fun t62 () Int)
(declare-fun t63 () Int)
(declare-fun t64 () Int)
(declare-fun t65 () Int)
(declare-fun t66 () Int)
(declare-fun t67 () Int)
(declare-fun t68 () Int)
(declare-fun t69 () Int)
(declare-fun t70 () Int)
(declare-fun t71 () Int)
(declare-fun t72 () Int)
(declare-fun t73 () Int)
(declare-fun t74 () Int)
(declare-fun t75 () Int)
(declare-fun t76 () Int)
(declare-fun t77 () Int)
(declare-fun t78 () Int)
(declare-fun t79 () Int)
(declare-fun t80 () Int)
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l36 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l8 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l34 0))
(assert (>= l35 0))
(assert (>= l14 0))
(assert (>= l33 0))
(assert (>= s4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l30 0))
(assert (>= l31 0))
(assert (>= s5 0))
(assert (>= l32 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= s1 0))
(assert (>= l15 0))
(assert (>= s3 0))
(assert (>= l16 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (>= t55 0))
(assert (>= t56 0))
(assert (>= t57 0))
(assert (>= t58 0))
(assert (>= t59 0))
(assert (>= t60 0))
(assert (>= t61 0))
(assert (>= t62 0))
(assert (>= t63 0))
(assert (>= t64 0))
(assert (>= t65 0))
(assert (>= t66 0))
(assert (>= t67 0))
(assert (>= t68 0))
(assert (>= t69 0))
(assert (>= t70 0))
(assert (>= t71 0))
(assert (>= t72 0))
(assert (>= t73 0))
(assert (>= t74 0))
(assert (>= t75 0))
(assert (>= t76 0))
(assert (>= t77 0))
(assert (>= t78 0))
(assert (>= t79 0))
(assert (>= t80 0))
(assert (= s6 (+ 0)))
(assert (= s7 (+ 0)))
(assert (= s8 (+ 0 t6)))
(assert (= l36 (+ 0 t6)))
(assert (= l0 (+ init1 (- t1) (- t2) (- t25) (- t26))))
(assert (= l1 (+ 0 t1 t2 t25 t26 (- t27) (- t3))))
(assert (= l4 (+ 0 t28 t4 (- t29) (- t5))))
(assert (= l8 (+ 0 t30 (- t31) (- t7))))
(assert (= l12 (+ 0 (- t33) (- t9))))
(assert (= l13 (+ 0 t33 t9)))
(assert (= l20 (+ 0 t12 t13 t36 t37 (- t14) (- t15) (- t38) (- t39))))
(assert (= l21 (+ 0 t14 t15 t38 t39 (- t16) (- t40))))
(assert (= l28 (+ 0 t18 t19 t42 t43 (- t20) (- t21) (- t44) (- t45))))
(assert (= l29 (+ 0 t20 t21 t44 t45 (- t22) (- t46))))
(assert (= l34 (+ 0 (- t24) (- t48))))
(assert (= l35 (+ 0 t24 t48)))
(assert (= l14 (+ 0 t23 t47 t49 t51 (- t10) (- t34))))
(assert (= l33 (+ 0 t50 t52 (- t23) (- t47))))
(assert (= s4 (+ 0 t11 t16 t17 t22 t5 t7 (- t54) (- t56) (- t58) (- t60) (- t62) (- t64))))
(assert (= l5 (+ 0 t29 t5 (- t53) (- t65))))
(assert (= l6 (+ 0 t53 t65 (- t54) (- t66))))
(assert (= l7 (+ 0 t54 t66 (- t30) (- t6))))
(assert (= l9 (+ 0 t31 t7 (- t55) (- t67))))
(assert (= l10 (+ 0 t55 t67 (- t56) (- t68))))
(assert (= l11 (+ 0 t56 t68 (- t32) (- t8))))
(assert (= l17 (+ 0 t11 t35 (- t57) (- t69))))
(assert (= l18 (+ 0 t57 t69 (- t58) (- t70))))
(assert (= l19 (+ 0 t58 t70 (- t12) (- t13) (- t36) (- t37))))
(assert (= l22 (+ 0 t16 t40 (- t59) (- t71))))
(assert (= l23 (+ 0 t59 t71 (- t60) (- t72))))
(assert (= l24 (+ 0 t60 t72 (- t17) (- t41))))
(assert (= l25 (+ 0 t17 t41 (- t61) (- t73))))
(assert (= l26 (+ 0 t61 t73 (- t62) (- t74))))
(assert (= l27 (+ 0 t62 t74 (- t18) (- t19) (- t42) (- t43))))
(assert (= l30 (+ 0 t22 t46 (- t63) (- t75))))
(assert (= l31 (+ 0 t63 t75 (- t64) (- t76))))
(assert (= s5 (+ 0 t29 t31 t35 t40 t41 t46 (- t66) (- t68) (- t70) (- t72) (- t74) (- t76))))
(assert (= l32 (+ 0 t64 t76)))
(assert (= s0 (+ 1 t25 t36 t38 t42 t44 t49 t50 t54 t56 t58 t60 t62 t64 (- t11) (- t13) (- t15) (- t16) (- t17) (- t19) (- t2) (- t21) (- t22) (- t3) (- t5) (- t6) (- t7) (- t77) (- t78))))
(assert (= s2 (+ 0 t77 t78 (- t49) (- t50))))
(assert (= l2 (+ 0 t27 t3 (- t49) (- t51))))
(assert (= l3 (+ 0 t32 t77 t79 t8 (- t28) (- t4))))
(assert (= s1 (+ 0 t13 t15 t19 t2 t21 t3 t51 t52 t66 t68 t70 t72 t74 t76 (- t25) (- t29) (- t31) (- t35) (- t36) (- t38) (- t40) (- t41) (- t42) (- t44) (- t46) (- t79) (- t80))))
(assert (= l15 (+ 0 t10 t34 (- t50) (- t52))))
(assert (= s3 (+ 0 t79 t80 (- t51) (- t52))))
(assert (= l16 (+ 0 t78 t80 (- t11) (- t35))))
(assert (>= init1 1))
(assert (>= s8 1))
(assert (>= l36 1))
(check-sat)
(get-model)

* Checking SAT(C0)
sat
(model 
  (define-fun t10 () Int
    1)
  (define-fun t28 () Int
    0)
  (define-fun t5 () Int
    0)
  (define-fun t15 () Int
    0)
  (define-fun t60 () Int
    0)
  (define-fun t75 () Int
    0)
  (define-fun t66 () Int
    1)
  (define-fun t6 () Int
    1)
  (define-fun t67 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun t51 () Int
    0)
  (define-fun t53 () Int
    1)
  (define-fun t62 () Int
    0)
  (define-fun t65 () Int
    0)
  (define-fun t33 () Int
    0)
  (define-fun t40 () Int
    0)
  (define-fun t68 () Int
    0)
  (define-fun t70 () Int
    0)
  (define-fun t72 () Int
    0)
  (define-fun t41 () Int
    0)
  (define-fun t31 () Int
    0)
  (define-fun t69 () Int
    0)
  (define-fun t2 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    1)
  (define-fun t46 () Int
    0)
  (define-fun t52 () Int
    1)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t59 () Int
    0)
  (define-fun t24 () Int
    0)
  (define-fun t71 () Int
    0)
  (define-fun t54 () Int
    0)
  (define-fun t77 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    0)
  (define-fun t55 () Int
    0)
  (define-fun t18 () Int
    0)
  (define-fun t74 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t80 () Int
    0)
  (define-fun t73 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t20 () Int
    0)
  (define-fun t21 () Int
    0)
  (define-fun t63 () Int
    0)
  (define-fun t25 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t48 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun t17 () Int
    0)
  (define-fun t1 () Int
    0)
  (define-fun t23 () Int
    1)
  (define-fun t57 () Int
    0)
  (define-fun t76 () Int
    0)
  (define-fun t56 () Int
    0)
  (define-fun t61 () Int
    0)
  (define-fun t78 () Int
    0)
  (define-fun t30 () Int
    0)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    0)
  (define-fun t50 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun t58 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    0)
  (define-fun t79 () Int
    1)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t64 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    1)
  (define-fun t3 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l32 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun l31 () Int
    0)
  (define-fun l30 () Int
    0)
  (define-fun l27 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun l24 () Int
    0)
  (define-fun l23 () Int
    0)
  (define-fun l22 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun l33 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun l35 () Int
    0)
  (define-fun l34 () Int
    0)
  (define-fun l29 () Int
    0)
  (define-fun l28 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l8 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    1)
  (define-fun l36 () Int
    1)
  (define-fun s8 () Int
    1)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t10, 1).
assignment(t28, 0).
assignment(t5, 0).
assignment(t15, 0).
assignment(t60, 0).
assignment(t75, 0).
assignment(t66, 1).
assignment(t6, 1).
assignment(t67, 0).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(t51, 0).
assignment(t53, 1).
assignment(t62, 0).
assignment(t65, 0).
assignment(t33, 0).
assignment(t40, 0).
assignment(t68, 0).
assignment(t70, 0).
assignment(t72, 0).
assignment(t41, 0).
assignment(t31, 0).
assignment(t69, 0).
assignment(t2, 0).
assignment(t39, 0).
assignment(t4, 1).
assignment(t46, 0).
assignment(t52, 1).
assignment(t49, 0).
assignment(t8, 0).
assignment(t59, 0).
assignment(t24, 0).
assignment(t71, 0).
assignment(t54, 0).
assignment(t77, 0).
assignment(t37, 0).
assignment(t9, 0).
assignment(t55, 0).
assignment(t18, 0).
assignment(t74, 0).
assignment(t35, 0).
assignment(t80, 0).
assignment(t73, 0).
assignment(t12, 0).
assignment(t20, 0).
assignment(t21, 0).
assignment(t63, 0).
assignment(t25, 0).
assignment(t26, 0).
assignment(init1, 1).
assignment(t48, 0).
assignment(t44, 0).
assignment(t17, 0).
assignment(t1, 0).
assignment(t23, 1).
assignment(t57, 0).
assignment(t76, 0).
assignment(t56, 0).
assignment(t61, 0).
assignment(t78, 0).
assignment(t30, 0).
assignment(t43, 0).
assignment(t47, 0).
assignment(t50, 0).
assignment(t45, 0).
assignment(t58, 0).
assignment(t42, 0).
assignment(t32, 0).
assignment(t19, 0).
assignment(t34, 0).
assignment(t79, 1).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 0).
assignment(t64, 0).
assignment(t11, 0).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 1).
assignment(t3, 0).
assignment(l16, 0).
assignment(s3, 0).
assignment(l15, 0).
assignment(s1, 0).
assignment(l3, 0).
assignment(l2, 0).
assignment(s2, 0).
assignment(s0, 0).
assignment(l32, 0).
assignment(s5, 0).
assignment(l31, 0).
assignment(l30, 0).
assignment(l27, 0).
assignment(l26, 0).
assignment(l25, 0).
assignment(l24, 0).
assignment(l23, 0).
assignment(l22, 0).
assignment(l19, 0).
assignment(l18, 0).
assignment(l17, 0).
assignment(l11, 0).
assignment(l10, 0).
assignment(l9, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(l5, 0).
assignment(s4, 0).
assignment(l33, 0).
assignment(l14, 0).
assignment(l35, 0).
assignment(l34, 0).
assignment(l29, 0).
assignment(l28, 0).
assignment(l21, 0).
assignment(l20, 0).
assignment(l13, 0).
assignment(l12, 0).
assignment(l8, 0).
assignment(l4, 0).
assignment(l1, 0).
assignment(l0, 1).
assignment(l36, 1).
assignment(s8, 1).
assignment(s7, 0).
assignment(s6, 0).

- constraints C_theta...
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun s8 () Bool)
(declare-fun l36 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l4 () Bool)
(declare-fun l8 () Bool)
(declare-fun l12 () Bool)
(declare-fun l13 () Bool)
(declare-fun l20 () Bool)
(declare-fun l21 () Bool)
(declare-fun l28 () Bool)
(declare-fun l29 () Bool)
(declare-fun l34 () Bool)
(declare-fun l35 () Bool)
(declare-fun l14 () Bool)
(declare-fun l33 () Bool)
(declare-fun s4 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l9 () Bool)
(declare-fun l10 () Bool)
(declare-fun l11 () Bool)
(declare-fun l17 () Bool)
(declare-fun l18 () Bool)
(declare-fun l19 () Bool)
(declare-fun l22 () Bool)
(declare-fun l23 () Bool)
(declare-fun l24 () Bool)
(declare-fun l25 () Bool)
(declare-fun l26 () Bool)
(declare-fun l27 () Bool)
(declare-fun l30 () Bool)
(declare-fun l31 () Bool)
(declare-fun s5 () Bool)
(declare-fun l32 () Bool)
(declare-fun s0 () Bool)
(declare-fun s2 () Bool)
(declare-fun l2 () Bool)
(declare-fun l3 () Bool)
(declare-fun s1 () Bool)
(declare-fun l15 () Bool)
(declare-fun s3 () Bool)
(declare-fun l16 () Bool)

(assert (implies l0 (and (or s1 l1) (or s0 l1) (or s1 l1) (or s0 l1))))
(assert (implies l1 (and (or s1 l2) (or s1 l2))))
(assert (implies l4 (and (or s5 l5) (or s4 l5))))
(assert (implies l8 (and (or s5 l9) (or s4 l9))))
(assert (implies l12 (and (or s1 l13) (or s0 l13))))
(assert (implies l20 (and (or s1 l21) (or s0 l21) (or s1 l21) (or s0 l21))))
(assert (implies l21 (and (or s5 l22) (or s4 l22))))
(assert (implies l28 (and (or s1 l29) (or s0 l29) (or s1 l29) (or s0 l29))))
(assert (implies l29 (and (or s5 l30) (or s4 l30))))
(assert (implies l34 (and (or s1 l35) (or s0 l35))))
(assert (implies l14 (and (or s1 l15) (or s0 l15))))
(assert (implies l33 (and (or s1 l14) (or s0 l14))))
(assert (implies s4 (and (or s0 l32) (or s4 l31) (or s0 l27) (or s4 l26) (or s0 l24) (or s4 l23) (or s0 l19) (or s4 l18) (or s0 l11) (or s4 l10) (or s0 l7) (or s4 l6))))
(assert (implies l5 (and (or s5 l6) (or s4 l6))))
(assert (implies l6 (and (or s1 l7) (or s0 l7))))
(assert (implies l7 (and (or s1 l8) (or s8 l36))))
(assert (implies l9 (and (or s5 l10) (or s4 l10))))
(assert (implies l10 (and (or s1 l11) (or s0 l11))))
(assert (implies l11 (and (or s1 l3) (or s0 l3))))
(assert (implies l17 (and (or s5 l18) (or s4 l18))))
(assert (implies l18 (and (or s1 l19) (or s0 l19))))
(assert (implies l19 (and (or s1 l20) (or s0 l20) (or s1 l20) (or s0 l20))))
(assert (implies l22 (and (or s5 l23) (or s4 l23))))
(assert (implies l23 (and (or s1 l24) (or s0 l24))))
(assert (implies l24 (and (or s5 l25) (or s4 l25))))
(assert (implies l25 (and (or s5 l26) (or s4 l26))))
(assert (implies l26 (and (or s1 l27) (or s0 l27))))
(assert (implies l27 (and (or s1 l28) (or s0 l28) (or s1 l28) (or s0 l28))))
(assert (implies l30 (and (or s5 l31) (or s4 l31))))
(assert (implies l31 (and (or s1 l32) (or s0 l32))))
(assert (implies s5 (and (or s1 l32) (or s5 l31) (or s1 l27) (or s5 l26) (or s1 l24) (or s5 l23) (or s1 l19) (or s5 l18) (or s1 l11) (or s5 l10) (or s1 l7) (or s5 l6))))
(assert (implies s0 (and (or l15 s2 l16) (or l2 s2 l3) (or s0 l35) (or s0 l14) (or s4 l30) (or s1 l29) (or s0 l29) (or s1 l28) (or s0 l28) (or s4 l25) (or s4 l22) (or s1 l21) (or s0 l21) (or s1 l20) (or s0 l20) (or s4 l17) (or s0 l15) (or s0 l13) (or s0 l3) (or s4 l9) (or s8 l36) (or s4 l5) (or s0 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies s2 (and (or s0 l33) (or s0 l14))))
(assert (implies l2 (and (or l2 s3 l3) (or l2 s2 l3) (or s1 l14) (or s0 l14))))
(assert (implies l3 (and (or s1 l4) (or s0 l4))))
(assert (implies s1 (and (or l15 s3 l16) (or l2 s3 l3) (or s1 l35) (or s1 l14) (or s5 l30) (or s1 l29) (or s0 l29) (or s1 l28) (or s0 l28) (or s5 l25) (or s5 l22) (or s1 l21) (or s0 l21) (or s1 l20) (or s0 l20) (or s5 l17) (or s1 l15) (or s1 l13) (or s1 l3) (or s5 l9) (or s1 l8) (or s5 l5) (or s1 l4) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies l15 (and (or l15 s3 l16) (or l15 s2 l16) (or s1 l33) (or s0 l33))))
(assert (implies s3 (and (or s1 l33) (or s1 l14))))
(assert (implies l16 (and (or s5 l17) (or s4 l17))))

(assert (or s0 l0))

(assert (not l0))
(assert (not l36))
(assert (not s8))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 95 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

