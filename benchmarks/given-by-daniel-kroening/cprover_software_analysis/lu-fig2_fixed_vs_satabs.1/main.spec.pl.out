PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/lu-fig2_fixed_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s3, [], []).
place(l13, [t4], [t6]).
place(l14, [t5], [t7]).
place(l15, [t7], [t8]).
place(l16, [t8,t6], [t9]).
place(l17, [t9], []).
place(l20, [t11], [t13]).
place(l19, [t13,t10], [t12,t11]).
place(l21, [t12], [t14]).
place(l18, [t17], [t10]).
place(l2, [t1], [t18]).
place(l3, [t18], [t19]).
place(l4, [t19], [t2]).
place(l5, [t2], [t21,t20]).
place(l6, [t20], [t22]).
place(l7, [t21], [t23]).
place(l8, [t22], [t24]).
place(l9, [t24], [t3]).
place(l10, [t3], [t25]).
place(l11, [t25], [t26]).
place(l12, [t26], [t5,t4]).
place(l22, [t14], [t27]).
place(l23, [t27], [t28]).
place(l24, [t28], [t15]).
place(l25, [t15], [t29]).
place(l26, [t29], [t30]).
place(l27, [t30], [t16]).
place(l28, [t16], [t32,t31]).
place(l29, [t31], [t33]).
place(l30, [t32], [t34]).
place(s4, [t34,t23], []).
place(l33, [t34,t23], []).
place(l31, [t33], [t35]).
place(s2, [t33,t32,t31,t29,t27,t25,t22,t21,t20,t18,t16,t15,t14,t3,t2,t1], [t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18]).
place(l32, [t35], []).
place(s0, [t35,t30,t28,t26,t24,t19,t17,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4], [t36,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s1, [t36], [t17]).
place(l1, [t36], [t1]).
place(l0, [init1,t36], [t36,t17]).

transition(t1, [l1,s0], [s2,l2]).
transition(t2, [l4,s0], [s2,l5]).
transition(t3, [l9,s0], [s2,l10]).
transition(t4, [l12,s0], [s0,l13]).
transition(t5, [l12,s0], [s0,l14]).
transition(t6, [l13,s0], [s0,l16]).
transition(t7, [l14,s0], [s0,l15]).
transition(t8, [l15,s0], [s0,l16]).
transition(t9, [l16,s0], [s0,l17]).
transition(t10, [l18,s0], [s0,l19]).
transition(t11, [l19,s0], [s0,l20]).
transition(t12, [l19,s0], [s0,l21]).
transition(t13, [l20,s0], [s0,l19]).
transition(t14, [l21,s0], [s2,l22]).
transition(t15, [l24,s0], [s2,l25]).
transition(t16, [l27,s0], [s2,l28]).
transition(t17, [l0,s1], [s0,l18]).
transition(t18, [l2,s2], [s2,l3]).
transition(t19, [l3,s2], [s0,l4]).
transition(t20, [l5,s2], [s2,l6]).
transition(t21, [l5,s2], [s2,l7]).
transition(t22, [l6,s2], [s2,l8]).
transition(t23, [l7,s2], [s4,l33]).
transition(t24, [l8,s2], [s0,l9]).
transition(t25, [l10,s2], [s2,l11]).
transition(t26, [l11,s2], [s0,l12]).
transition(t27, [l22,s2], [s2,l23]).
transition(t28, [l23,s2], [s0,l24]).
transition(t29, [l25,s2], [s2,l26]).
transition(t30, [l26,s2], [s0,l27]).
transition(t31, [l28,s2], [s2,l29]).
transition(t32, [l28,s2], [s2,l30]).
transition(t33, [l29,s2], [s2,l31]).
transition(t34, [l30,s2], [s4,l33]).
transition(t35, [l31,s2], [s0,l32]).
transition(t36, [l0,s0], [l0,s1,l1]).
transition(init1, [], [l0]).

weight(l1, t1, 1).
weight(s0, t1, 1).
weight(t1, s2, 1).
weight(t1, l2, 1).
weight(l4, t2, 1).
weight(s0, t2, 1).
weight(t2, s2, 1).
weight(t2, l5, 1).
weight(l9, t3, 1).
weight(s0, t3, 1).
weight(t3, s2, 1).
weight(t3, l10, 1).
weight(l12, t4, 1).
weight(s0, t4, 1).
weight(t4, s0, 1).
weight(t4, l13, 1).
weight(l12, t5, 1).
weight(s0, t5, 1).
weight(t5, s0, 1).
weight(t5, l14, 1).
weight(l13, t6, 1).
weight(s0, t6, 1).
weight(t6, s0, 1).
weight(t6, l16, 1).
weight(l14, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l15, 1).
weight(l15, t8, 1).
weight(s0, t8, 1).
weight(t8, s0, 1).
weight(t8, l16, 1).
weight(l16, t9, 1).
weight(s0, t9, 1).
weight(t9, s0, 1).
weight(t9, l17, 1).
weight(l18, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l19, 1).
weight(l19, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l20, 1).
weight(l19, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l21, 1).
weight(l20, t13, 1).
weight(s0, t13, 1).
weight(t13, s0, 1).
weight(t13, l19, 1).
weight(l21, t14, 1).
weight(s0, t14, 1).
weight(t14, s2, 1).
weight(t14, l22, 1).
weight(l24, t15, 1).
weight(s0, t15, 1).
weight(t15, s2, 1).
weight(t15, l25, 1).
weight(l27, t16, 1).
weight(s0, t16, 1).
weight(t16, s2, 1).
weight(t16, l28, 1).
weight(l0, t17, 1).
weight(s1, t17, 1).
weight(t17, s0, 1).
weight(t17, l18, 1).
weight(l2, t18, 1).
weight(s2, t18, 1).
weight(t18, s2, 1).
weight(t18, l3, 1).
weight(l3, t19, 1).
weight(s2, t19, 1).
weight(t19, s0, 1).
weight(t19, l4, 1).
weight(l5, t20, 1).
weight(s2, t20, 1).
weight(t20, s2, 1).
weight(t20, l6, 1).
weight(l5, t21, 1).
weight(s2, t21, 1).
weight(t21, s2, 1).
weight(t21, l7, 1).
weight(l6, t22, 1).
weight(s2, t22, 1).
weight(t22, s2, 1).
weight(t22, l8, 1).
weight(l7, t23, 1).
weight(s2, t23, 1).
weight(t23, s4, 1).
weight(t23, l33, 1).
weight(l8, t24, 1).
weight(s2, t24, 1).
weight(t24, s0, 1).
weight(t24, l9, 1).
weight(l10, t25, 1).
weight(s2, t25, 1).
weight(t25, s2, 1).
weight(t25, l11, 1).
weight(l11, t26, 1).
weight(s2, t26, 1).
weight(t26, s0, 1).
weight(t26, l12, 1).
weight(l22, t27, 1).
weight(s2, t27, 1).
weight(t27, s2, 1).
weight(t27, l23, 1).
weight(l23, t28, 1).
weight(s2, t28, 1).
weight(t28, s0, 1).
weight(t28, l24, 1).
weight(l25, t29, 1).
weight(s2, t29, 1).
weight(t29, s2, 1).
weight(t29, l26, 1).
weight(l26, t30, 1).
weight(s2, t30, 1).
weight(t30, s0, 1).
weight(t30, l27, 1).
weight(l28, t31, 1).
weight(s2, t31, 1).
weight(t31, s2, 1).
weight(t31, l29, 1).
weight(l28, t32, 1).
weight(s2, t32, 1).
weight(t32, s2, 1).
weight(t32, l30, 1).
weight(l29, t33, 1).
weight(s2, t33, 1).
weight(t33, s2, 1).
weight(t33, l31, 1).
weight(l30, t34, 1).
weight(s2, t34, 1).
weight(t34, s4, 1).
weight(t34, l33, 1).
weight(l31, t35, 1).
weight(s2, t35, 1).
weight(t35, s0, 1).
weight(t35, l32, 1).
weight(l0, t36, 1).
weight(s0, t36, 1).
weight(t36, l0, 1).
weight(t36, s1, 1).
weight(t36, l1, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s4 1)').
cond('(>= l33 1)').

target(s4, 1).
target(l33, 1).


* Constructing constraints C' for petri net N
(declare-fun s3 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l20 () Real)
(declare-fun l19 () Real)
(declare-fun l21 () Real)
(declare-fun l18 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l27 () Real)
(declare-fun l28 () Real)
(declare-fun l29 () Real)
(declare-fun l30 () Real)
(declare-fun s4 () Real)
(declare-fun l33 () Real)
(declare-fun l31 () Real)
(declare-fun s2 () Real)
(declare-fun l32 () Real)
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun l1 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l1) l2 (- s0) s2)))
(assert (>= 0 (+ (- l4) l5 (- s0) s2)))
(assert (>= 0 (+ l10 (- l9) (- s0) s2)))
(assert (>= 0 (+ (- l12) l13)))
(assert (>= 0 (+ (- l12) l14)))
(assert (>= 0 (+ (- l13) l16)))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ (- l18) l19)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ l19 (- l20))))
(assert (>= 0 (+ (- l21) l22 (- s0) s2)))
(assert (>= 0 (+ (- l24) l25 (- s0) s2)))
(assert (>= 0 (+ (- l27) l28 (- s0) s2)))
(assert (>= 0 (+ (- l0) l18 s0 (- s1))))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l3) l4 s0 (- s2))))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ (- l5) l7)))
(assert (>= 0 (+ (- l6) l8)))
(assert (>= 0 (+ l33 (- l7) (- s2) s4)))
(assert (>= 0 (+ (- l8) l9 s0 (- s2))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 s0 (- s2))))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24 s0 (- s2))))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27 s0 (- s2))))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l28) l30)))
(assert (>= 0 (+ (- l29) l31)))
(assert (>= 0 (+ (- l30) l33 (- s2) s4)))
(assert (>= 0 (+ (- l31) l32 s0 (- s2))))
(assert (>= 0 (+ l1 (- s0) s1)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s4 l33 (- s0) (- l0))))
(assert (>= s3 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l20 0))
(assert (>= l19 0))
(assert (>= l21 0))
(assert (>= l18 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l30 0))
(assert (>= s4 0))
(assert (>= l33 0))
(assert (>= l31 0))
(assert (>= s2 0))
(assert (>= l32 0))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= l1 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 118 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


