PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/stack_lock_p0_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(l23, [t16], []).
place(l1, [t20,t19,t2,t1], [t21,t3]).
place(l2, [t21,t3], [t22,t4]).
place(l11, [t25,t7], []).
place(l12, [], [t27,t9]).
place(l13, [t26,t8], [t28,t10]).
place(l14, [t28,t10], [t29,t11]).
place(l18, [t31,t30,t13,t12], [t32,t14]).
place(l22, [t33,t15], [t34,t16]).
place(s8, [t34], []).
place(l27, [t34], []).
place(l3, [t35,t22,t17,t4], [t23,t5]).
place(l25, [], [t36,t18]).
place(l26, [t36,t18], []).
place(l24, [t38,t37], [t35,t17]).
place(s4, [t46,t44,t42,t41,t40,t39,t14,t11,t6], [t47,t46,t45,t44,t43,t42,t41,t40,t39]).
place(l6, [t24,t6], [t49,t48,t40,t39]).
place(l7, [t48,t39], [t50,t41]).
place(l8, [t49,t40], [t51,t42]).
place(l9, [t51,t50,t42,t41], [t52,t43]).
place(l10, [t52,t43], [t26,t25,t8,t7]).
place(l15, [t29,t11], [t53,t44]).
place(l16, [t53,t44], [t54,t45]).
place(l17, [t54,t45], [t31,t30,t13,t12]).
place(l19, [t32,t14], [t55,t46]).
place(l20, [t55,t46], [t56,t47]).
place(s5, [t55,t53,t51,t50,t49,t48,t32,t29,t24], [t56,t55,t54,t53,t52,t51,t50,t49,t48]).
place(l21, [t56,t47,t27,t9], [t33,t15]).
place(s0, [t47,t45,t43,t37,t30,t19,t18,t17,t16,t15,t12,t10,t9,t8,t7,t5,t1], [t57,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t57], [t37]).
place(s1, [t56,t54,t52,t38,t36,t35,t33,t31,t28,t27,t26,t25,t23,t22,t21,t20,t13,t4,t3,t2], [t58,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19]).
place(l4, [t58,t57,t23,t5], [t58,t57,t38,t37]).
place(s3, [t58], [t38]).
place(l5, [t58,t57], [t24,t6]).
place(l0, [init1], [t20,t19,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l2,s0], [s1,l3]).
transition(t5, [l3,s0], [s0,l4]).
transition(t6, [l5,s0], [s4,l6]).
transition(t7, [l10,s0], [s0,l11]).
transition(t8, [l10,s0], [s0,l13]).
transition(t9, [l12,s0], [s0,l21]).
transition(t10, [l13,s0], [s0,l14]).
transition(t11, [l14,s0], [s4,l15]).
transition(t12, [l17,s0], [s0,l18]).
transition(t13, [l17,s0], [s1,l18]).
transition(t14, [l18,s0], [s4,l19]).
transition(t15, [l21,s0], [s0,l22]).
transition(t16, [l22,s0], [s0,l23]).
transition(t17, [l24,s0], [s0,l3]).
transition(t18, [l25,s0], [s0,l26]).
transition(t19, [l0,s1], [s0,l1]).
transition(t20, [l0,s1], [s1,l1]).
transition(t21, [l1,s1], [s1,l2]).
transition(t22, [l2,s1], [s1,l3]).
transition(t23, [l3,s1], [s1,l4]).
transition(t24, [l5,s1], [s5,l6]).
transition(t25, [l10,s1], [s1,l11]).
transition(t26, [l10,s1], [s1,l13]).
transition(t27, [l12,s1], [s1,l21]).
transition(t28, [l13,s1], [s1,l14]).
transition(t29, [l14,s1], [s5,l15]).
transition(t30, [l17,s1], [s0,l18]).
transition(t31, [l17,s1], [s1,l18]).
transition(t32, [l18,s1], [s5,l19]).
transition(t33, [l21,s1], [s1,l22]).
transition(t34, [l22,s1], [s8,l27]).
transition(t35, [l24,s1], [s1,l3]).
transition(t36, [l25,s1], [s1,l26]).
transition(t37, [l4,s2], [s0,l24]).
transition(t38, [l4,s3], [s1,l24]).
transition(t39, [l6,s4], [s4,l7]).
transition(t40, [l6,s4], [s4,l8]).
transition(t41, [l7,s4], [s4,l9]).
transition(t42, [l8,s4], [s4,l9]).
transition(t43, [l9,s4], [s0,l10]).
transition(t44, [l15,s4], [s4,l16]).
transition(t45, [l16,s4], [s0,l17]).
transition(t46, [l19,s4], [s4,l20]).
transition(t47, [l20,s4], [s0,l21]).
transition(t48, [l6,s5], [s5,l7]).
transition(t49, [l6,s5], [s5,l8]).
transition(t50, [l7,s5], [s5,l9]).
transition(t51, [l8,s5], [s5,l9]).
transition(t52, [l9,s5], [s1,l10]).
transition(t53, [l15,s5], [s5,l16]).
transition(t54, [l16,s5], [s1,l17]).
transition(t55, [l19,s5], [s5,l20]).
transition(t56, [l20,s5], [s1,l21]).
transition(t57, [l4,s0], [l4,s2,l5]).
transition(t58, [l4,s1], [l4,s3,l5]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s1, 1).
weight(t3, l2, 1).
weight(l2, t4, 1).
weight(s0, t4, 1).
weight(t4, s1, 1).
weight(t4, l3, 1).
weight(l3, t5, 1).
weight(s0, t5, 1).
weight(t5, s0, 1).
weight(t5, l4, 1).
weight(l5, t6, 1).
weight(s0, t6, 1).
weight(t6, s4, 1).
weight(t6, l6, 1).
weight(l10, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l11, 1).
weight(l10, t8, 1).
weight(s0, t8, 1).
weight(t8, s0, 1).
weight(t8, l13, 1).
weight(l12, t9, 1).
weight(s0, t9, 1).
weight(t9, s0, 1).
weight(t9, l21, 1).
weight(l13, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l14, 1).
weight(l14, t11, 1).
weight(s0, t11, 1).
weight(t11, s4, 1).
weight(t11, l15, 1).
weight(l17, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l18, 1).
weight(l17, t13, 1).
weight(s0, t13, 1).
weight(t13, s1, 1).
weight(t13, l18, 1).
weight(l18, t14, 1).
weight(s0, t14, 1).
weight(t14, s4, 1).
weight(t14, l19, 1).
weight(l21, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l22, 1).
weight(l22, t16, 1).
weight(s0, t16, 1).
weight(t16, s0, 1).
weight(t16, l23, 1).
weight(l24, t17, 1).
weight(s0, t17, 1).
weight(t17, s0, 1).
weight(t17, l3, 1).
weight(l25, t18, 1).
weight(s0, t18, 1).
weight(t18, s0, 1).
weight(t18, l26, 1).
weight(l0, t19, 1).
weight(s1, t19, 1).
weight(t19, s0, 1).
weight(t19, l1, 1).
weight(l0, t20, 1).
weight(s1, t20, 1).
weight(t20, s1, 1).
weight(t20, l1, 1).
weight(l1, t21, 1).
weight(s1, t21, 1).
weight(t21, s1, 1).
weight(t21, l2, 1).
weight(l2, t22, 1).
weight(s1, t22, 1).
weight(t22, s1, 1).
weight(t22, l3, 1).
weight(l3, t23, 1).
weight(s1, t23, 1).
weight(t23, s1, 1).
weight(t23, l4, 1).
weight(l5, t24, 1).
weight(s1, t24, 1).
weight(t24, s5, 1).
weight(t24, l6, 1).
weight(l10, t25, 1).
weight(s1, t25, 1).
weight(t25, s1, 1).
weight(t25, l11, 1).
weight(l10, t26, 1).
weight(s1, t26, 1).
weight(t26, s1, 1).
weight(t26, l13, 1).
weight(l12, t27, 1).
weight(s1, t27, 1).
weight(t27, s1, 1).
weight(t27, l21, 1).
weight(l13, t28, 1).
weight(s1, t28, 1).
weight(t28, s1, 1).
weight(t28, l14, 1).
weight(l14, t29, 1).
weight(s1, t29, 1).
weight(t29, s5, 1).
weight(t29, l15, 1).
weight(l17, t30, 1).
weight(s1, t30, 1).
weight(t30, s0, 1).
weight(t30, l18, 1).
weight(l17, t31, 1).
weight(s1, t31, 1).
weight(t31, s1, 1).
weight(t31, l18, 1).
weight(l18, t32, 1).
weight(s1, t32, 1).
weight(t32, s5, 1).
weight(t32, l19, 1).
weight(l21, t33, 1).
weight(s1, t33, 1).
weight(t33, s1, 1).
weight(t33, l22, 1).
weight(l22, t34, 1).
weight(s1, t34, 1).
weight(t34, s8, 1).
weight(t34, l27, 1).
weight(l24, t35, 1).
weight(s1, t35, 1).
weight(t35, s1, 1).
weight(t35, l3, 1).
weight(l25, t36, 1).
weight(s1, t36, 1).
weight(t36, s1, 1).
weight(t36, l26, 1).
weight(l4, t37, 1).
weight(s2, t37, 1).
weight(t37, s0, 1).
weight(t37, l24, 1).
weight(l4, t38, 1).
weight(s3, t38, 1).
weight(t38, s1, 1).
weight(t38, l24, 1).
weight(l6, t39, 1).
weight(s4, t39, 1).
weight(t39, s4, 1).
weight(t39, l7, 1).
weight(l6, t40, 1).
weight(s4, t40, 1).
weight(t40, s4, 1).
weight(t40, l8, 1).
weight(l7, t41, 1).
weight(s4, t41, 1).
weight(t41, s4, 1).
weight(t41, l9, 1).
weight(l8, t42, 1).
weight(s4, t42, 1).
weight(t42, s4, 1).
weight(t42, l9, 1).
weight(l9, t43, 1).
weight(s4, t43, 1).
weight(t43, s0, 1).
weight(t43, l10, 1).
weight(l15, t44, 1).
weight(s4, t44, 1).
weight(t44, s4, 1).
weight(t44, l16, 1).
weight(l16, t45, 1).
weight(s4, t45, 1).
weight(t45, s0, 1).
weight(t45, l17, 1).
weight(l19, t46, 1).
weight(s4, t46, 1).
weight(t46, s4, 1).
weight(t46, l20, 1).
weight(l20, t47, 1).
weight(s4, t47, 1).
weight(t47, s0, 1).
weight(t47, l21, 1).
weight(l6, t48, 1).
weight(s5, t48, 1).
weight(t48, s5, 1).
weight(t48, l7, 1).
weight(l6, t49, 1).
weight(s5, t49, 1).
weight(t49, s5, 1).
weight(t49, l8, 1).
weight(l7, t50, 1).
weight(s5, t50, 1).
weight(t50, s5, 1).
weight(t50, l9, 1).
weight(l8, t51, 1).
weight(s5, t51, 1).
weight(t51, s5, 1).
weight(t51, l9, 1).
weight(l9, t52, 1).
weight(s5, t52, 1).
weight(t52, s1, 1).
weight(t52, l10, 1).
weight(l15, t53, 1).
weight(s5, t53, 1).
weight(t53, s5, 1).
weight(t53, l16, 1).
weight(l16, t54, 1).
weight(s5, t54, 1).
weight(t54, s1, 1).
weight(t54, l17, 1).
weight(l19, t55, 1).
weight(s5, t55, 1).
weight(t55, s5, 1).
weight(t55, l20, 1).
weight(l20, t56, 1).
weight(s5, t56, 1).
weight(t56, s1, 1).
weight(t56, l21, 1).
weight(l4, t57, 1).
weight(s0, t57, 1).
weight(t57, l4, 1).
weight(t57, s2, 1).
weight(t57, l5, 1).
weight(l4, t58, 1).
weight(s1, t58, 1).
weight(t58, l4, 1).
weight(t58, s3, 1).
weight(t58, l5, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s8 1)').
cond('(>= l27 1)').

target(s8, 1).
target(l27, 1).


* Constructing constraints C' for petri net N
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun l23 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l18 () Real)
(declare-fun l22 () Real)
(declare-fun s8 () Real)
(declare-fun l27 () Real)
(declare-fun l3 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l24 () Real)
(declare-fun s4 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l19 () Real)
(declare-fun l20 () Real)
(declare-fun s5 () Real)
(declare-fun l21 () Real)
(declare-fun s0 () Real)
(declare-fun s2 () Real)
(declare-fun s1 () Real)
(declare-fun l4 () Real)
(declare-fun s3 () Real)
(declare-fun l5 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l2) l3 (- s0) s1)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ (- l5) l6 (- s0) s4)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l10) l13)))
(assert (>= 0 (+ (- l12) l21)))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 (- s0) s4)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l17) l18 (- s0) s1)))
(assert (>= 0 (+ (- l18) l19 (- s0) s4)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l24) l3)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l0) l1 s0 (- s1))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ (- l5) l6 (- s1) s5)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l10) l13)))
(assert (>= 0 (+ (- l12) l21)))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 (- s1) s5)))
(assert (>= 0 (+ (- l17) l18 s0 (- s1))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 (- s1) s5)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l27 (- s1) s8)))
(assert (>= 0 (+ (- l24) l3)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ l24 (- l4) s0 (- s2))))
(assert (>= 0 (+ l24 (- l4) s1 (- s3))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l6) l8)))
(assert (>= 0 (+ (- l7) l9)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l10 (- l9) s0 (- s4))))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l16) l17 s0 (- s4))))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l20) l21 s0 (- s4))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l6) l8)))
(assert (>= 0 (+ (- l7) l9)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l10 (- l9) s1 (- s5))))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l16) l17 s1 (- s5))))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l20) l21 s1 (- s5))))
(assert (>= 0 (+ l5 (- s0) s2)))
(assert (>= 0 (+ l5 (- s1) s3)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s8 l27 (- s0) (- l0))))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= l23 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l18 0))
(assert (>= l22 0))
(assert (>= s8 0))
(assert (>= l27 0))
(assert (>= l3 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l24 0))
(assert (>= s4 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= s5 0))
(assert (>= l21 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= s1 0))
(assert (>= l4 0))
(assert (>= s3 0))
(assert (>= l5 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 136 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


