PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/rand_cas_vs_satabs.2/main.spec.pl]

* Constructing petri net N from input file
place(s3, [], []).
place(l88, [], []).
place(l89, [], []).
place(l1, [], [t4,t3]).
place(l2, [], [t6,t5]).
place(l3, [], [t8,t7]).
place(l4, [t5,t1], [t10,t9]).
place(l5, [t7,t3], [t12,t11]).
place(l6, [t6,t2], [t14,t13]).
place(l7, [t8,t4], [t16,t15]).
place(l20, [t25,t21], [t30,t29]).
place(l21, [t27,t23], [t32,t31]).
place(l22, [t26,t22], [t34,t33]).
place(l23, [t28,t24], [t36,t35]).
place(l24, [t31,t29], [t38,t37]).
place(l25, [t32,t30], [t40,t39]).
place(l26, [t35,t33], [t42,t41]).
place(l27, [t36,t34], [t44,t43]).
place(l32, [t53,t45], [t49]).
place(l36, [t49], [t54,t53]).
place(l33, [t55,t46], [t50]).
place(l37, [t50], [t56,t55]).
place(l34, [t57,t47], [t51]).
place(l38, [t51], [t58,t57]).
place(l35, [t59,t48], [t52]).
place(l39, [t52], [t60,t59]).
place(l40, [t54], [t62,t61]).
place(l41, [t56], [t64,t63]).
place(l42, [t58], [t66,t65]).
place(l43, [t60], [t68,t67]).
place(l44, [t63,t61], [t69]).
place(l45, [t64,t62], [t70]).
place(l46, [t67,t65], [t71]).
place(l47, [t68,t66], [t72]).
place(l68, [t73], [t81]).
place(l69, [t75], [t82]).
place(l70, [t77], [t83]).
place(l71, [t79], [t84]).
place(l72, [], [t85]).
place(l73, [t82,t81], [t86]).
place(l74, [], [t87]).
place(l75, [t84,t83], [t88]).
place(l76, [t74], [t89]).
place(l28, [t89,t39,t37], [t45]).
place(l77, [t76], [t90]).
place(l29, [t90,t40,t38], [t46]).
place(l78, [t78], [t91]).
place(l30, [t91,t43,t41], [t47]).
place(l79, [t80], [t92]).
place(l31, [t92,t44,t42], [t48]).
place(l80, [t85], [t94,t93]).
place(l81, [t86], [t95]).
place(l82, [t87], [t97,t96]).
place(l83, [t88], [t98]).
place(l84, [t96,t93], [t99]).
place(l85, [], [t100]).
place(s4, [t100,t99], []).
place(l104, [t100,t99], []).
place(l86, [t97,t94], [t101]).
place(l90, [t101], []).
place(l87, [t98,t95], [t102]).
place(l91, [t102], []).
place(l8, [t103,t11,t9], [t17]).
place(l9, [t104,t12,t10], [t18]).
place(l10, [t105,t15,t13], [t19]).
place(l11, [t106,t16,t14], [t20]).
place(l96, [], [t107]).
place(l100, [t107], []).
place(l97, [], [t108]).
place(l101, [t108], []).
place(l98, [], [t109]).
place(l102, [t109], []).
place(l99, [], [t110]).
place(l103, [t110], []).
place(l92, [t111], [t103]).
place(l93, [t112], [t104]).
place(l94, [t113], [t105]).
place(l95, [t114], [t106]).
place(l48, [t69], [t116,t115]).
place(l49, [t70], [t118,t117]).
place(l50, [t71], [t120,t119]).
place(l51, [t72], [t122,t121]).
place(l52, [t115], [t123]).
place(l53, [t117], [t124]).
place(l54, [t119], [t125]).
place(l55, [t121], [t126]).
place(l56, [t116], [t127]).
place(l57, [t118], [t128]).
place(l58, [t120], [t129]).
place(l59, [t122], [t130]).
place(l60, [t127,t123], [t131]).
place(l64, [t131], [t74,t73]).
place(l61, [t128,t124], [t132]).
place(l65, [t132], [t76,t75]).
place(l62, [t129,t125], [t133]).
place(l66, [t133], [t78,t77]).
place(l63, [t130,t126], [t134]).
place(s2, [t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115,t72,t71,t70,t69], [t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115]).
place(l67, [t134], [t80,t79]).
place(l12, [t135,t17], [t135,t111]).
place(l16, [t135], [t22,t21]).
place(l13, [t136,t18], [t136,t112]).
place(l17, [t136], [t24,t23]).
place(l14, [t137,t19], [t137,t113]).
place(l18, [t137], [t26,t25]).
place(s0, [t134,t133,t132,t131,t114,t113,t112,t111,t110,t109,t108,t107,t106,t105,t104,t103,t102,t101,t98,t97,t96,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1], [t138,t137,t136,t135,t110,t109,t108,t107,t106,t105,t104,t103,t102,t101,t100,t99,t98,t97,t96,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(l15, [t138,t20], [t138,t114]).
place(s1, [t138,t137,t136,t135], [t114,t113,t112,t111]).
place(l19, [t138], [t28,t27]).
place(l0, [init1], [t2,t1]).

transition(t1, [l0,s0], [s0,l4]).
transition(t2, [l0,s0], [s0,l6]).
transition(t3, [l1,s0], [s0,l5]).
transition(t4, [l1,s0], [s0,l7]).
transition(t5, [l2,s0], [s0,l4]).
transition(t6, [l2,s0], [s0,l6]).
transition(t7, [l3,s0], [s0,l5]).
transition(t8, [l3,s0], [s0,l7]).
transition(t9, [l4,s0], [s0,l8]).
transition(t10, [l4,s0], [s0,l9]).
transition(t11, [l5,s0], [s0,l8]).
transition(t12, [l5,s0], [s0,l9]).
transition(t13, [l6,s0], [s0,l10]).
transition(t14, [l6,s0], [s0,l11]).
transition(t15, [l7,s0], [s0,l10]).
transition(t16, [l7,s0], [s0,l11]).
transition(t17, [l8,s0], [s0,l12]).
transition(t18, [l9,s0], [s0,l13]).
transition(t19, [l10,s0], [s0,l14]).
transition(t20, [l11,s0], [s0,l15]).
transition(t21, [l16,s0], [s0,l20]).
transition(t22, [l16,s0], [s0,l22]).
transition(t23, [l17,s0], [s0,l21]).
transition(t24, [l17,s0], [s0,l23]).
transition(t25, [l18,s0], [s0,l20]).
transition(t26, [l18,s0], [s0,l22]).
transition(t27, [l19,s0], [s0,l21]).
transition(t28, [l19,s0], [s0,l23]).
transition(t29, [l20,s0], [s0,l24]).
transition(t30, [l20,s0], [s0,l25]).
transition(t31, [l21,s0], [s0,l24]).
transition(t32, [l21,s0], [s0,l25]).
transition(t33, [l22,s0], [s0,l26]).
transition(t34, [l22,s0], [s0,l27]).
transition(t35, [l23,s0], [s0,l26]).
transition(t36, [l23,s0], [s0,l27]).
transition(t37, [l24,s0], [s0,l28]).
transition(t38, [l24,s0], [s0,l29]).
transition(t39, [l25,s0], [s0,l28]).
transition(t40, [l25,s0], [s0,l29]).
transition(t41, [l26,s0], [s0,l30]).
transition(t42, [l26,s0], [s0,l31]).
transition(t43, [l27,s0], [s0,l30]).
transition(t44, [l27,s0], [s0,l31]).
transition(t45, [l28,s0], [s0,l32]).
transition(t46, [l29,s0], [s0,l33]).
transition(t47, [l30,s0], [s0,l34]).
transition(t48, [l31,s0], [s0,l35]).
transition(t49, [l32,s0], [s0,l36]).
transition(t50, [l33,s0], [s0,l37]).
transition(t51, [l34,s0], [s0,l38]).
transition(t52, [l35,s0], [s0,l39]).
transition(t53, [l36,s0], [s0,l32]).
transition(t54, [l36,s0], [s0,l40]).
transition(t55, [l37,s0], [s0,l33]).
transition(t56, [l37,s0], [s0,l41]).
transition(t57, [l38,s0], [s0,l34]).
transition(t58, [l38,s0], [s0,l42]).
transition(t59, [l39,s0], [s0,l35]).
transition(t60, [l39,s0], [s0,l43]).
transition(t61, [l40,s0], [s0,l44]).
transition(t62, [l40,s0], [s0,l45]).
transition(t63, [l41,s0], [s0,l44]).
transition(t64, [l41,s0], [s0,l45]).
transition(t65, [l42,s0], [s0,l46]).
transition(t66, [l42,s0], [s0,l47]).
transition(t67, [l43,s0], [s0,l46]).
transition(t68, [l43,s0], [s0,l47]).
transition(t69, [l44,s0], [s2,l48]).
transition(t70, [l45,s0], [s2,l49]).
transition(t71, [l46,s0], [s2,l50]).
transition(t72, [l47,s0], [s2,l51]).
transition(t73, [l64,s0], [s0,l68]).
transition(t74, [l64,s0], [s0,l76]).
transition(t75, [l65,s0], [s0,l69]).
transition(t76, [l65,s0], [s0,l77]).
transition(t77, [l66,s0], [s0,l70]).
transition(t78, [l66,s0], [s0,l78]).
transition(t79, [l67,s0], [s0,l71]).
transition(t80, [l67,s0], [s0,l79]).
transition(t81, [l68,s0], [s0,l73]).
transition(t82, [l69,s0], [s0,l73]).
transition(t83, [l70,s0], [s0,l75]).
transition(t84, [l71,s0], [s0,l75]).
transition(t85, [l72,s0], [s0,l80]).
transition(t86, [l73,s0], [s0,l81]).
transition(t87, [l74,s0], [s0,l82]).
transition(t88, [l75,s0], [s0,l83]).
transition(t89, [l76,s0], [s0,l28]).
transition(t90, [l77,s0], [s0,l29]).
transition(t91, [l78,s0], [s0,l30]).
transition(t92, [l79,s0], [s0,l31]).
transition(t93, [l80,s0], [s0,l84]).
transition(t94, [l80,s0], [s0,l86]).
transition(t95, [l81,s0], [s0,l87]).
transition(t96, [l82,s0], [s0,l84]).
transition(t97, [l82,s0], [s0,l86]).
transition(t98, [l83,s0], [s0,l87]).
transition(t99, [l84,s0], [s4,l104]).
transition(t100, [l85,s0], [s4,l104]).
transition(t101, [l86,s0], [s0,l90]).
transition(t102, [l87,s0], [s0,l91]).
transition(t103, [l92,s0], [s0,l8]).
transition(t104, [l93,s0], [s0,l9]).
transition(t105, [l94,s0], [s0,l10]).
transition(t106, [l95,s0], [s0,l11]).
transition(t107, [l96,s0], [s0,l100]).
transition(t108, [l97,s0], [s0,l101]).
transition(t109, [l98,s0], [s0,l102]).
transition(t110, [l99,s0], [s0,l103]).
transition(t111, [l12,s1], [s0,l92]).
transition(t112, [l13,s1], [s0,l93]).
transition(t113, [l14,s1], [s0,l94]).
transition(t114, [l15,s1], [s0,l95]).
transition(t115, [l48,s2], [s2,l52]).
transition(t116, [l48,s2], [s2,l56]).
transition(t117, [l49,s2], [s2,l53]).
transition(t118, [l49,s2], [s2,l57]).
transition(t119, [l50,s2], [s2,l54]).
transition(t120, [l50,s2], [s2,l58]).
transition(t121, [l51,s2], [s2,l55]).
transition(t122, [l51,s2], [s2,l59]).
transition(t123, [l52,s2], [s2,l60]).
transition(t124, [l53,s2], [s2,l61]).
transition(t125, [l54,s2], [s2,l62]).
transition(t126, [l55,s2], [s2,l63]).
transition(t127, [l56,s2], [s2,l60]).
transition(t128, [l57,s2], [s2,l61]).
transition(t129, [l58,s2], [s2,l62]).
transition(t130, [l59,s2], [s2,l63]).
transition(t131, [l60,s2], [s0,l64]).
transition(t132, [l61,s2], [s0,l65]).
transition(t133, [l62,s2], [s0,l66]).
transition(t134, [l63,s2], [s0,l67]).
transition(t135, [l12,s0], [l12,s1,l16]).
transition(t136, [l13,s0], [l13,s1,l17]).
transition(t137, [l14,s0], [l14,s1,l18]).
transition(t138, [l15,s0], [l15,s1,l19]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l4, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s0, 1).
weight(t2, l6, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l5, 1).
weight(l1, t4, 1).
weight(s0, t4, 1).
weight(t4, s0, 1).
weight(t4, l7, 1).
weight(l2, t5, 1).
weight(s0, t5, 1).
weight(t5, s0, 1).
weight(t5, l4, 1).
weight(l2, t6, 1).
weight(s0, t6, 1).
weight(t6, s0, 1).
weight(t6, l6, 1).
weight(l3, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l5, 1).
weight(l3, t8, 1).
weight(s0, t8, 1).
weight(t8, s0, 1).
weight(t8, l7, 1).
weight(l4, t9, 1).
weight(s0, t9, 1).
weight(t9, s0, 1).
weight(t9, l8, 1).
weight(l4, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l9, 1).
weight(l5, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l8, 1).
weight(l5, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l9, 1).
weight(l6, t13, 1).
weight(s0, t13, 1).
weight(t13, s0, 1).
weight(t13, l10, 1).
weight(l6, t14, 1).
weight(s0, t14, 1).
weight(t14, s0, 1).
weight(t14, l11, 1).
weight(l7, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l10, 1).
weight(l7, t16, 1).
weight(s0, t16, 1).
weight(t16, s0, 1).
weight(t16, l11, 1).
weight(l8, t17, 1).
weight(s0, t17, 1).
weight(t17, s0, 1).
weight(t17, l12, 1).
weight(l9, t18, 1).
weight(s0, t18, 1).
weight(t18, s0, 1).
weight(t18, l13, 1).
weight(l10, t19, 1).
weight(s0, t19, 1).
weight(t19, s0, 1).
weight(t19, l14, 1).
weight(l11, t20, 1).
weight(s0, t20, 1).
weight(t20, s0, 1).
weight(t20, l15, 1).
weight(l16, t21, 1).
weight(s0, t21, 1).
weight(t21, s0, 1).
weight(t21, l20, 1).
weight(l16, t22, 1).
weight(s0, t22, 1).
weight(t22, s0, 1).
weight(t22, l22, 1).
weight(l17, t23, 1).
weight(s0, t23, 1).
weight(t23, s0, 1).
weight(t23, l21, 1).
weight(l17, t24, 1).
weight(s0, t24, 1).
weight(t24, s0, 1).
weight(t24, l23, 1).
weight(l18, t25, 1).
weight(s0, t25, 1).
weight(t25, s0, 1).
weight(t25, l20, 1).
weight(l18, t26, 1).
weight(s0, t26, 1).
weight(t26, s0, 1).
weight(t26, l22, 1).
weight(l19, t27, 1).
weight(s0, t27, 1).
weight(t27, s0, 1).
weight(t27, l21, 1).
weight(l19, t28, 1).
weight(s0, t28, 1).
weight(t28, s0, 1).
weight(t28, l23, 1).
weight(l20, t29, 1).
weight(s0, t29, 1).
weight(t29, s0, 1).
weight(t29, l24, 1).
weight(l20, t30, 1).
weight(s0, t30, 1).
weight(t30, s0, 1).
weight(t30, l25, 1).
weight(l21, t31, 1).
weight(s0, t31, 1).
weight(t31, s0, 1).
weight(t31, l24, 1).
weight(l21, t32, 1).
weight(s0, t32, 1).
weight(t32, s0, 1).
weight(t32, l25, 1).
weight(l22, t33, 1).
weight(s0, t33, 1).
weight(t33, s0, 1).
weight(t33, l26, 1).
weight(l22, t34, 1).
weight(s0, t34, 1).
weight(t34, s0, 1).
weight(t34, l27, 1).
weight(l23, t35, 1).
weight(s0, t35, 1).
weight(t35, s0, 1).
weight(t35, l26, 1).
weight(l23, t36, 1).
weight(s0, t36, 1).
weight(t36, s0, 1).
weight(t36, l27, 1).
weight(l24, t37, 1).
weight(s0, t37, 1).
weight(t37, s0, 1).
weight(t37, l28, 1).
weight(l24, t38, 1).
weight(s0, t38, 1).
weight(t38, s0, 1).
weight(t38, l29, 1).
weight(l25, t39, 1).
weight(s0, t39, 1).
weight(t39, s0, 1).
weight(t39, l28, 1).
weight(l25, t40, 1).
weight(s0, t40, 1).
weight(t40, s0, 1).
weight(t40, l29, 1).
weight(l26, t41, 1).
weight(s0, t41, 1).
weight(t41, s0, 1).
weight(t41, l30, 1).
weight(l26, t42, 1).
weight(s0, t42, 1).
weight(t42, s0, 1).
weight(t42, l31, 1).
weight(l27, t43, 1).
weight(s0, t43, 1).
weight(t43, s0, 1).
weight(t43, l30, 1).
weight(l27, t44, 1).
weight(s0, t44, 1).
weight(t44, s0, 1).
weight(t44, l31, 1).
weight(l28, t45, 1).
weight(s0, t45, 1).
weight(t45, s0, 1).
weight(t45, l32, 1).
weight(l29, t46, 1).
weight(s0, t46, 1).
weight(t46, s0, 1).
weight(t46, l33, 1).
weight(l30, t47, 1).
weight(s0, t47, 1).
weight(t47, s0, 1).
weight(t47, l34, 1).
weight(l31, t48, 1).
weight(s0, t48, 1).
weight(t48, s0, 1).
weight(t48, l35, 1).
weight(l32, t49, 1).
weight(s0, t49, 1).
weight(t49, s0, 1).
weight(t49, l36, 1).
weight(l33, t50, 1).
weight(s0, t50, 1).
weight(t50, s0, 1).
weight(t50, l37, 1).
weight(l34, t51, 1).
weight(s0, t51, 1).
weight(t51, s0, 1).
weight(t51, l38, 1).
weight(l35, t52, 1).
weight(s0, t52, 1).
weight(t52, s0, 1).
weight(t52, l39, 1).
weight(l36, t53, 1).
weight(s0, t53, 1).
weight(t53, s0, 1).
weight(t53, l32, 1).
weight(l36, t54, 1).
weight(s0, t54, 1).
weight(t54, s0, 1).
weight(t54, l40, 1).
weight(l37, t55, 1).
weight(s0, t55, 1).
weight(t55, s0, 1).
weight(t55, l33, 1).
weight(l37, t56, 1).
weight(s0, t56, 1).
weight(t56, s0, 1).
weight(t56, l41, 1).
weight(l38, t57, 1).
weight(s0, t57, 1).
weight(t57, s0, 1).
weight(t57, l34, 1).
weight(l38, t58, 1).
weight(s0, t58, 1).
weight(t58, s0, 1).
weight(t58, l42, 1).
weight(l39, t59, 1).
weight(s0, t59, 1).
weight(t59, s0, 1).
weight(t59, l35, 1).
weight(l39, t60, 1).
weight(s0, t60, 1).
weight(t60, s0, 1).
weight(t60, l43, 1).
weight(l40, t61, 1).
weight(s0, t61, 1).
weight(t61, s0, 1).
weight(t61, l44, 1).
weight(l40, t62, 1).
weight(s0, t62, 1).
weight(t62, s0, 1).
weight(t62, l45, 1).
weight(l41, t63, 1).
weight(s0, t63, 1).
weight(t63, s0, 1).
weight(t63, l44, 1).
weight(l41, t64, 1).
weight(s0, t64, 1).
weight(t64, s0, 1).
weight(t64, l45, 1).
weight(l42, t65, 1).
weight(s0, t65, 1).
weight(t65, s0, 1).
weight(t65, l46, 1).
weight(l42, t66, 1).
weight(s0, t66, 1).
weight(t66, s0, 1).
weight(t66, l47, 1).
weight(l43, t67, 1).
weight(s0, t67, 1).
weight(t67, s0, 1).
weight(t67, l46, 1).
weight(l43, t68, 1).
weight(s0, t68, 1).
weight(t68, s0, 1).
weight(t68, l47, 1).
weight(l44, t69, 1).
weight(s0, t69, 1).
weight(t69, s2, 1).
weight(t69, l48, 1).
weight(l45, t70, 1).
weight(s0, t70, 1).
weight(t70, s2, 1).
weight(t70, l49, 1).
weight(l46, t71, 1).
weight(s0, t71, 1).
weight(t71, s2, 1).
weight(t71, l50, 1).
weight(l47, t72, 1).
weight(s0, t72, 1).
weight(t72, s2, 1).
weight(t72, l51, 1).
weight(l64, t73, 1).
weight(s0, t73, 1).
weight(t73, s0, 1).
weight(t73, l68, 1).
weight(l64, t74, 1).
weight(s0, t74, 1).
weight(t74, s0, 1).
weight(t74, l76, 1).
weight(l65, t75, 1).
weight(s0, t75, 1).
weight(t75, s0, 1).
weight(t75, l69, 1).
weight(l65, t76, 1).
weight(s0, t76, 1).
weight(t76, s0, 1).
weight(t76, l77, 1).
weight(l66, t77, 1).
weight(s0, t77, 1).
weight(t77, s0, 1).
weight(t77, l70, 1).
weight(l66, t78, 1).
weight(s0, t78, 1).
weight(t78, s0, 1).
weight(t78, l78, 1).
weight(l67, t79, 1).
weight(s0, t79, 1).
weight(t79, s0, 1).
weight(t79, l71, 1).
weight(l67, t80, 1).
weight(s0, t80, 1).
weight(t80, s0, 1).
weight(t80, l79, 1).
weight(l68, t81, 1).
weight(s0, t81, 1).
weight(t81, s0, 1).
weight(t81, l73, 1).
weight(l69, t82, 1).
weight(s0, t82, 1).
weight(t82, s0, 1).
weight(t82, l73, 1).
weight(l70, t83, 1).
weight(s0, t83, 1).
weight(t83, s0, 1).
weight(t83, l75, 1).
weight(l71, t84, 1).
weight(s0, t84, 1).
weight(t84, s0, 1).
weight(t84, l75, 1).
weight(l72, t85, 1).
weight(s0, t85, 1).
weight(t85, s0, 1).
weight(t85, l80, 1).
weight(l73, t86, 1).
weight(s0, t86, 1).
weight(t86, s0, 1).
weight(t86, l81, 1).
weight(l74, t87, 1).
weight(s0, t87, 1).
weight(t87, s0, 1).
weight(t87, l82, 1).
weight(l75, t88, 1).
weight(s0, t88, 1).
weight(t88, s0, 1).
weight(t88, l83, 1).
weight(l76, t89, 1).
weight(s0, t89, 1).
weight(t89, s0, 1).
weight(t89, l28, 1).
weight(l77, t90, 1).
weight(s0, t90, 1).
weight(t90, s0, 1).
weight(t90, l29, 1).
weight(l78, t91, 1).
weight(s0, t91, 1).
weight(t91, s0, 1).
weight(t91, l30, 1).
weight(l79, t92, 1).
weight(s0, t92, 1).
weight(t92, s0, 1).
weight(t92, l31, 1).
weight(l80, t93, 1).
weight(s0, t93, 1).
weight(t93, s0, 1).
weight(t93, l84, 1).
weight(l80, t94, 1).
weight(s0, t94, 1).
weight(t94, s0, 1).
weight(t94, l86, 1).
weight(l81, t95, 1).
weight(s0, t95, 1).
weight(t95, s0, 1).
weight(t95, l87, 1).
weight(l82, t96, 1).
weight(s0, t96, 1).
weight(t96, s0, 1).
weight(t96, l84, 1).
weight(l82, t97, 1).
weight(s0, t97, 1).
weight(t97, s0, 1).
weight(t97, l86, 1).
weight(l83, t98, 1).
weight(s0, t98, 1).
weight(t98, s0, 1).
weight(t98, l87, 1).
weight(l84, t99, 1).
weight(s0, t99, 1).
weight(t99, s4, 1).
weight(t99, l104, 1).
weight(l85, t100, 1).
weight(s0, t100, 1).
weight(t100, s4, 1).
weight(t100, l104, 1).
weight(l86, t101, 1).
weight(s0, t101, 1).
weight(t101, s0, 1).
weight(t101, l90, 1).
weight(l87, t102, 1).
weight(s0, t102, 1).
weight(t102, s0, 1).
weight(t102, l91, 1).
weight(l92, t103, 1).
weight(s0, t103, 1).
weight(t103, s0, 1).
weight(t103, l8, 1).
weight(l93, t104, 1).
weight(s0, t104, 1).
weight(t104, s0, 1).
weight(t104, l9, 1).
weight(l94, t105, 1).
weight(s0, t105, 1).
weight(t105, s0, 1).
weight(t105, l10, 1).
weight(l95, t106, 1).
weight(s0, t106, 1).
weight(t106, s0, 1).
weight(t106, l11, 1).
weight(l96, t107, 1).
weight(s0, t107, 1).
weight(t107, s0, 1).
weight(t107, l100, 1).
weight(l97, t108, 1).
weight(s0, t108, 1).
weight(t108, s0, 1).
weight(t108, l101, 1).
weight(l98, t109, 1).
weight(s0, t109, 1).
weight(t109, s0, 1).
weight(t109, l102, 1).
weight(l99, t110, 1).
weight(s0, t110, 1).
weight(t110, s0, 1).
weight(t110, l103, 1).
weight(l12, t111, 1).
weight(s1, t111, 1).
weight(t111, s0, 1).
weight(t111, l92, 1).
weight(l13, t112, 1).
weight(s1, t112, 1).
weight(t112, s0, 1).
weight(t112, l93, 1).
weight(l14, t113, 1).
weight(s1, t113, 1).
weight(t113, s0, 1).
weight(t113, l94, 1).
weight(l15, t114, 1).
weight(s1, t114, 1).
weight(t114, s0, 1).
weight(t114, l95, 1).
weight(l48, t115, 1).
weight(s2, t115, 1).
weight(t115, s2, 1).
weight(t115, l52, 1).
weight(l48, t116, 1).
weight(s2, t116, 1).
weight(t116, s2, 1).
weight(t116, l56, 1).
weight(l49, t117, 1).
weight(s2, t117, 1).
weight(t117, s2, 1).
weight(t117, l53, 1).
weight(l49, t118, 1).
weight(s2, t118, 1).
weight(t118, s2, 1).
weight(t118, l57, 1).
weight(l50, t119, 1).
weight(s2, t119, 1).
weight(t119, s2, 1).
weight(t119, l54, 1).
weight(l50, t120, 1).
weight(s2, t120, 1).
weight(t120, s2, 1).
weight(t120, l58, 1).
weight(l51, t121, 1).
weight(s2, t121, 1).
weight(t121, s2, 1).
weight(t121, l55, 1).
weight(l51, t122, 1).
weight(s2, t122, 1).
weight(t122, s2, 1).
weight(t122, l59, 1).
weight(l52, t123, 1).
weight(s2, t123, 1).
weight(t123, s2, 1).
weight(t123, l60, 1).
weight(l53, t124, 1).
weight(s2, t124, 1).
weight(t124, s2, 1).
weight(t124, l61, 1).
weight(l54, t125, 1).
weight(s2, t125, 1).
weight(t125, s2, 1).
weight(t125, l62, 1).
weight(l55, t126, 1).
weight(s2, t126, 1).
weight(t126, s2, 1).
weight(t126, l63, 1).
weight(l56, t127, 1).
weight(s2, t127, 1).
weight(t127, s2, 1).
weight(t127, l60, 1).
weight(l57, t128, 1).
weight(s2, t128, 1).
weight(t128, s2, 1).
weight(t128, l61, 1).
weight(l58, t129, 1).
weight(s2, t129, 1).
weight(t129, s2, 1).
weight(t129, l62, 1).
weight(l59, t130, 1).
weight(s2, t130, 1).
weight(t130, s2, 1).
weight(t130, l63, 1).
weight(l60, t131, 1).
weight(s2, t131, 1).
weight(t131, s0, 1).
weight(t131, l64, 1).
weight(l61, t132, 1).
weight(s2, t132, 1).
weight(t132, s0, 1).
weight(t132, l65, 1).
weight(l62, t133, 1).
weight(s2, t133, 1).
weight(t133, s0, 1).
weight(t133, l66, 1).
weight(l63, t134, 1).
weight(s2, t134, 1).
weight(t134, s0, 1).
weight(t134, l67, 1).
weight(l12, t135, 1).
weight(s0, t135, 1).
weight(t135, l12, 1).
weight(t135, s1, 1).
weight(t135, l16, 1).
weight(l13, t136, 1).
weight(s0, t136, 1).
weight(t136, l13, 1).
weight(t136, s1, 1).
weight(t136, l17, 1).
weight(l14, t137, 1).
weight(s0, t137, 1).
weight(t137, l14, 1).
weight(t137, s1, 1).
weight(t137, l18, 1).
weight(l15, t138, 1).
weight(s0, t138, 1).
weight(t138, l15, 1).
weight(t138, s1, 1).
weight(t138, l19, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s4 1)').
cond('(>= l104 1)').

target(s4, 1).
target(l104, 1).


* Constructing constraints C' for petri net N
(declare-fun s3 () Real)
(declare-fun l88 () Real)
(declare-fun l89 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l27 () Real)
(declare-fun l32 () Real)
(declare-fun l36 () Real)
(declare-fun l33 () Real)
(declare-fun l37 () Real)
(declare-fun l34 () Real)
(declare-fun l38 () Real)
(declare-fun l35 () Real)
(declare-fun l39 () Real)
(declare-fun l40 () Real)
(declare-fun l41 () Real)
(declare-fun l42 () Real)
(declare-fun l43 () Real)
(declare-fun l44 () Real)
(declare-fun l45 () Real)
(declare-fun l46 () Real)
(declare-fun l47 () Real)
(declare-fun l68 () Real)
(declare-fun l69 () Real)
(declare-fun l70 () Real)
(declare-fun l71 () Real)
(declare-fun l72 () Real)
(declare-fun l73 () Real)
(declare-fun l74 () Real)
(declare-fun l75 () Real)
(declare-fun l76 () Real)
(declare-fun l28 () Real)
(declare-fun l77 () Real)
(declare-fun l29 () Real)
(declare-fun l78 () Real)
(declare-fun l30 () Real)
(declare-fun l79 () Real)
(declare-fun l31 () Real)
(declare-fun l80 () Real)
(declare-fun l81 () Real)
(declare-fun l82 () Real)
(declare-fun l83 () Real)
(declare-fun l84 () Real)
(declare-fun l85 () Real)
(declare-fun s4 () Real)
(declare-fun l104 () Real)
(declare-fun l86 () Real)
(declare-fun l90 () Real)
(declare-fun l87 () Real)
(declare-fun l91 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l96 () Real)
(declare-fun l100 () Real)
(declare-fun l97 () Real)
(declare-fun l101 () Real)
(declare-fun l98 () Real)
(declare-fun l102 () Real)
(declare-fun l99 () Real)
(declare-fun l103 () Real)
(declare-fun l92 () Real)
(declare-fun l93 () Real)
(declare-fun l94 () Real)
(declare-fun l95 () Real)
(declare-fun l48 () Real)
(declare-fun l49 () Real)
(declare-fun l50 () Real)
(declare-fun l51 () Real)
(declare-fun l52 () Real)
(declare-fun l53 () Real)
(declare-fun l54 () Real)
(declare-fun l55 () Real)
(declare-fun l56 () Real)
(declare-fun l57 () Real)
(declare-fun l58 () Real)
(declare-fun l59 () Real)
(declare-fun l60 () Real)
(declare-fun l64 () Real)
(declare-fun l61 () Real)
(declare-fun l65 () Real)
(declare-fun l62 () Real)
(declare-fun l66 () Real)
(declare-fun l63 () Real)
(declare-fun s2 () Real)
(declare-fun l67 () Real)
(declare-fun l12 () Real)
(declare-fun l16 () Real)
(declare-fun l13 () Real)
(declare-fun l17 () Real)
(declare-fun l14 () Real)
(declare-fun l18 () Real)
(declare-fun s0 () Real)
(declare-fun l15 () Real)
(declare-fun s1 () Real)
(declare-fun l19 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l4)))
(assert (>= 0 (+ (- l0) l6)))
(assert (>= 0 (+ (- l1) l5)))
(assert (>= 0 (+ (- l1) l7)))
(assert (>= 0 (+ (- l2) l4)))
(assert (>= 0 (+ (- l2) l6)))
(assert (>= 0 (+ (- l3) l5)))
(assert (>= 0 (+ (- l3) l7)))
(assert (>= 0 (+ (- l4) l8)))
(assert (>= 0 (+ (- l4) l9)))
(assert (>= 0 (+ (- l5) l8)))
(assert (>= 0 (+ (- l5) l9)))
(assert (>= 0 (+ l10 (- l6))))
(assert (>= 0 (+ l11 (- l6))))
(assert (>= 0 (+ l10 (- l7))))
(assert (>= 0 (+ l11 (- l7))))
(assert (>= 0 (+ l12 (- l8))))
(assert (>= 0 (+ l13 (- l9))))
(assert (>= 0 (+ (- l10) l14)))
(assert (>= 0 (+ (- l11) l15)))
(assert (>= 0 (+ (- l16) l20)))
(assert (>= 0 (+ (- l16) l22)))
(assert (>= 0 (+ (- l17) l21)))
(assert (>= 0 (+ (- l17) l23)))
(assert (>= 0 (+ (- l18) l20)))
(assert (>= 0 (+ (- l18) l22)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ (- l19) l23)))
(assert (>= 0 (+ (- l20) l24)))
(assert (>= 0 (+ (- l20) l25)))
(assert (>= 0 (+ (- l21) l24)))
(assert (>= 0 (+ (- l21) l25)))
(assert (>= 0 (+ (- l22) l26)))
(assert (>= 0 (+ (- l22) l27)))
(assert (>= 0 (+ (- l23) l26)))
(assert (>= 0 (+ (- l23) l27)))
(assert (>= 0 (+ (- l24) l28)))
(assert (>= 0 (+ (- l24) l29)))
(assert (>= 0 (+ (- l25) l28)))
(assert (>= 0 (+ (- l25) l29)))
(assert (>= 0 (+ (- l26) l30)))
(assert (>= 0 (+ (- l26) l31)))
(assert (>= 0 (+ (- l27) l30)))
(assert (>= 0 (+ (- l27) l31)))
(assert (>= 0 (+ (- l28) l32)))
(assert (>= 0 (+ (- l29) l33)))
(assert (>= 0 (+ (- l30) l34)))
(assert (>= 0 (+ (- l31) l35)))
(assert (>= 0 (+ (- l32) l36)))
(assert (>= 0 (+ (- l33) l37)))
(assert (>= 0 (+ (- l34) l38)))
(assert (>= 0 (+ (- l35) l39)))
(assert (>= 0 (+ l32 (- l36))))
(assert (>= 0 (+ (- l36) l40)))
(assert (>= 0 (+ l33 (- l37))))
(assert (>= 0 (+ (- l37) l41)))
(assert (>= 0 (+ l34 (- l38))))
(assert (>= 0 (+ (- l38) l42)))
(assert (>= 0 (+ l35 (- l39))))
(assert (>= 0 (+ (- l39) l43)))
(assert (>= 0 (+ (- l40) l44)))
(assert (>= 0 (+ (- l40) l45)))
(assert (>= 0 (+ (- l41) l44)))
(assert (>= 0 (+ (- l41) l45)))
(assert (>= 0 (+ (- l42) l46)))
(assert (>= 0 (+ (- l42) l47)))
(assert (>= 0 (+ (- l43) l46)))
(assert (>= 0 (+ (- l43) l47)))
(assert (>= 0 (+ (- l44) l48 (- s0) s2)))
(assert (>= 0 (+ (- l45) l49 (- s0) s2)))
(assert (>= 0 (+ (- l46) l50 (- s0) s2)))
(assert (>= 0 (+ (- l47) l51 (- s0) s2)))
(assert (>= 0 (+ (- l64) l68)))
(assert (>= 0 (+ (- l64) l76)))
(assert (>= 0 (+ (- l65) l69)))
(assert (>= 0 (+ (- l65) l77)))
(assert (>= 0 (+ (- l66) l70)))
(assert (>= 0 (+ (- l66) l78)))
(assert (>= 0 (+ (- l67) l71)))
(assert (>= 0 (+ (- l67) l79)))
(assert (>= 0 (+ (- l68) l73)))
(assert (>= 0 (+ (- l69) l73)))
(assert (>= 0 (+ (- l70) l75)))
(assert (>= 0 (+ (- l71) l75)))
(assert (>= 0 (+ (- l72) l80)))
(assert (>= 0 (+ (- l73) l81)))
(assert (>= 0 (+ (- l74) l82)))
(assert (>= 0 (+ (- l75) l83)))
(assert (>= 0 (+ l28 (- l76))))
(assert (>= 0 (+ l29 (- l77))))
(assert (>= 0 (+ l30 (- l78))))
(assert (>= 0 (+ l31 (- l79))))
(assert (>= 0 (+ (- l80) l84)))
(assert (>= 0 (+ (- l80) l86)))
(assert (>= 0 (+ (- l81) l87)))
(assert (>= 0 (+ (- l82) l84)))
(assert (>= 0 (+ (- l82) l86)))
(assert (>= 0 (+ (- l83) l87)))
(assert (>= 0 (+ l104 (- l84) (- s0) s4)))
(assert (>= 0 (+ l104 (- l85) (- s0) s4)))
(assert (>= 0 (+ (- l86) l90)))
(assert (>= 0 (+ (- l87) l91)))
(assert (>= 0 (+ l8 (- l92))))
(assert (>= 0 (+ l9 (- l93))))
(assert (>= 0 (+ l10 (- l94))))
(assert (>= 0 (+ l11 (- l95))))
(assert (>= 0 (+ l100 (- l96))))
(assert (>= 0 (+ l101 (- l97))))
(assert (>= 0 (+ l102 (- l98))))
(assert (>= 0 (+ l103 (- l99))))
(assert (>= 0 (+ (- l12) l92 s0 (- s1))))
(assert (>= 0 (+ (- l13) l93 s0 (- s1))))
(assert (>= 0 (+ (- l14) l94 s0 (- s1))))
(assert (>= 0 (+ (- l15) l95 s0 (- s1))))
(assert (>= 0 (+ (- l48) l52)))
(assert (>= 0 (+ (- l48) l56)))
(assert (>= 0 (+ (- l49) l53)))
(assert (>= 0 (+ (- l49) l57)))
(assert (>= 0 (+ (- l50) l54)))
(assert (>= 0 (+ (- l50) l58)))
(assert (>= 0 (+ (- l51) l55)))
(assert (>= 0 (+ (- l51) l59)))
(assert (>= 0 (+ (- l52) l60)))
(assert (>= 0 (+ (- l53) l61)))
(assert (>= 0 (+ (- l54) l62)))
(assert (>= 0 (+ (- l55) l63)))
(assert (>= 0 (+ (- l56) l60)))
(assert (>= 0 (+ (- l57) l61)))
(assert (>= 0 (+ (- l58) l62)))
(assert (>= 0 (+ (- l59) l63)))
(assert (>= 0 (+ (- l60) l64 s0 (- s2))))
(assert (>= 0 (+ (- l61) l65 s0 (- s2))))
(assert (>= 0 (+ (- l62) l66 s0 (- s2))))
(assert (>= 0 (+ (- l63) l67 s0 (- s2))))
(assert (>= 0 (+ l16 (- s0) s1)))
(assert (>= 0 (+ l17 (- s0) s1)))
(assert (>= 0 (+ l18 (- s0) s1)))
(assert (>= 0 (+ l19 (- s0) s1)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s4 l104 (- s0) (- l0))))
(assert (>= s3 0))
(assert (>= l88 0))
(assert (>= l89 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l32 0))
(assert (>= l36 0))
(assert (>= l33 0))
(assert (>= l37 0))
(assert (>= l34 0))
(assert (>= l38 0))
(assert (>= l35 0))
(assert (>= l39 0))
(assert (>= l40 0))
(assert (>= l41 0))
(assert (>= l42 0))
(assert (>= l43 0))
(assert (>= l44 0))
(assert (>= l45 0))
(assert (>= l46 0))
(assert (>= l47 0))
(assert (>= l68 0))
(assert (>= l69 0))
(assert (>= l70 0))
(assert (>= l71 0))
(assert (>= l72 0))
(assert (>= l73 0))
(assert (>= l74 0))
(assert (>= l75 0))
(assert (>= l76 0))
(assert (>= l28 0))
(assert (>= l77 0))
(assert (>= l29 0))
(assert (>= l78 0))
(assert (>= l30 0))
(assert (>= l79 0))
(assert (>= l31 0))
(assert (>= l80 0))
(assert (>= l81 0))
(assert (>= l82 0))
(assert (>= l83 0))
(assert (>= l84 0))
(assert (>= l85 0))
(assert (>= s4 0))
(assert (>= l104 0))
(assert (>= l86 0))
(assert (>= l90 0))
(assert (>= l87 0))
(assert (>= l91 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l96 0))
(assert (>= l100 0))
(assert (>= l97 0))
(assert (>= l101 0))
(assert (>= l98 0))
(assert (>= l102 0))
(assert (>= l99 0))
(assert (>= l103 0))
(assert (>= l92 0))
(assert (>= l93 0))
(assert (>= l94 0))
(assert (>= l95 0))
(assert (>= l48 0))
(assert (>= l49 0))
(assert (>= l50 0))
(assert (>= l51 0))
(assert (>= l52 0))
(assert (>= l53 0))
(assert (>= l54 0))
(assert (>= l55 0))
(assert (>= l56 0))
(assert (>= l57 0))
(assert (>= l58 0))
(assert (>= l59 0))
(assert (>= l60 0))
(assert (>= l64 0))
(assert (>= l61 0))
(assert (>= l65 0))
(assert (>= l62 0))
(assert (>= l66 0))
(assert (>= l63 0))
(assert (>= s2 0))
(assert (>= l67 0))
(assert (>= l12 0))
(assert (>= l16 0))
(assert (>= l13 0))
(assert (>= l17 0))
(assert (>= l14 0))
(assert (>= l18 0))
(assert (>= s0 0))
(assert (>= l15 0))
(assert (>= s1 0))
(assert (>= l19 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun l31 () Real
    0.0)
  (define-fun l97 () Real
    0.0)
  (define-fun l68 () Real
    0.0)
  (define-fun l18 () Real
    0.0)
  (define-fun l86 () Real
    0.0)
  (define-fun l9 () Real
    0.0)
  (define-fun l70 () Real
    0.0)
  (define-fun l10 () Real
    0.0)
  (define-fun l58 () Real
    0.0)
  (define-fun l102 () Real
    0.0)
  (define-fun l67 () Real
    0.0)
  (define-fun l49 () Real
    0.0)
  (define-fun l6 () Real
    0.0)
  (define-fun l99 () Real
    0.0)
  (define-fun l83 () Real
    0.0)
  (define-fun s0 () Real
    0.0)
  (define-fun l30 () Real
    0.0)
  (define-fun l50 () Real
    0.0)
  (define-fun l73 () Real
    0.0)
  (define-fun l54 () Real
    0.0)
  (define-fun l21 () Real
    0.0)
  (define-fun l37 () Real
    0.0)
  (define-fun l77 () Real
    0.0)
  (define-fun l80 () Real
    1.0)
  (define-fun l71 () Real
    0.0)
  (define-fun l101 () Real
    0.0)
  (define-fun l62 () Real
    0.0)
  (define-fun l65 () Real
    0.0)
  (define-fun l85 () Real
    1.0)
  (define-fun l5 () Real
    0.0)
  (define-fun l51 () Real
    0.0)
  (define-fun l90 () Real
    0.0)
  (define-fun l103 () Real
    0.0)
  (define-fun l61 () Real
    0.0)
  (define-fun l13 () Real
    0.0)
  (define-fun l22 () Real
    0.0)
  (define-fun l42 () Real
    0.0)
  (define-fun l25 () Real
    0.0)
  (define-fun l87 () Real
    0.0)
  (define-fun l91 () Real
    0.0)
  (define-fun l60 () Real
    0.0)
  (define-fun l53 () Real
    0.0)
  (define-fun l66 () Real
    0.0)
  (define-fun l7 () Real
    0.0)
  (define-fun l38 () Real
    0.0)
  (define-fun l40 () Real
    0.0)
  (define-fun l69 () Real
    0.0)
  (define-fun l92 () Real
    0.0)
  (define-fun l98 () Real
    0.0)
  (define-fun l56 () Real
    0.0)
  (define-fun l104 () Real
    0.0)
  (define-fun l82 () Real
    1.0)
  (define-fun l0 () Real
    0.0)
  (define-fun l33 () Real
    0.0)
  (define-fun l26 () Real
    0.0)
  (define-fun l36 () Real
    0.0)
  (define-fun l84 () Real
    1.0)
  (define-fun l8 () Real
    0.0)
  (define-fun l19 () Real
    0.0)
  (define-fun l81 () Real
    0.0)
  (define-fun s4 () Real
    1.0)
  (define-fun l3 () Real
    0.0)
  (define-fun l32 () Real
    0.0)
  (define-fun l39 () Real
    0.0)
  (define-fun l47 () Real
    0.0)
  (define-fun l35 () Real
    0.0)
  (define-fun l64 () Real
    0.0)
  (define-fun l14 () Real
    0.0)
  (define-fun l45 () Real
    0.0)
  (define-fun l76 () Real
    0.0)
  (define-fun l96 () Real
    0.0)
  (define-fun l63 () Real
    0.0)
  (define-fun s2 () Real
    0.0)
  (define-fun l93 () Real
    0.0)
  (define-fun l29 () Real
    0.0)
  (define-fun l74 () Real
    1.0)
  (define-fun l1 () Real
    0.0)
  (define-fun l75 () Real
    0.0)
  (define-fun l78 () Real
    0.0)
  (define-fun l57 () Real
    0.0)
  (define-fun l52 () Real
    0.0)
  (define-fun l12 () Real
    0.0)
  (define-fun l23 () Real
    0.0)
  (define-fun l34 () Real
    0.0)
  (define-fun l27 () Real
    0.0)
  (define-fun l20 () Real
    0.0)
  (define-fun l4 () Real
    0.0)
  (define-fun l28 () Real
    0.0)
  (define-fun l24 () Real
    0.0)
  (define-fun l41 () Real
    0.0)
  (define-fun l48 () Real
    0.0)
  (define-fun l11 () Real
    0.0)
  (define-fun l79 () Real
    0.0)
  (define-fun l72 () Real
    1.0)
  (define-fun l46 () Real
    0.0)
  (define-fun l43 () Real
    0.0)
  (define-fun l2 () Real
    0.0)
  (define-fun l59 () Real
    0.0)
  (define-fun l15 () Real
    0.0)
  (define-fun l94 () Real
    0.0)
  (define-fun l17 () Real
    0.0)
  (define-fun l95 () Real
    0.0)
  (define-fun l55 () Real
    0.0)
  (define-fun s1 () Real
    0.0)
  (define-fun l16 () Real
    0.0)
  (define-fun l44 () Real
    0.0)
  (define-fun l100 () Real
    0.0)
  (define-fun l89 () Real
    0.0)
  (define-fun l88 () Real
    0.0)
  (define-fun s3 () Real
    0.0)
)
- sat, getting model A' for C'
assignment('l31', 0.0).
assignment('l97', 0.0).
assignment('l68', 0.0).
assignment('l18', 0.0).
assignment('l86', 0.0).
assignment('l9', 0.0).
assignment('l70', 0.0).
assignment('l10', 0.0).
assignment('l58', 0.0).
assignment('l102', 0.0).
assignment('l67', 0.0).
assignment('l49', 0.0).
assignment('l6', 0.0).
assignment('l99', 0.0).
assignment('l83', 0.0).
assignment('s0', 0.0).
assignment('l30', 0.0).
assignment('l50', 0.0).
assignment('l73', 0.0).
assignment('l54', 0.0).
assignment('l21', 0.0).
assignment('l37', 0.0).
assignment('l77', 0.0).
assignment('l80', 1.0).
assignment('l71', 0.0).
assignment('l101', 0.0).
assignment('l62', 0.0).
assignment('l65', 0.0).
assignment('l85', 1.0).
assignment('l5', 0.0).
assignment('l51', 0.0).
assignment('l90', 0.0).
assignment('l103', 0.0).
assignment('l61', 0.0).
assignment('l13', 0.0).
assignment('l22', 0.0).
assignment('l42', 0.0).
assignment('l25', 0.0).
assignment('l87', 0.0).
assignment('l91', 0.0).
assignment('l60', 0.0).
assignment('l53', 0.0).
assignment('l66', 0.0).
assignment('l7', 0.0).
assignment('l38', 0.0).
assignment('l40', 0.0).
assignment('l69', 0.0).
assignment('l92', 0.0).
assignment('l98', 0.0).
assignment('l56', 0.0).
assignment('l104', 0.0).
assignment('l82', 1.0).
assignment('l0', 0.0).
assignment('l33', 0.0).
assignment('l26', 0.0).
assignment('l36', 0.0).
assignment('l84', 1.0).
assignment('l8', 0.0).
assignment('l19', 0.0).
assignment('l81', 0.0).
assignment('s4', 1.0).
assignment('l3', 0.0).
assignment('l32', 0.0).
assignment('l39', 0.0).
assignment('l47', 0.0).
assignment('l35', 0.0).
assignment('l64', 0.0).
assignment('l14', 0.0).
assignment('l45', 0.0).
assignment('l76', 0.0).
assignment('l96', 0.0).
assignment('l63', 0.0).
assignment('s2', 0.0).
assignment('l93', 0.0).
assignment('l29', 0.0).
assignment('l74', 1.0).
assignment('l1', 0.0).
assignment('l75', 0.0).
assignment('l78', 0.0).
assignment('l57', 0.0).
assignment('l52', 0.0).
assignment('l12', 0.0).
assignment('l23', 0.0).
assignment('l34', 0.0).
assignment('l27', 0.0).
assignment('l20', 0.0).
assignment('l4', 0.0).
assignment('l28', 0.0).
assignment('l24', 0.0).
assignment('l41', 0.0).
assignment('l48', 0.0).
assignment('l11', 0.0).
assignment('l79', 0.0).
assignment('l72', 1.0).
assignment('l46', 0.0).
assignment('l43', 0.0).
assignment('l2', 0.0).
assignment('l59', 0.0).
assignment('l15', 0.0).
assignment('l94', 0.0).
assignment('l17', 0.0).
assignment('l95', 0.0).
assignment('l55', 0.0).
assignment('s1', 0.0).
assignment('l16', 0.0).
assignment('l44', 0.0).
assignment('l100', 0.0).
assignment('l89', 0.0).
assignment('l88', 0.0).
assignment('s3', 0.0).
- constructing invariant I for petri net N and model A'
(assert (>= 0.0 (+ l72 l74 l80 l82 l84 l85 s4)))

* Invariant I for the petri net:
(assert (>= 0.0 (+ l72 l74 l80 l82 l84 l85 s4)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


