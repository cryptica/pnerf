PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/lu-fig2_fixed_vs_satabs.2/main.spec.pl]

* Constructing petri net N from input file
place(s12, [], []).
place(s13, [], []).
place(s14, [], []).
place(s15, [], []).
place(l1, [t68,t67,t46,t45,t24,t23,t2,t1], [t70,t69,t48,t47,t26,t25,t4,t3]).
place(l2, [t70,t69,t48,t47,t26,t25,t4,t3], [t71,t49,t27,t5]).
place(l3, [t71,t49,t27,t5], [t72,t50,t28,t6]).
place(l20, [t76,t54,t32,t10], [t78,t56,t34,t12]).
place(l21, [t77,t55,t33,t11], [t79,t57,t35,t13]).
place(l22, [t79,t57,t35,t13], [t80,t58,t36,t14]).
place(l23, [t80,t78,t58,t56,t36,t34,t14,t12], [t81,t59,t37,t15]).
place(l24, [t81,t59,t37,t15], []).
place(l27, [t83,t61,t39,t17], [t85,t63,t41,t19]).
place(l26, [t85,t82,t63,t60,t41,t38,t19,t16], [t84,t83,t62,t61,t40,t39,t18,t17]).
place(l28, [t84,t62,t40,t18], [t86,t64,t42,t20]).
place(l25, [t92,t91,t90,t89], [t82,t60,t38,t16]).
place(l16, [t75,t53,t31,t9], [t146,t101]).
place(l33, [t87,t65,t43,t21], [t151,t106]).
place(s8, [t156,t142,t128,t117,t113,t111,t110,t109,t106,t104,t101,t98,t96,t95,t93,t22,t21,t20,t9,t8,t7], [t115,t114,t113,t112,t111,t110,t109,t108,t107,t106,t105,t104,t103,t102,t101,t100,t99,t98,t97,t96,t95,t94,t93]).
place(l6, [t73,t51,t29,t7], [t160,t116]).
place(l7, [t160,t116], [t161,t139,t117,t93]).
place(l8, [t161,t139,t117,t93], [t162,t140,t118,t94]).
place(l9, [t162,t140,t118,t94], [t74,t52,t30,t8]).
place(l10, [t74,t52,t30,t8], [t163,t141,t119,t95]).
place(l11, [t163,t141], [t164,t142,t121,t120,t97,t96]).
place(l12, [t164,t142,t121,t120,t97,t96], [t165,t143,t122,t98]).
place(l13, [t119,t95], [t166,t144,t123,t99]).
place(l14, [t165,t143,t122,t98], [t167,t145,t124,t100]).
place(l15, [t167,t145,t124,t100], [t75,t53,t31,t9]).
place(l17, [t146,t101], [t168,t147,t125,t102]).
place(l18, [t168,t147,t125,t102], [t169,t148,t126,t103]).
place(l19, [t169,t148,t126,t103], [t77,t76,t55,t54,t33,t32,t11,t10]).
place(l29, [t86,t64,t42,t20], [t170,t127]).
place(l30, [t170,t127], [t171,t149,t128,t104]).
place(s10, [t171,t161,t157,t155,t154,t151,t149,t146,t143,t141,t139,t112,t97,t66,t65,t64,t53,t52,t51], [t159,t158,t157,t156,t155,t154,t153,t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139]).
place(l31, [t171,t149,t128,t104], [t172,t150,t129,t105]).
place(l32, [t172,t150,t129,t105], [t87,t65,t43,t21]).
place(l34, [t151,t106], [t173,t152,t130,t107]).
place(l35, [t173,t152,t130,t107], [t174,t153,t131,t108]).
place(l36, [t174,t153,t131,t108], [t88,t66,t44,t22]).
place(l37, [t88,t66,t44,t22], [t176,t175,t155,t154,t133,t132,t110,t109]).
place(l38, [t175,t154,t132,t109], [t177,t156,t135,t134,t112,t111]).
place(s9, [t177,t164,t136,t134,t133,t132,t130,t127,t125,t122,t120,t119,t116,t107,t102,t44,t43,t42,t31,t30,t29], [t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116]).
place(l39, [t177,t156,t135,t134,t112,t111], [t178,t157,t136,t113]).
place(l40, [t176,t155,t133,t110], [t179,t158,t137,t114]).
place(s16, [t179,t166,t158,t144,t137,t123,t114,t99], []).
place(l43, [t179,t166,t158,t144,t137,t123,t114,t99], []).
place(l41, [t178,t157,t136,t113], [t180,t159,t138,t115]).
place(s11, [t178,t176,t175,t173,t170,t168,t165,t163,t160,t152,t147,t135,t121,t88,t87,t86,t75,t74,t73], [t180,t179,t178,t177,t176,t175,t174,t173,t172,t171,t170,t169,t168,t167,t166,t165,t164,t163,t162,t161,t160]).
place(l42, [t180,t159,t138,t115], []).
place(s0, [t115,t108,t105,t103,t100,t94,t89,t45,t25,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t3,t1], [t181,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s4, [t181], [t89]).
place(s1, [t138,t131,t129,t126,t124,t118,t90,t67,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t27,t26,t23,t5,t4], [t182,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23]).
place(s5, [t182], [t90]).
place(s2, [t159,t153,t150,t148,t145,t140,t91,t69,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t50,t47,t46,t6,t2], [t183,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45]).
place(s6, [t183], [t91]).
place(s3, [t180,t174,t172,t169,t167,t162,t92,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t72,t71,t70,t68,t49,t48,t28,t24], [t184,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67]).
place(l4, [t184,t183,t182,t181,t72,t50,t28,t6], [t184,t183,t182,t181,t92,t91,t90,t89]).
place(s7, [t184], [t92]).
place(l5, [t184,t183,t182,t181], [t73,t51,t29,t7]).
place(l0, [init1], [t68,t67,t46,t45,t24,t23,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s2,l1]).
transition(t3, [l1,s0], [s0,l2]).
transition(t4, [l1,s0], [s1,l2]).
transition(t5, [l2,s0], [s1,l3]).
transition(t6, [l3,s0], [s2,l4]).
transition(t7, [l5,s0], [s8,l6]).
transition(t8, [l9,s0], [s8,l10]).
transition(t9, [l15,s0], [s8,l16]).
transition(t10, [l19,s0], [s0,l20]).
transition(t11, [l19,s0], [s0,l21]).
transition(t12, [l20,s0], [s0,l23]).
transition(t13, [l21,s0], [s0,l22]).
transition(t14, [l22,s0], [s0,l23]).
transition(t15, [l23,s0], [s0,l24]).
transition(t16, [l25,s0], [s0,l26]).
transition(t17, [l26,s0], [s0,l27]).
transition(t18, [l26,s0], [s0,l28]).
transition(t19, [l27,s0], [s0,l26]).
transition(t20, [l28,s0], [s8,l29]).
transition(t21, [l32,s0], [s8,l33]).
transition(t22, [l36,s0], [s8,l37]).
transition(t23, [l0,s1], [s1,l1]).
transition(t24, [l0,s1], [s3,l1]).
transition(t25, [l1,s1], [s0,l2]).
transition(t26, [l1,s1], [s1,l2]).
transition(t27, [l2,s1], [s1,l3]).
transition(t28, [l3,s1], [s3,l4]).
transition(t29, [l5,s1], [s9,l6]).
transition(t30, [l9,s1], [s9,l10]).
transition(t31, [l15,s1], [s9,l16]).
transition(t32, [l19,s1], [s1,l20]).
transition(t33, [l19,s1], [s1,l21]).
transition(t34, [l20,s1], [s1,l23]).
transition(t35, [l21,s1], [s1,l22]).
transition(t36, [l22,s1], [s1,l23]).
transition(t37, [l23,s1], [s1,l24]).
transition(t38, [l25,s1], [s1,l26]).
transition(t39, [l26,s1], [s1,l27]).
transition(t40, [l26,s1], [s1,l28]).
transition(t41, [l27,s1], [s1,l26]).
transition(t42, [l28,s1], [s9,l29]).
transition(t43, [l32,s1], [s9,l33]).
transition(t44, [l36,s1], [s9,l37]).
transition(t45, [l0,s2], [s0,l1]).
transition(t46, [l0,s2], [s2,l1]).
transition(t47, [l1,s2], [s2,l2]).
transition(t48, [l1,s2], [s3,l2]).
transition(t49, [l2,s2], [s3,l3]).
transition(t50, [l3,s2], [s2,l4]).
transition(t51, [l5,s2], [s10,l6]).
transition(t52, [l9,s2], [s10,l10]).
transition(t53, [l15,s2], [s10,l16]).
transition(t54, [l19,s2], [s2,l20]).
transition(t55, [l19,s2], [s2,l21]).
transition(t56, [l20,s2], [s2,l23]).
transition(t57, [l21,s2], [s2,l22]).
transition(t58, [l22,s2], [s2,l23]).
transition(t59, [l23,s2], [s2,l24]).
transition(t60, [l25,s2], [s2,l26]).
transition(t61, [l26,s2], [s2,l27]).
transition(t62, [l26,s2], [s2,l28]).
transition(t63, [l27,s2], [s2,l26]).
transition(t64, [l28,s2], [s10,l29]).
transition(t65, [l32,s2], [s10,l33]).
transition(t66, [l36,s2], [s10,l37]).
transition(t67, [l0,s3], [s1,l1]).
transition(t68, [l0,s3], [s3,l1]).
transition(t69, [l1,s3], [s2,l2]).
transition(t70, [l1,s3], [s3,l2]).
transition(t71, [l2,s3], [s3,l3]).
transition(t72, [l3,s3], [s3,l4]).
transition(t73, [l5,s3], [s11,l6]).
transition(t74, [l9,s3], [s11,l10]).
transition(t75, [l15,s3], [s11,l16]).
transition(t76, [l19,s3], [s3,l20]).
transition(t77, [l19,s3], [s3,l21]).
transition(t78, [l20,s3], [s3,l23]).
transition(t79, [l21,s3], [s3,l22]).
transition(t80, [l22,s3], [s3,l23]).
transition(t81, [l23,s3], [s3,l24]).
transition(t82, [l25,s3], [s3,l26]).
transition(t83, [l26,s3], [s3,l27]).
transition(t84, [l26,s3], [s3,l28]).
transition(t85, [l27,s3], [s3,l26]).
transition(t86, [l28,s3], [s11,l29]).
transition(t87, [l32,s3], [s11,l33]).
transition(t88, [l36,s3], [s11,l37]).
transition(t89, [l4,s4], [s0,l25]).
transition(t90, [l4,s5], [s1,l25]).
transition(t91, [l4,s6], [s2,l25]).
transition(t92, [l4,s7], [s3,l25]).
transition(t93, [l7,s8], [s8,l8]).
transition(t94, [l8,s8], [s0,l9]).
transition(t95, [l10,s8], [s8,l13]).
transition(t96, [l11,s8], [s8,l12]).
transition(t97, [l11,s8], [s10,l12]).
transition(t98, [l12,s8], [s8,l14]).
transition(t99, [l13,s8], [s16,l43]).
transition(t100, [l14,s8], [s0,l15]).
transition(t101, [l16,s8], [s8,l17]).
transition(t102, [l17,s8], [s9,l18]).
transition(t103, [l18,s8], [s0,l19]).
transition(t104, [l30,s8], [s8,l31]).
transition(t105, [l31,s8], [s0,l32]).
transition(t106, [l33,s8], [s8,l34]).
transition(t107, [l34,s8], [s9,l35]).
transition(t108, [l35,s8], [s0,l36]).
transition(t109, [l37,s8], [s8,l38]).
transition(t110, [l37,s8], [s8,l40]).
transition(t111, [l38,s8], [s8,l39]).
transition(t112, [l38,s8], [s10,l39]).
transition(t113, [l39,s8], [s8,l41]).
transition(t114, [l40,s8], [s16,l43]).
transition(t115, [l41,s8], [s0,l42]).
transition(t116, [l6,s9], [s9,l7]).
transition(t117, [l7,s9], [s8,l8]).
transition(t118, [l8,s9], [s1,l9]).
transition(t119, [l10,s9], [s9,l13]).
transition(t120, [l11,s9], [s9,l12]).
transition(t121, [l11,s9], [s11,l12]).
transition(t122, [l12,s9], [s9,l14]).
transition(t123, [l13,s9], [s16,l43]).
transition(t124, [l14,s9], [s1,l15]).
transition(t125, [l17,s9], [s9,l18]).
transition(t126, [l18,s9], [s1,l19]).
transition(t127, [l29,s9], [s9,l30]).
transition(t128, [l30,s9], [s8,l31]).
transition(t129, [l31,s9], [s1,l32]).
transition(t130, [l34,s9], [s9,l35]).
transition(t131, [l35,s9], [s1,l36]).
transition(t132, [l37,s9], [s9,l38]).
transition(t133, [l37,s9], [s9,l40]).
transition(t134, [l38,s9], [s9,l39]).
transition(t135, [l38,s9], [s11,l39]).
transition(t136, [l39,s9], [s9,l41]).
transition(t137, [l40,s9], [s16,l43]).
transition(t138, [l41,s9], [s1,l42]).
transition(t139, [l7,s10], [s10,l8]).
transition(t140, [l8,s10], [s2,l9]).
transition(t141, [l10,s10], [s10,l11]).
transition(t142, [l11,s10], [s8,l12]).
transition(t143, [l12,s10], [s10,l14]).
transition(t144, [l13,s10], [s16,l43]).
transition(t145, [l14,s10], [s2,l15]).
transition(t146, [l16,s10], [s10,l17]).
transition(t147, [l17,s10], [s11,l18]).
transition(t148, [l18,s10], [s2,l19]).
transition(t149, [l30,s10], [s10,l31]).
transition(t150, [l31,s10], [s2,l32]).
transition(t151, [l33,s10], [s10,l34]).
transition(t152, [l34,s10], [s11,l35]).
transition(t153, [l35,s10], [s2,l36]).
transition(t154, [l37,s10], [s10,l38]).
transition(t155, [l37,s10], [s10,l40]).
transition(t156, [l38,s10], [s8,l39]).
transition(t157, [l39,s10], [s10,l41]).
transition(t158, [l40,s10], [s16,l43]).
transition(t159, [l41,s10], [s2,l42]).
transition(t160, [l6,s11], [s11,l7]).
transition(t161, [l7,s11], [s10,l8]).
transition(t162, [l8,s11], [s3,l9]).
transition(t163, [l10,s11], [s11,l11]).
transition(t164, [l11,s11], [s9,l12]).
transition(t165, [l12,s11], [s11,l14]).
transition(t166, [l13,s11], [s16,l43]).
transition(t167, [l14,s11], [s3,l15]).
transition(t168, [l17,s11], [s11,l18]).
transition(t169, [l18,s11], [s3,l19]).
transition(t170, [l29,s11], [s11,l30]).
transition(t171, [l30,s11], [s10,l31]).
transition(t172, [l31,s11], [s3,l32]).
transition(t173, [l34,s11], [s11,l35]).
transition(t174, [l35,s11], [s3,l36]).
transition(t175, [l37,s11], [s11,l38]).
transition(t176, [l37,s11], [s11,l40]).
transition(t177, [l38,s11], [s9,l39]).
transition(t178, [l39,s11], [s11,l41]).
transition(t179, [l40,s11], [s16,l43]).
transition(t180, [l41,s11], [s3,l42]).
transition(t181, [l4,s0], [l4,s4,l5]).
transition(t182, [l4,s1], [l4,s5,l5]).
transition(t183, [l4,s2], [l4,s6,l5]).
transition(t184, [l4,s3], [l4,s7,l5]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s2, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l2, 1).
weight(l1, t4, 1).
weight(s0, t4, 1).
weight(t4, s1, 1).
weight(t4, l2, 1).
weight(l2, t5, 1).
weight(s0, t5, 1).
weight(t5, s1, 1).
weight(t5, l3, 1).
weight(l3, t6, 1).
weight(s0, t6, 1).
weight(t6, s2, 1).
weight(t6, l4, 1).
weight(l5, t7, 1).
weight(s0, t7, 1).
weight(t7, s8, 1).
weight(t7, l6, 1).
weight(l9, t8, 1).
weight(s0, t8, 1).
weight(t8, s8, 1).
weight(t8, l10, 1).
weight(l15, t9, 1).
weight(s0, t9, 1).
weight(t9, s8, 1).
weight(t9, l16, 1).
weight(l19, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l20, 1).
weight(l19, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l21, 1).
weight(l20, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l23, 1).
weight(l21, t13, 1).
weight(s0, t13, 1).
weight(t13, s0, 1).
weight(t13, l22, 1).
weight(l22, t14, 1).
weight(s0, t14, 1).
weight(t14, s0, 1).
weight(t14, l23, 1).
weight(l23, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l24, 1).
weight(l25, t16, 1).
weight(s0, t16, 1).
weight(t16, s0, 1).
weight(t16, l26, 1).
weight(l26, t17, 1).
weight(s0, t17, 1).
weight(t17, s0, 1).
weight(t17, l27, 1).
weight(l26, t18, 1).
weight(s0, t18, 1).
weight(t18, s0, 1).
weight(t18, l28, 1).
weight(l27, t19, 1).
weight(s0, t19, 1).
weight(t19, s0, 1).
weight(t19, l26, 1).
weight(l28, t20, 1).
weight(s0, t20, 1).
weight(t20, s8, 1).
weight(t20, l29, 1).
weight(l32, t21, 1).
weight(s0, t21, 1).
weight(t21, s8, 1).
weight(t21, l33, 1).
weight(l36, t22, 1).
weight(s0, t22, 1).
weight(t22, s8, 1).
weight(t22, l37, 1).
weight(l0, t23, 1).
weight(s1, t23, 1).
weight(t23, s1, 1).
weight(t23, l1, 1).
weight(l0, t24, 1).
weight(s1, t24, 1).
weight(t24, s3, 1).
weight(t24, l1, 1).
weight(l1, t25, 1).
weight(s1, t25, 1).
weight(t25, s0, 1).
weight(t25, l2, 1).
weight(l1, t26, 1).
weight(s1, t26, 1).
weight(t26, s1, 1).
weight(t26, l2, 1).
weight(l2, t27, 1).
weight(s1, t27, 1).
weight(t27, s1, 1).
weight(t27, l3, 1).
weight(l3, t28, 1).
weight(s1, t28, 1).
weight(t28, s3, 1).
weight(t28, l4, 1).
weight(l5, t29, 1).
weight(s1, t29, 1).
weight(t29, s9, 1).
weight(t29, l6, 1).
weight(l9, t30, 1).
weight(s1, t30, 1).
weight(t30, s9, 1).
weight(t30, l10, 1).
weight(l15, t31, 1).
weight(s1, t31, 1).
weight(t31, s9, 1).
weight(t31, l16, 1).
weight(l19, t32, 1).
weight(s1, t32, 1).
weight(t32, s1, 1).
weight(t32, l20, 1).
weight(l19, t33, 1).
weight(s1, t33, 1).
weight(t33, s1, 1).
weight(t33, l21, 1).
weight(l20, t34, 1).
weight(s1, t34, 1).
weight(t34, s1, 1).
weight(t34, l23, 1).
weight(l21, t35, 1).
weight(s1, t35, 1).
weight(t35, s1, 1).
weight(t35, l22, 1).
weight(l22, t36, 1).
weight(s1, t36, 1).
weight(t36, s1, 1).
weight(t36, l23, 1).
weight(l23, t37, 1).
weight(s1, t37, 1).
weight(t37, s1, 1).
weight(t37, l24, 1).
weight(l25, t38, 1).
weight(s1, t38, 1).
weight(t38, s1, 1).
weight(t38, l26, 1).
weight(l26, t39, 1).
weight(s1, t39, 1).
weight(t39, s1, 1).
weight(t39, l27, 1).
weight(l26, t40, 1).
weight(s1, t40, 1).
weight(t40, s1, 1).
weight(t40, l28, 1).
weight(l27, t41, 1).
weight(s1, t41, 1).
weight(t41, s1, 1).
weight(t41, l26, 1).
weight(l28, t42, 1).
weight(s1, t42, 1).
weight(t42, s9, 1).
weight(t42, l29, 1).
weight(l32, t43, 1).
weight(s1, t43, 1).
weight(t43, s9, 1).
weight(t43, l33, 1).
weight(l36, t44, 1).
weight(s1, t44, 1).
weight(t44, s9, 1).
weight(t44, l37, 1).
weight(l0, t45, 1).
weight(s2, t45, 1).
weight(t45, s0, 1).
weight(t45, l1, 1).
weight(l0, t46, 1).
weight(s2, t46, 1).
weight(t46, s2, 1).
weight(t46, l1, 1).
weight(l1, t47, 1).
weight(s2, t47, 1).
weight(t47, s2, 1).
weight(t47, l2, 1).
weight(l1, t48, 1).
weight(s2, t48, 1).
weight(t48, s3, 1).
weight(t48, l2, 1).
weight(l2, t49, 1).
weight(s2, t49, 1).
weight(t49, s3, 1).
weight(t49, l3, 1).
weight(l3, t50, 1).
weight(s2, t50, 1).
weight(t50, s2, 1).
weight(t50, l4, 1).
weight(l5, t51, 1).
weight(s2, t51, 1).
weight(t51, s10, 1).
weight(t51, l6, 1).
weight(l9, t52, 1).
weight(s2, t52, 1).
weight(t52, s10, 1).
weight(t52, l10, 1).
weight(l15, t53, 1).
weight(s2, t53, 1).
weight(t53, s10, 1).
weight(t53, l16, 1).
weight(l19, t54, 1).
weight(s2, t54, 1).
weight(t54, s2, 1).
weight(t54, l20, 1).
weight(l19, t55, 1).
weight(s2, t55, 1).
weight(t55, s2, 1).
weight(t55, l21, 1).
weight(l20, t56, 1).
weight(s2, t56, 1).
weight(t56, s2, 1).
weight(t56, l23, 1).
weight(l21, t57, 1).
weight(s2, t57, 1).
weight(t57, s2, 1).
weight(t57, l22, 1).
weight(l22, t58, 1).
weight(s2, t58, 1).
weight(t58, s2, 1).
weight(t58, l23, 1).
weight(l23, t59, 1).
weight(s2, t59, 1).
weight(t59, s2, 1).
weight(t59, l24, 1).
weight(l25, t60, 1).
weight(s2, t60, 1).
weight(t60, s2, 1).
weight(t60, l26, 1).
weight(l26, t61, 1).
weight(s2, t61, 1).
weight(t61, s2, 1).
weight(t61, l27, 1).
weight(l26, t62, 1).
weight(s2, t62, 1).
weight(t62, s2, 1).
weight(t62, l28, 1).
weight(l27, t63, 1).
weight(s2, t63, 1).
weight(t63, s2, 1).
weight(t63, l26, 1).
weight(l28, t64, 1).
weight(s2, t64, 1).
weight(t64, s10, 1).
weight(t64, l29, 1).
weight(l32, t65, 1).
weight(s2, t65, 1).
weight(t65, s10, 1).
weight(t65, l33, 1).
weight(l36, t66, 1).
weight(s2, t66, 1).
weight(t66, s10, 1).
weight(t66, l37, 1).
weight(l0, t67, 1).
weight(s3, t67, 1).
weight(t67, s1, 1).
weight(t67, l1, 1).
weight(l0, t68, 1).
weight(s3, t68, 1).
weight(t68, s3, 1).
weight(t68, l1, 1).
weight(l1, t69, 1).
weight(s3, t69, 1).
weight(t69, s2, 1).
weight(t69, l2, 1).
weight(l1, t70, 1).
weight(s3, t70, 1).
weight(t70, s3, 1).
weight(t70, l2, 1).
weight(l2, t71, 1).
weight(s3, t71, 1).
weight(t71, s3, 1).
weight(t71, l3, 1).
weight(l3, t72, 1).
weight(s3, t72, 1).
weight(t72, s3, 1).
weight(t72, l4, 1).
weight(l5, t73, 1).
weight(s3, t73, 1).
weight(t73, s11, 1).
weight(t73, l6, 1).
weight(l9, t74, 1).
weight(s3, t74, 1).
weight(t74, s11, 1).
weight(t74, l10, 1).
weight(l15, t75, 1).
weight(s3, t75, 1).
weight(t75, s11, 1).
weight(t75, l16, 1).
weight(l19, t76, 1).
weight(s3, t76, 1).
weight(t76, s3, 1).
weight(t76, l20, 1).
weight(l19, t77, 1).
weight(s3, t77, 1).
weight(t77, s3, 1).
weight(t77, l21, 1).
weight(l20, t78, 1).
weight(s3, t78, 1).
weight(t78, s3, 1).
weight(t78, l23, 1).
weight(l21, t79, 1).
weight(s3, t79, 1).
weight(t79, s3, 1).
weight(t79, l22, 1).
weight(l22, t80, 1).
weight(s3, t80, 1).
weight(t80, s3, 1).
weight(t80, l23, 1).
weight(l23, t81, 1).
weight(s3, t81, 1).
weight(t81, s3, 1).
weight(t81, l24, 1).
weight(l25, t82, 1).
weight(s3, t82, 1).
weight(t82, s3, 1).
weight(t82, l26, 1).
weight(l26, t83, 1).
weight(s3, t83, 1).
weight(t83, s3, 1).
weight(t83, l27, 1).
weight(l26, t84, 1).
weight(s3, t84, 1).
weight(t84, s3, 1).
weight(t84, l28, 1).
weight(l27, t85, 1).
weight(s3, t85, 1).
weight(t85, s3, 1).
weight(t85, l26, 1).
weight(l28, t86, 1).
weight(s3, t86, 1).
weight(t86, s11, 1).
weight(t86, l29, 1).
weight(l32, t87, 1).
weight(s3, t87, 1).
weight(t87, s11, 1).
weight(t87, l33, 1).
weight(l36, t88, 1).
weight(s3, t88, 1).
weight(t88, s11, 1).
weight(t88, l37, 1).
weight(l4, t89, 1).
weight(s4, t89, 1).
weight(t89, s0, 1).
weight(t89, l25, 1).
weight(l4, t90, 1).
weight(s5, t90, 1).
weight(t90, s1, 1).
weight(t90, l25, 1).
weight(l4, t91, 1).
weight(s6, t91, 1).
weight(t91, s2, 1).
weight(t91, l25, 1).
weight(l4, t92, 1).
weight(s7, t92, 1).
weight(t92, s3, 1).
weight(t92, l25, 1).
weight(l7, t93, 1).
weight(s8, t93, 1).
weight(t93, s8, 1).
weight(t93, l8, 1).
weight(l8, t94, 1).
weight(s8, t94, 1).
weight(t94, s0, 1).
weight(t94, l9, 1).
weight(l10, t95, 1).
weight(s8, t95, 1).
weight(t95, s8, 1).
weight(t95, l13, 1).
weight(l11, t96, 1).
weight(s8, t96, 1).
weight(t96, s8, 1).
weight(t96, l12, 1).
weight(l11, t97, 1).
weight(s8, t97, 1).
weight(t97, s10, 1).
weight(t97, l12, 1).
weight(l12, t98, 1).
weight(s8, t98, 1).
weight(t98, s8, 1).
weight(t98, l14, 1).
weight(l13, t99, 1).
weight(s8, t99, 1).
weight(t99, s16, 1).
weight(t99, l43, 1).
weight(l14, t100, 1).
weight(s8, t100, 1).
weight(t100, s0, 1).
weight(t100, l15, 1).
weight(l16, t101, 1).
weight(s8, t101, 1).
weight(t101, s8, 1).
weight(t101, l17, 1).
weight(l17, t102, 1).
weight(s8, t102, 1).
weight(t102, s9, 1).
weight(t102, l18, 1).
weight(l18, t103, 1).
weight(s8, t103, 1).
weight(t103, s0, 1).
weight(t103, l19, 1).
weight(l30, t104, 1).
weight(s8, t104, 1).
weight(t104, s8, 1).
weight(t104, l31, 1).
weight(l31, t105, 1).
weight(s8, t105, 1).
weight(t105, s0, 1).
weight(t105, l32, 1).
weight(l33, t106, 1).
weight(s8, t106, 1).
weight(t106, s8, 1).
weight(t106, l34, 1).
weight(l34, t107, 1).
weight(s8, t107, 1).
weight(t107, s9, 1).
weight(t107, l35, 1).
weight(l35, t108, 1).
weight(s8, t108, 1).
weight(t108, s0, 1).
weight(t108, l36, 1).
weight(l37, t109, 1).
weight(s8, t109, 1).
weight(t109, s8, 1).
weight(t109, l38, 1).
weight(l37, t110, 1).
weight(s8, t110, 1).
weight(t110, s8, 1).
weight(t110, l40, 1).
weight(l38, t111, 1).
weight(s8, t111, 1).
weight(t111, s8, 1).
weight(t111, l39, 1).
weight(l38, t112, 1).
weight(s8, t112, 1).
weight(t112, s10, 1).
weight(t112, l39, 1).
weight(l39, t113, 1).
weight(s8, t113, 1).
weight(t113, s8, 1).
weight(t113, l41, 1).
weight(l40, t114, 1).
weight(s8, t114, 1).
weight(t114, s16, 1).
weight(t114, l43, 1).
weight(l41, t115, 1).
weight(s8, t115, 1).
weight(t115, s0, 1).
weight(t115, l42, 1).
weight(l6, t116, 1).
weight(s9, t116, 1).
weight(t116, s9, 1).
weight(t116, l7, 1).
weight(l7, t117, 1).
weight(s9, t117, 1).
weight(t117, s8, 1).
weight(t117, l8, 1).
weight(l8, t118, 1).
weight(s9, t118, 1).
weight(t118, s1, 1).
weight(t118, l9, 1).
weight(l10, t119, 1).
weight(s9, t119, 1).
weight(t119, s9, 1).
weight(t119, l13, 1).
weight(l11, t120, 1).
weight(s9, t120, 1).
weight(t120, s9, 1).
weight(t120, l12, 1).
weight(l11, t121, 1).
weight(s9, t121, 1).
weight(t121, s11, 1).
weight(t121, l12, 1).
weight(l12, t122, 1).
weight(s9, t122, 1).
weight(t122, s9, 1).
weight(t122, l14, 1).
weight(l13, t123, 1).
weight(s9, t123, 1).
weight(t123, s16, 1).
weight(t123, l43, 1).
weight(l14, t124, 1).
weight(s9, t124, 1).
weight(t124, s1, 1).
weight(t124, l15, 1).
weight(l17, t125, 1).
weight(s9, t125, 1).
weight(t125, s9, 1).
weight(t125, l18, 1).
weight(l18, t126, 1).
weight(s9, t126, 1).
weight(t126, s1, 1).
weight(t126, l19, 1).
weight(l29, t127, 1).
weight(s9, t127, 1).
weight(t127, s9, 1).
weight(t127, l30, 1).
weight(l30, t128, 1).
weight(s9, t128, 1).
weight(t128, s8, 1).
weight(t128, l31, 1).
weight(l31, t129, 1).
weight(s9, t129, 1).
weight(t129, s1, 1).
weight(t129, l32, 1).
weight(l34, t130, 1).
weight(s9, t130, 1).
weight(t130, s9, 1).
weight(t130, l35, 1).
weight(l35, t131, 1).
weight(s9, t131, 1).
weight(t131, s1, 1).
weight(t131, l36, 1).
weight(l37, t132, 1).
weight(s9, t132, 1).
weight(t132, s9, 1).
weight(t132, l38, 1).
weight(l37, t133, 1).
weight(s9, t133, 1).
weight(t133, s9, 1).
weight(t133, l40, 1).
weight(l38, t134, 1).
weight(s9, t134, 1).
weight(t134, s9, 1).
weight(t134, l39, 1).
weight(l38, t135, 1).
weight(s9, t135, 1).
weight(t135, s11, 1).
weight(t135, l39, 1).
weight(l39, t136, 1).
weight(s9, t136, 1).
weight(t136, s9, 1).
weight(t136, l41, 1).
weight(l40, t137, 1).
weight(s9, t137, 1).
weight(t137, s16, 1).
weight(t137, l43, 1).
weight(l41, t138, 1).
weight(s9, t138, 1).
weight(t138, s1, 1).
weight(t138, l42, 1).
weight(l7, t139, 1).
weight(s10, t139, 1).
weight(t139, s10, 1).
weight(t139, l8, 1).
weight(l8, t140, 1).
weight(s10, t140, 1).
weight(t140, s2, 1).
weight(t140, l9, 1).
weight(l10, t141, 1).
weight(s10, t141, 1).
weight(t141, s10, 1).
weight(t141, l11, 1).
weight(l11, t142, 1).
weight(s10, t142, 1).
weight(t142, s8, 1).
weight(t142, l12, 1).
weight(l12, t143, 1).
weight(s10, t143, 1).
weight(t143, s10, 1).
weight(t143, l14, 1).
weight(l13, t144, 1).
weight(s10, t144, 1).
weight(t144, s16, 1).
weight(t144, l43, 1).
weight(l14, t145, 1).
weight(s10, t145, 1).
weight(t145, s2, 1).
weight(t145, l15, 1).
weight(l16, t146, 1).
weight(s10, t146, 1).
weight(t146, s10, 1).
weight(t146, l17, 1).
weight(l17, t147, 1).
weight(s10, t147, 1).
weight(t147, s11, 1).
weight(t147, l18, 1).
weight(l18, t148, 1).
weight(s10, t148, 1).
weight(t148, s2, 1).
weight(t148, l19, 1).
weight(l30, t149, 1).
weight(s10, t149, 1).
weight(t149, s10, 1).
weight(t149, l31, 1).
weight(l31, t150, 1).
weight(s10, t150, 1).
weight(t150, s2, 1).
weight(t150, l32, 1).
weight(l33, t151, 1).
weight(s10, t151, 1).
weight(t151, s10, 1).
weight(t151, l34, 1).
weight(l34, t152, 1).
weight(s10, t152, 1).
weight(t152, s11, 1).
weight(t152, l35, 1).
weight(l35, t153, 1).
weight(s10, t153, 1).
weight(t153, s2, 1).
weight(t153, l36, 1).
weight(l37, t154, 1).
weight(s10, t154, 1).
weight(t154, s10, 1).
weight(t154, l38, 1).
weight(l37, t155, 1).
weight(s10, t155, 1).
weight(t155, s10, 1).
weight(t155, l40, 1).
weight(l38, t156, 1).
weight(s10, t156, 1).
weight(t156, s8, 1).
weight(t156, l39, 1).
weight(l39, t157, 1).
weight(s10, t157, 1).
weight(t157, s10, 1).
weight(t157, l41, 1).
weight(l40, t158, 1).
weight(s10, t158, 1).
weight(t158, s16, 1).
weight(t158, l43, 1).
weight(l41, t159, 1).
weight(s10, t159, 1).
weight(t159, s2, 1).
weight(t159, l42, 1).
weight(l6, t160, 1).
weight(s11, t160, 1).
weight(t160, s11, 1).
weight(t160, l7, 1).
weight(l7, t161, 1).
weight(s11, t161, 1).
weight(t161, s10, 1).
weight(t161, l8, 1).
weight(l8, t162, 1).
weight(s11, t162, 1).
weight(t162, s3, 1).
weight(t162, l9, 1).
weight(l10, t163, 1).
weight(s11, t163, 1).
weight(t163, s11, 1).
weight(t163, l11, 1).
weight(l11, t164, 1).
weight(s11, t164, 1).
weight(t164, s9, 1).
weight(t164, l12, 1).
weight(l12, t165, 1).
weight(s11, t165, 1).
weight(t165, s11, 1).
weight(t165, l14, 1).
weight(l13, t166, 1).
weight(s11, t166, 1).
weight(t166, s16, 1).
weight(t166, l43, 1).
weight(l14, t167, 1).
weight(s11, t167, 1).
weight(t167, s3, 1).
weight(t167, l15, 1).
weight(l17, t168, 1).
weight(s11, t168, 1).
weight(t168, s11, 1).
weight(t168, l18, 1).
weight(l18, t169, 1).
weight(s11, t169, 1).
weight(t169, s3, 1).
weight(t169, l19, 1).
weight(l29, t170, 1).
weight(s11, t170, 1).
weight(t170, s11, 1).
weight(t170, l30, 1).
weight(l30, t171, 1).
weight(s11, t171, 1).
weight(t171, s10, 1).
weight(t171, l31, 1).
weight(l31, t172, 1).
weight(s11, t172, 1).
weight(t172, s3, 1).
weight(t172, l32, 1).
weight(l34, t173, 1).
weight(s11, t173, 1).
weight(t173, s11, 1).
weight(t173, l35, 1).
weight(l35, t174, 1).
weight(s11, t174, 1).
weight(t174, s3, 1).
weight(t174, l36, 1).
weight(l37, t175, 1).
weight(s11, t175, 1).
weight(t175, s11, 1).
weight(t175, l38, 1).
weight(l37, t176, 1).
weight(s11, t176, 1).
weight(t176, s11, 1).
weight(t176, l40, 1).
weight(l38, t177, 1).
weight(s11, t177, 1).
weight(t177, s9, 1).
weight(t177, l39, 1).
weight(l39, t178, 1).
weight(s11, t178, 1).
weight(t178, s11, 1).
weight(t178, l41, 1).
weight(l40, t179, 1).
weight(s11, t179, 1).
weight(t179, s16, 1).
weight(t179, l43, 1).
weight(l41, t180, 1).
weight(s11, t180, 1).
weight(t180, s3, 1).
weight(t180, l42, 1).
weight(l4, t181, 1).
weight(s0, t181, 1).
weight(t181, l4, 1).
weight(t181, s4, 1).
weight(t181, l5, 1).
weight(l4, t182, 1).
weight(s1, t182, 1).
weight(t182, l4, 1).
weight(t182, s5, 1).
weight(t182, l5, 1).
weight(l4, t183, 1).
weight(s2, t183, 1).
weight(t183, l4, 1).
weight(t183, s6, 1).
weight(t183, l5, 1).
weight(l4, t184, 1).
weight(s3, t184, 1).
weight(t184, l4, 1).
weight(t184, s7, 1).
weight(t184, l5, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s16 1)').
cond('(>= l43 1)').

target(s16, 1).
target(l43, 1).


* Constructing constraints C' for petri net N
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun l27 () Real)
(declare-fun l26 () Real)
(declare-fun l28 () Real)
(declare-fun l25 () Real)
(declare-fun l16 () Real)
(declare-fun l33 () Real)
(declare-fun s8 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun l29 () Real)
(declare-fun l30 () Real)
(declare-fun s10 () Real)
(declare-fun l31 () Real)
(declare-fun l32 () Real)
(declare-fun l34 () Real)
(declare-fun l35 () Real)
(declare-fun l36 () Real)
(declare-fun l37 () Real)
(declare-fun l38 () Real)
(declare-fun s9 () Real)
(declare-fun l39 () Real)
(declare-fun l40 () Real)
(declare-fun s16 () Real)
(declare-fun l43 () Real)
(declare-fun l41 () Real)
(declare-fun s11 () Real)
(declare-fun l42 () Real)
(declare-fun s0 () Real)
(declare-fun s4 () Real)
(declare-fun s1 () Real)
(declare-fun s5 () Real)
(declare-fun s2 () Real)
(declare-fun s6 () Real)
(declare-fun s3 () Real)
(declare-fun l4 () Real)
(declare-fun s7 () Real)
(declare-fun l5 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s2)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l2) l3 (- s0) s1)))
(assert (>= 0 (+ (- l3) l4 (- s0) s2)))
(assert (>= 0 (+ (- l5) l6 (- s0) s8)))
(assert (>= 0 (+ l10 (- l9) (- s0) s8)))
(assert (>= 0 (+ (- l15) l16 (- s0) s8)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27)))
(assert (>= 0 (+ (- l26) l28)))
(assert (>= 0 (+ l26 (- l27))))
(assert (>= 0 (+ (- l28) l29 (- s0) s8)))
(assert (>= 0 (+ (- l32) l33 (- s0) s8)))
(assert (>= 0 (+ (- l36) l37 (- s0) s8)))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s1) s3)))
(assert (>= 0 (+ (- l1) l2 s0 (- s1))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l3) l4 (- s1) s3)))
(assert (>= 0 (+ (- l5) l6 (- s1) s9)))
(assert (>= 0 (+ l10 (- l9) (- s1) s9)))
(assert (>= 0 (+ (- l15) l16 (- s1) s9)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27)))
(assert (>= 0 (+ (- l26) l28)))
(assert (>= 0 (+ l26 (- l27))))
(assert (>= 0 (+ (- l28) l29 (- s1) s9)))
(assert (>= 0 (+ (- l32) l33 (- s1) s9)))
(assert (>= 0 (+ (- l36) l37 (- s1) s9)))
(assert (>= 0 (+ (- l0) l1 s0 (- s2))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s2) s3)))
(assert (>= 0 (+ (- l2) l3 (- s2) s3)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ (- l5) l6 s10 (- s2))))
(assert (>= 0 (+ l10 (- l9) s10 (- s2))))
(assert (>= 0 (+ (- l15) l16 s10 (- s2))))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27)))
(assert (>= 0 (+ (- l26) l28)))
(assert (>= 0 (+ l26 (- l27))))
(assert (>= 0 (+ (- l28) l29 s10 (- s2))))
(assert (>= 0 (+ (- l32) l33 s10 (- s2))))
(assert (>= 0 (+ (- l36) l37 s10 (- s2))))
(assert (>= 0 (+ (- l0) l1 s1 (- s3))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2 s2 (- s3))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ (- l5) l6 s11 (- s3))))
(assert (>= 0 (+ l10 (- l9) s11 (- s3))))
(assert (>= 0 (+ (- l15) l16 s11 (- s3))))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l21)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27)))
(assert (>= 0 (+ (- l26) l28)))
(assert (>= 0 (+ l26 (- l27))))
(assert (>= 0 (+ (- l28) l29 s11 (- s3))))
(assert (>= 0 (+ (- l32) l33 s11 (- s3))))
(assert (>= 0 (+ (- l36) l37 s11 (- s3))))
(assert (>= 0 (+ l25 (- l4) s0 (- s4))))
(assert (>= 0 (+ l25 (- l4) s1 (- s5))))
(assert (>= 0 (+ l25 (- l4) s2 (- s6))))
(assert (>= 0 (+ l25 (- l4) s3 (- s7))))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ (- l8) l9 s0 (- s8))))
(assert (>= 0 (+ (- l10) l13)))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l11) l12 s10 (- s8))))
(assert (>= 0 (+ (- l12) l14)))
(assert (>= 0 (+ (- l13) l43 s16 (- s8))))
(assert (>= 0 (+ (- l14) l15 s0 (- s8))))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ (- l17) l18 (- s8) s9)))
(assert (>= 0 (+ (- l18) l19 s0 (- s8))))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 s0 (- s8))))
(assert (>= 0 (+ (- l33) l34)))
(assert (>= 0 (+ (- l34) l35 (- s8) s9)))
(assert (>= 0 (+ (- l35) l36 s0 (- s8))))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l40)))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ (- l38) l39 s10 (- s8))))
(assert (>= 0 (+ (- l39) l41)))
(assert (>= 0 (+ (- l40) l43 s16 (- s8))))
(assert (>= 0 (+ (- l41) l42 s0 (- s8))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 s8 (- s9))))
(assert (>= 0 (+ (- l8) l9 s1 (- s9))))
(assert (>= 0 (+ (- l10) l13)))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l11) l12 s11 (- s9))))
(assert (>= 0 (+ (- l12) l14)))
(assert (>= 0 (+ (- l13) l43 s16 (- s9))))
(assert (>= 0 (+ (- l14) l15 s1 (- s9))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 s1 (- s9))))
(assert (>= 0 (+ (- l29) l30)))
(assert (>= 0 (+ (- l30) l31 s8 (- s9))))
(assert (>= 0 (+ (- l31) l32 s1 (- s9))))
(assert (>= 0 (+ (- l34) l35)))
(assert (>= 0 (+ (- l35) l36 s1 (- s9))))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l40)))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ (- l38) l39 s11 (- s9))))
(assert (>= 0 (+ (- l39) l41)))
(assert (>= 0 (+ (- l40) l43 s16 (- s9))))
(assert (>= 0 (+ (- l41) l42 s1 (- s9))))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ (- l8) l9 (- s10) s2)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 (- s10) s8)))
(assert (>= 0 (+ (- l12) l14)))
(assert (>= 0 (+ (- l13) l43 (- s10) s16)))
(assert (>= 0 (+ (- l14) l15 (- s10) s2)))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ (- l17) l18 (- s10) s11)))
(assert (>= 0 (+ (- l18) l19 (- s10) s2)))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 (- s10) s2)))
(assert (>= 0 (+ (- l33) l34)))
(assert (>= 0 (+ (- l34) l35 (- s10) s11)))
(assert (>= 0 (+ (- l35) l36 (- s10) s2)))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l40)))
(assert (>= 0 (+ (- l38) l39 (- s10) s8)))
(assert (>= 0 (+ (- l39) l41)))
(assert (>= 0 (+ (- l40) l43 (- s10) s16)))
(assert (>= 0 (+ (- l41) l42 (- s10) s2)))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 s10 (- s11))))
(assert (>= 0 (+ (- l8) l9 (- s11) s3)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 (- s11) s9)))
(assert (>= 0 (+ (- l12) l14)))
(assert (>= 0 (+ (- l13) l43 (- s11) s16)))
(assert (>= 0 (+ (- l14) l15 (- s11) s3)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 (- s11) s3)))
(assert (>= 0 (+ (- l29) l30)))
(assert (>= 0 (+ (- l30) l31 s10 (- s11))))
(assert (>= 0 (+ (- l31) l32 (- s11) s3)))
(assert (>= 0 (+ (- l34) l35)))
(assert (>= 0 (+ (- l35) l36 (- s11) s3)))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l40)))
(assert (>= 0 (+ (- l38) l39 (- s11) s9)))
(assert (>= 0 (+ (- l39) l41)))
(assert (>= 0 (+ (- l40) l43 (- s11) s16)))
(assert (>= 0 (+ (- l41) l42 (- s11) s3)))
(assert (>= 0 (+ l5 (- s0) s4)))
(assert (>= 0 (+ l5 (- s1) s5)))
(assert (>= 0 (+ l5 (- s2) s6)))
(assert (>= 0 (+ l5 (- s3) s7)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s16 l43 (- s0) (- l0))))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l27 0))
(assert (>= l26 0))
(assert (>= l28 0))
(assert (>= l25 0))
(assert (>= l16 0))
(assert (>= l33 0))
(assert (>= s8 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l29 0))
(assert (>= l30 0))
(assert (>= s10 0))
(assert (>= l31 0))
(assert (>= l32 0))
(assert (>= l34 0))
(assert (>= l35 0))
(assert (>= l36 0))
(assert (>= l37 0))
(assert (>= l38 0))
(assert (>= s9 0))
(assert (>= l39 0))
(assert (>= l40 0))
(assert (>= s16 0))
(assert (>= l43 0))
(assert (>= l41 0))
(assert (>= s11 0))
(assert (>= l42 0))
(assert (>= s0 0))
(assert (>= s4 0))
(assert (>= s1 0))
(assert (>= s5 0))
(assert (>= s2 0))
(assert (>= s6 0))
(assert (>= s3 0))
(assert (>= l4 0))
(assert (>= s7 0))
(assert (>= l5 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 310 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


