PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/spin2003_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(s8, [t8], []).
place(l17, [t8], []).
place(l1, [t13,t12,t2,t1], [t14,t3]).
place(l8, [t17,t6], [t18,t7]).
place(l9, [t18,t7], [t19,t8]).
place(l10, [t19], [t20,t9]).
place(l2, [t21,t14,t10,t3], [t15,t4]).
place(l15, [], [t22,t11]).
place(l16, [t22,t11], []).
place(l14, [t24,t23], [t21,t10]).
place(s4, [t27,t25,t9,t5], [t28,t27,t26,t25]).
place(l5, [t16,t5], [t29,t25]).
place(l6, [t29,t25], [t30,t26]).
place(l7, [t30,t26], [t17,t6]).
place(l11, [t20,t9], [t31,t27]).
place(l12, [t31,t27], [t32,t28]).
place(s5, [t31,t29,t20,t16], [t32,t31,t30,t29]).
place(l13, [t32,t28], []).
place(s0, [t28,t26,t23,t17,t12,t11,t10,t6,t4,t1], [t33,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t33], [t23]).
place(s1, [t32,t30,t24,t22,t21,t19,t18,t15,t14,t13,t7,t3,t2], [t34,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12]).
place(l3, [t34,t33,t15,t4], [t34,t33,t24,t23]).
place(s3, [t34], [t24]).
place(l4, [t34,t33], [t16,t5]).
place(l0, [init1], [t13,t12,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l2,s0], [s0,l3]).
transition(t5, [l4,s0], [s4,l5]).
transition(t6, [l7,s0], [s0,l8]).
transition(t7, [l8,s0], [s1,l9]).
transition(t8, [l9,s0], [s8,l17]).
transition(t9, [l10,s0], [s4,l11]).
transition(t10, [l14,s0], [s0,l2]).
transition(t11, [l15,s0], [s0,l16]).
transition(t12, [l0,s1], [s0,l1]).
transition(t13, [l0,s1], [s1,l1]).
transition(t14, [l1,s1], [s1,l2]).
transition(t15, [l2,s1], [s1,l3]).
transition(t16, [l4,s1], [s5,l5]).
transition(t17, [l7,s1], [s0,l8]).
transition(t18, [l8,s1], [s1,l9]).
transition(t19, [l9,s1], [s1,l10]).
transition(t20, [l10,s1], [s5,l11]).
transition(t21, [l14,s1], [s1,l2]).
transition(t22, [l15,s1], [s1,l16]).
transition(t23, [l3,s2], [s0,l14]).
transition(t24, [l3,s3], [s1,l14]).
transition(t25, [l5,s4], [s4,l6]).
transition(t26, [l6,s4], [s0,l7]).
transition(t27, [l11,s4], [s4,l12]).
transition(t28, [l12,s4], [s0,l13]).
transition(t29, [l5,s5], [s5,l6]).
transition(t30, [l6,s5], [s1,l7]).
transition(t31, [l11,s5], [s5,l12]).
transition(t32, [l12,s5], [s1,l13]).
transition(t33, [l3,s0], [l3,s2,l4]).
transition(t34, [l3,s1], [l3,s3,l4]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s1, 1).
weight(t3, l2, 1).
weight(l2, t4, 1).
weight(s0, t4, 1).
weight(t4, s0, 1).
weight(t4, l3, 1).
weight(l4, t5, 1).
weight(s0, t5, 1).
weight(t5, s4, 1).
weight(t5, l5, 1).
weight(l7, t6, 1).
weight(s0, t6, 1).
weight(t6, s0, 1).
weight(t6, l8, 1).
weight(l8, t7, 1).
weight(s0, t7, 1).
weight(t7, s1, 1).
weight(t7, l9, 1).
weight(l9, t8, 1).
weight(s0, t8, 1).
weight(t8, s8, 1).
weight(t8, l17, 1).
weight(l10, t9, 1).
weight(s0, t9, 1).
weight(t9, s4, 1).
weight(t9, l11, 1).
weight(l14, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l2, 1).
weight(l15, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l16, 1).
weight(l0, t12, 1).
weight(s1, t12, 1).
weight(t12, s0, 1).
weight(t12, l1, 1).
weight(l0, t13, 1).
weight(s1, t13, 1).
weight(t13, s1, 1).
weight(t13, l1, 1).
weight(l1, t14, 1).
weight(s1, t14, 1).
weight(t14, s1, 1).
weight(t14, l2, 1).
weight(l2, t15, 1).
weight(s1, t15, 1).
weight(t15, s1, 1).
weight(t15, l3, 1).
weight(l4, t16, 1).
weight(s1, t16, 1).
weight(t16, s5, 1).
weight(t16, l5, 1).
weight(l7, t17, 1).
weight(s1, t17, 1).
weight(t17, s0, 1).
weight(t17, l8, 1).
weight(l8, t18, 1).
weight(s1, t18, 1).
weight(t18, s1, 1).
weight(t18, l9, 1).
weight(l9, t19, 1).
weight(s1, t19, 1).
weight(t19, s1, 1).
weight(t19, l10, 1).
weight(l10, t20, 1).
weight(s1, t20, 1).
weight(t20, s5, 1).
weight(t20, l11, 1).
weight(l14, t21, 1).
weight(s1, t21, 1).
weight(t21, s1, 1).
weight(t21, l2, 1).
weight(l15, t22, 1).
weight(s1, t22, 1).
weight(t22, s1, 1).
weight(t22, l16, 1).
weight(l3, t23, 1).
weight(s2, t23, 1).
weight(t23, s0, 1).
weight(t23, l14, 1).
weight(l3, t24, 1).
weight(s3, t24, 1).
weight(t24, s1, 1).
weight(t24, l14, 1).
weight(l5, t25, 1).
weight(s4, t25, 1).
weight(t25, s4, 1).
weight(t25, l6, 1).
weight(l6, t26, 1).
weight(s4, t26, 1).
weight(t26, s0, 1).
weight(t26, l7, 1).
weight(l11, t27, 1).
weight(s4, t27, 1).
weight(t27, s4, 1).
weight(t27, l12, 1).
weight(l12, t28, 1).
weight(s4, t28, 1).
weight(t28, s0, 1).
weight(t28, l13, 1).
weight(l5, t29, 1).
weight(s5, t29, 1).
weight(t29, s5, 1).
weight(t29, l6, 1).
weight(l6, t30, 1).
weight(s5, t30, 1).
weight(t30, s1, 1).
weight(t30, l7, 1).
weight(l11, t31, 1).
weight(s5, t31, 1).
weight(t31, s5, 1).
weight(t31, l12, 1).
weight(l12, t32, 1).
weight(s5, t32, 1).
weight(t32, s1, 1).
weight(t32, l13, 1).
weight(l3, t33, 1).
weight(s0, t33, 1).
weight(t33, l3, 1).
weight(t33, s2, 1).
weight(t33, l4, 1).
weight(l3, t34, 1).
weight(s1, t34, 1).
weight(t34, l3, 1).
weight(t34, s3, 1).
weight(t34, l4, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s8 1)').
cond('(>= l17 1)').

target(s8, 1).
target(l17, 1).


* Constructing constraints C' for petri net N
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun l17 () Real)
(declare-fun l1 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l2 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l14 () Real)
(declare-fun s4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun s5 () Real)
(declare-fun l13 () Real)
(declare-fun s0 () Real)
(declare-fun s2 () Real)
(declare-fun s1 () Real)
(declare-fun l3 () Real)
(declare-fun s3 () Real)
(declare-fun l4 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l4) l5 (- s0) s4)))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ (- l8) l9 (- s0) s1)))
(assert (>= 0 (+ l17 (- l9) (- s0) s8)))
(assert (>= 0 (+ (- l10) l11 (- s0) s4)))
(assert (>= 0 (+ (- l14) l2)))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l0) l1 s0 (- s1))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l4) l5 (- s1) s5)))
(assert (>= 0 (+ (- l7) l8 s0 (- s1))))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ (- l10) l11 (- s1) s5)))
(assert (>= 0 (+ (- l14) l2)))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ l14 (- l3) s0 (- s2))))
(assert (>= 0 (+ l14 (- l3) s1 (- s3))))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ (- l6) l7 s0 (- s4))))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l12) l13 s0 (- s4))))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ (- l6) l7 s1 (- s5))))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ (- l12) l13 s1 (- s5))))
(assert (>= 0 (+ l4 (- s0) s2)))
(assert (>= 0 (+ l4 (- s1) s3)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s8 l17 (- s0) (- l0))))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l17 0))
(assert (>= l1 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l2 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l14 0))
(assert (>= s4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= s5 0))
(assert (>= l13 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= s1 0))
(assert (>= l3 0))
(assert (>= s3 0))
(assert (>= l4 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 92 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


