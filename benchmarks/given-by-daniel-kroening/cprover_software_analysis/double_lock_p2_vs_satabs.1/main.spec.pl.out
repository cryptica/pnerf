PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/double_lock_p2_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s12, [], []).
place(s13, [], []).
place(s14, [], []).
place(s15, [], []).
place(s16, [t73,t37,t11,t8], []).
place(l46, [t73,t37,t11,t8], []).
place(l1, [t97,t96,t64,t63,t31,t30,t2,t1], [t99,t98,t66,t65,t33,t32,t4,t3]).
place(l2, [t99,t98,t66,t65,t33,t32,t4,t3], [t100,t67,t34,t5]).
place(l5, [t101,t68,t35,t6], [t102,t69,t36,t7]).
place(l9, [t103,t70], [t104,t71,t38,t9]).
place(l16, [t106,t40], [t107,t74,t41,t12]).
place(l20, [], [t109,t76,t43,t14]).
place(l21, [t109,t76,t43,t14], []).
place(l28, [t113,t112,t82,t81,t80,t79,t47,t46,t18,t17], [t115,t114,t84,t83,t51,t50,t49,t48,t20,t19]).
place(l29, [t115,t114,t84,t83,t51,t50,t49,t48,t20,t19], [t116,t85,t52,t21]).
place(l38, [t119,t118,t88,t87,t57,t56,t55,t54,t24,t23], [t121,t120,t92,t91,t90,t89,t59,t58,t26,t25]).
place(l39, [t121,t120,t92,t91,t90,t89,t59,t58,t26,t25], [t122,t93,t60,t27]).
place(l44, [], [t124,t95,t62,t29]).
place(l45, [t124,t95,t62,t29], []).
place(l22, [t134,t131,t128,t125,t123,t94,t61,t28], [t110,t77,t44,t15]).
place(l43, [t136,t133,t130,t127], [t123,t94,t61,t28]).
place(s8, [t151,t149,t147,t145,t143,t141,t139,t137,t27,t22,t21,t16,t12,t10,t9,t7], [t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137]).
place(s9, [t167,t165,t163,t161,t159,t157,t155,t153,t60,t53,t52,t45,t41,t39,t38,t36], [t168,t167,t166,t165,t164,t163,t162,t161,t160,t159,t158,t157,t156,t155,t154,t153]).
place(s10, [t183,t181,t179,t177,t175,t173,t171,t169,t93,t86,t85,t78,t74,t72,t71,t69], [t184,t183,t182,t181,t180,t179,t178,t177,t176,t175,t174,t173,t172,t171,t170,t169]).
place(l6, [t102,t69,t36,t7], [t185,t169,t153,t137]).
place(l7, [t185,t169,t153,t137], [t186,t170,t154,t138]).
place(l8, [t186,t170,t154,t138], [t103,t70,t37,t8]).
place(l10, [t104,t71,t38,t9], [t187,t171,t155,t139]).
place(l11, [t187,t171,t155,t139], [t188,t172,t156,t140]).
place(l12, [t188,t172,t156,t140], [t105,t72,t39,t10]).
place(l13, [t105,t72,t39,t10], [t189,t173,t157,t141]).
place(l14, [t189,t173,t157,t141], [t190,t174,t158,t142]).
place(l15, [t190,t174,t158,t142], [t106,t73,t40,t11]).
place(l17, [t107,t74,t41,t12], [t191,t175,t159,t143]).
place(l18, [t191,t175,t159,t143], [t192,t176,t160,t144]).
place(l19, [t192,t176,t160,t144], [t108,t75,t42,t13]).
place(l25, [t111,t78,t45,t16], [t193,t177,t161,t145]).
place(l26, [t193,t177,t161,t145], [t194,t178,t162,t146]).
place(l27, [t194,t178,t162,t146], [t113,t112,t82,t81,t80,t79,t47,t46,t18,t17]).
place(l30, [t116,t85,t52,t21], [t195,t179,t163,t147]).
place(l31, [t195,t179,t163,t147], [t196,t180,t164,t148]).
place(l32, [t196,t180,t164,t148], []).
place(l35, [t117,t86,t53,t22], [t197,t181,t165,t149]).
place(l36, [t197,t181,t165,t149], [t198,t182,t166,t150]).
place(l37, [t198,t182,t166,t150], [t119,t118,t88,t87,t57,t56,t55,t54,t24,t23]).
place(l40, [t122,t93,t60,t27], [t199,t183,t167,t151]).
place(l41, [t199,t183,t167,t151], [t200,t184,t168,t152]).
place(s11, [t199,t197,t195,t193,t191,t189,t187,t185,t122,t117,t116,t111,t107,t105,t104,t102], [t200,t199,t198,t197,t196,t195,t194,t193,t192,t191,t190,t189,t188,t187,t186,t185]).
place(l42, [t200,t184,t168,t152], []).
place(s0, [t152,t150,t148,t146,t144,t142,t140,t138,t127,t126,t125,t89,t79,t63,t54,t48,t32,t29,t28,t15,t14,t13,t6,t3,t1], [t203,t202,t201,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s4, [t203,t202,t201], [t127,t126,t125]).
place(s1, [t168,t166,t164,t162,t160,t158,t156,t154,t130,t129,t128,t118,t114,t96,t90,t80,t62,t61,t58,t55,t49,t46,t44,t43,t42,t40,t35,t33,t30,t25,t17,t4], [t206,t205,t204,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30]).
place(s5, [t206,t205,t204], [t130,t129,t128]).
place(s2, [t184,t182,t180,t178,t176,t174,t172,t170,t133,t132,t131,t120,t112,t98,t95,t94,t91,t87,t83,t81,t77,t76,t75,t70,t68,t65,t64,t56,t50,t23,t19,t2], [t209,t208,t207,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63]).
place(s6, [t209,t208,t207], [t133,t132,t131]).
place(l3, [t210,t207,t204,t201,t100,t67,t34,t5], [t210,t207,t204,t201,t134,t131,t128,t125]).
place(l4, [t210,t207,t204,t201,t108,t75,t42,t13], [t101,t68,t35,t6]).
place(l23, [t211,t208,t205,t202,t110,t77,t44,t15], [t211,t208,t205,t202,t135,t132,t129,t126]).
place(l24, [t211,t208,t205,t202], [t111,t78,t45,t16]).
place(s3, [t200,t198,t196,t194,t192,t190,t188,t186,t136,t135,t134,t124,t123,t121,t119,t115,t113,t110,t109,t108,t106,t103,t101,t100,t99,t97,t92,t88,t84,t82,t67,t66,t59,t57,t51,t47,t34,t31,t26,t24,t20,t18,t5], [t212,t211,t210,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115,t114,t113,t112,t111,t110,t109,t108,t107,t106,t105,t104,t103,t102,t101,t100,t99,t98,t97,t96]).
place(l33, [t212,t209,t206,t203,t135,t132,t129,t126], [t212,t209,t206,t203,t136,t133,t130,t127]).
place(s7, [t212,t211,t210], [t136,t135,t134]).
place(l34, [t212,t209,t206,t203], [t117,t86,t53,t22]).
place(l0, [init1], [t97,t96,t64,t63,t31,t30,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s2,l1]).
transition(t3, [l1,s0], [s0,l2]).
transition(t4, [l1,s0], [s1,l2]).
transition(t5, [l2,s0], [s3,l3]).
transition(t6, [l4,s0], [s0,l5]).
transition(t7, [l5,s0], [s8,l6]).
transition(t8, [l8,s0], [s16,l46]).
transition(t9, [l9,s0], [s8,l10]).
transition(t10, [l12,s0], [s8,l13]).
transition(t11, [l15,s0], [s16,l46]).
transition(t12, [l16,s0], [s8,l17]).
transition(t13, [l19,s0], [s0,l4]).
transition(t14, [l20,s0], [s0,l21]).
transition(t15, [l22,s0], [s0,l23]).
transition(t16, [l24,s0], [s8,l25]).
transition(t17, [l27,s0], [s1,l28]).
transition(t18, [l27,s0], [s3,l28]).
transition(t19, [l28,s0], [s2,l29]).
transition(t20, [l28,s0], [s3,l29]).
transition(t21, [l29,s0], [s8,l30]).
transition(t22, [l34,s0], [s8,l35]).
transition(t23, [l37,s0], [s2,l38]).
transition(t24, [l37,s0], [s3,l38]).
transition(t25, [l38,s0], [s1,l39]).
transition(t26, [l38,s0], [s3,l39]).
transition(t27, [l39,s0], [s8,l40]).
transition(t28, [l43,s0], [s0,l22]).
transition(t29, [l44,s0], [s0,l45]).
transition(t30, [l0,s1], [s1,l1]).
transition(t31, [l0,s1], [s3,l1]).
transition(t32, [l1,s1], [s0,l2]).
transition(t33, [l1,s1], [s1,l2]).
transition(t34, [l2,s1], [s3,l3]).
transition(t35, [l4,s1], [s1,l5]).
transition(t36, [l5,s1], [s9,l6]).
transition(t37, [l8,s1], [s16,l46]).
transition(t38, [l9,s1], [s9,l10]).
transition(t39, [l12,s1], [s9,l13]).
transition(t40, [l15,s1], [s1,l16]).
transition(t41, [l16,s1], [s9,l17]).
transition(t42, [l19,s1], [s1,l4]).
transition(t43, [l20,s1], [s1,l21]).
transition(t44, [l22,s1], [s1,l23]).
transition(t45, [l24,s1], [s9,l25]).
transition(t46, [l27,s1], [s1,l28]).
transition(t47, [l27,s1], [s3,l28]).
transition(t48, [l28,s1], [s0,l29]).
transition(t49, [l28,s1], [s1,l29]).
transition(t50, [l28,s1], [s2,l29]).
transition(t51, [l28,s1], [s3,l29]).
transition(t52, [l29,s1], [s9,l30]).
transition(t53, [l34,s1], [s9,l35]).
transition(t54, [l37,s1], [s0,l38]).
transition(t55, [l37,s1], [s1,l38]).
transition(t56, [l37,s1], [s2,l38]).
transition(t57, [l37,s1], [s3,l38]).
transition(t58, [l38,s1], [s1,l39]).
transition(t59, [l38,s1], [s3,l39]).
transition(t60, [l39,s1], [s9,l40]).
transition(t61, [l43,s1], [s1,l22]).
transition(t62, [l44,s1], [s1,l45]).
transition(t63, [l0,s2], [s0,l1]).
transition(t64, [l0,s2], [s2,l1]).
transition(t65, [l1,s2], [s2,l2]).
transition(t66, [l1,s2], [s3,l2]).
transition(t67, [l2,s2], [s3,l3]).
transition(t68, [l4,s2], [s2,l5]).
transition(t69, [l5,s2], [s10,l6]).
transition(t70, [l8,s2], [s2,l9]).
transition(t71, [l9,s2], [s10,l10]).
transition(t72, [l12,s2], [s10,l13]).
transition(t73, [l15,s2], [s16,l46]).
transition(t74, [l16,s2], [s10,l17]).
transition(t75, [l19,s2], [s2,l4]).
transition(t76, [l20,s2], [s2,l21]).
transition(t77, [l22,s2], [s2,l23]).
transition(t78, [l24,s2], [s10,l25]).
transition(t79, [l27,s2], [s0,l28]).
transition(t80, [l27,s2], [s1,l28]).
transition(t81, [l27,s2], [s2,l28]).
transition(t82, [l27,s2], [s3,l28]).
transition(t83, [l28,s2], [s2,l29]).
transition(t84, [l28,s2], [s3,l29]).
transition(t85, [l29,s2], [s10,l30]).
transition(t86, [l34,s2], [s10,l35]).
transition(t87, [l37,s2], [s2,l38]).
transition(t88, [l37,s2], [s3,l38]).
transition(t89, [l38,s2], [s0,l39]).
transition(t90, [l38,s2], [s1,l39]).
transition(t91, [l38,s2], [s2,l39]).
transition(t92, [l38,s2], [s3,l39]).
transition(t93, [l39,s2], [s10,l40]).
transition(t94, [l43,s2], [s2,l22]).
transition(t95, [l44,s2], [s2,l45]).
transition(t96, [l0,s3], [s1,l1]).
transition(t97, [l0,s3], [s3,l1]).
transition(t98, [l1,s3], [s2,l2]).
transition(t99, [l1,s3], [s3,l2]).
transition(t100, [l2,s3], [s3,l3]).
transition(t101, [l4,s3], [s3,l5]).
transition(t102, [l5,s3], [s11,l6]).
transition(t103, [l8,s3], [s3,l9]).
transition(t104, [l9,s3], [s11,l10]).
transition(t105, [l12,s3], [s11,l13]).
transition(t106, [l15,s3], [s3,l16]).
transition(t107, [l16,s3], [s11,l17]).
transition(t108, [l19,s3], [s3,l4]).
transition(t109, [l20,s3], [s3,l21]).
transition(t110, [l22,s3], [s3,l23]).
transition(t111, [l24,s3], [s11,l25]).
transition(t112, [l27,s3], [s2,l28]).
transition(t113, [l27,s3], [s3,l28]).
transition(t114, [l28,s3], [s1,l29]).
transition(t115, [l28,s3], [s3,l29]).
transition(t116, [l29,s3], [s11,l30]).
transition(t117, [l34,s3], [s11,l35]).
transition(t118, [l37,s3], [s1,l38]).
transition(t119, [l37,s3], [s3,l38]).
transition(t120, [l38,s3], [s2,l39]).
transition(t121, [l38,s3], [s3,l39]).
transition(t122, [l39,s3], [s11,l40]).
transition(t123, [l43,s3], [s3,l22]).
transition(t124, [l44,s3], [s3,l45]).
transition(t125, [l3,s4], [s0,l22]).
transition(t126, [l23,s4], [s0,l33]).
transition(t127, [l33,s4], [s0,l43]).
transition(t128, [l3,s5], [s1,l22]).
transition(t129, [l23,s5], [s1,l33]).
transition(t130, [l33,s5], [s1,l43]).
transition(t131, [l3,s6], [s2,l22]).
transition(t132, [l23,s6], [s2,l33]).
transition(t133, [l33,s6], [s2,l43]).
transition(t134, [l3,s7], [s3,l22]).
transition(t135, [l23,s7], [s3,l33]).
transition(t136, [l33,s7], [s3,l43]).
transition(t137, [l6,s8], [s8,l7]).
transition(t138, [l7,s8], [s0,l8]).
transition(t139, [l10,s8], [s8,l11]).
transition(t140, [l11,s8], [s0,l12]).
transition(t141, [l13,s8], [s8,l14]).
transition(t142, [l14,s8], [s0,l15]).
transition(t143, [l17,s8], [s8,l18]).
transition(t144, [l18,s8], [s0,l19]).
transition(t145, [l25,s8], [s8,l26]).
transition(t146, [l26,s8], [s0,l27]).
transition(t147, [l30,s8], [s8,l31]).
transition(t148, [l31,s8], [s0,l32]).
transition(t149, [l35,s8], [s8,l36]).
transition(t150, [l36,s8], [s0,l37]).
transition(t151, [l40,s8], [s8,l41]).
transition(t152, [l41,s8], [s0,l42]).
transition(t153, [l6,s9], [s9,l7]).
transition(t154, [l7,s9], [s1,l8]).
transition(t155, [l10,s9], [s9,l11]).
transition(t156, [l11,s9], [s1,l12]).
transition(t157, [l13,s9], [s9,l14]).
transition(t158, [l14,s9], [s1,l15]).
transition(t159, [l17,s9], [s9,l18]).
transition(t160, [l18,s9], [s1,l19]).
transition(t161, [l25,s9], [s9,l26]).
transition(t162, [l26,s9], [s1,l27]).
transition(t163, [l30,s9], [s9,l31]).
transition(t164, [l31,s9], [s1,l32]).
transition(t165, [l35,s9], [s9,l36]).
transition(t166, [l36,s9], [s1,l37]).
transition(t167, [l40,s9], [s9,l41]).
transition(t168, [l41,s9], [s1,l42]).
transition(t169, [l6,s10], [s10,l7]).
transition(t170, [l7,s10], [s2,l8]).
transition(t171, [l10,s10], [s10,l11]).
transition(t172, [l11,s10], [s2,l12]).
transition(t173, [l13,s10], [s10,l14]).
transition(t174, [l14,s10], [s2,l15]).
transition(t175, [l17,s10], [s10,l18]).
transition(t176, [l18,s10], [s2,l19]).
transition(t177, [l25,s10], [s10,l26]).
transition(t178, [l26,s10], [s2,l27]).
transition(t179, [l30,s10], [s10,l31]).
transition(t180, [l31,s10], [s2,l32]).
transition(t181, [l35,s10], [s10,l36]).
transition(t182, [l36,s10], [s2,l37]).
transition(t183, [l40,s10], [s10,l41]).
transition(t184, [l41,s10], [s2,l42]).
transition(t185, [l6,s11], [s11,l7]).
transition(t186, [l7,s11], [s3,l8]).
transition(t187, [l10,s11], [s11,l11]).
transition(t188, [l11,s11], [s3,l12]).
transition(t189, [l13,s11], [s11,l14]).
transition(t190, [l14,s11], [s3,l15]).
transition(t191, [l17,s11], [s11,l18]).
transition(t192, [l18,s11], [s3,l19]).
transition(t193, [l25,s11], [s11,l26]).
transition(t194, [l26,s11], [s3,l27]).
transition(t195, [l30,s11], [s11,l31]).
transition(t196, [l31,s11], [s3,l32]).
transition(t197, [l35,s11], [s11,l36]).
transition(t198, [l36,s11], [s3,l37]).
transition(t199, [l40,s11], [s11,l41]).
transition(t200, [l41,s11], [s3,l42]).
transition(t201, [l3,s0], [l3,s4,l4]).
transition(t202, [l23,s0], [l23,s4,l24]).
transition(t203, [l33,s0], [l33,s4,l34]).
transition(t204, [l3,s1], [l3,s5,l4]).
transition(t205, [l23,s1], [l23,s5,l24]).
transition(t206, [l33,s1], [l33,s5,l34]).
transition(t207, [l3,s2], [l3,s6,l4]).
transition(t208, [l23,s2], [l23,s6,l24]).
transition(t209, [l33,s2], [l33,s6,l34]).
transition(t210, [l3,s3], [l3,s7,l4]).
transition(t211, [l23,s3], [l23,s7,l24]).
transition(t212, [l33,s3], [l33,s7,l34]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s2, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l2, 1).
weight(l1, t4, 1).
weight(s0, t4, 1).
weight(t4, s1, 1).
weight(t4, l2, 1).
weight(l2, t5, 1).
weight(s0, t5, 1).
weight(t5, s3, 1).
weight(t5, l3, 1).
weight(l4, t6, 1).
weight(s0, t6, 1).
weight(t6, s0, 1).
weight(t6, l5, 1).
weight(l5, t7, 1).
weight(s0, t7, 1).
weight(t7, s8, 1).
weight(t7, l6, 1).
weight(l8, t8, 1).
weight(s0, t8, 1).
weight(t8, s16, 1).
weight(t8, l46, 1).
weight(l9, t9, 1).
weight(s0, t9, 1).
weight(t9, s8, 1).
weight(t9, l10, 1).
weight(l12, t10, 1).
weight(s0, t10, 1).
weight(t10, s8, 1).
weight(t10, l13, 1).
weight(l15, t11, 1).
weight(s0, t11, 1).
weight(t11, s16, 1).
weight(t11, l46, 1).
weight(l16, t12, 1).
weight(s0, t12, 1).
weight(t12, s8, 1).
weight(t12, l17, 1).
weight(l19, t13, 1).
weight(s0, t13, 1).
weight(t13, s0, 1).
weight(t13, l4, 1).
weight(l20, t14, 1).
weight(s0, t14, 1).
weight(t14, s0, 1).
weight(t14, l21, 1).
weight(l22, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l23, 1).
weight(l24, t16, 1).
weight(s0, t16, 1).
weight(t16, s8, 1).
weight(t16, l25, 1).
weight(l27, t17, 1).
weight(s0, t17, 1).
weight(t17, s1, 1).
weight(t17, l28, 1).
weight(l27, t18, 1).
weight(s0, t18, 1).
weight(t18, s3, 1).
weight(t18, l28, 1).
weight(l28, t19, 1).
weight(s0, t19, 1).
weight(t19, s2, 1).
weight(t19, l29, 1).
weight(l28, t20, 1).
weight(s0, t20, 1).
weight(t20, s3, 1).
weight(t20, l29, 1).
weight(l29, t21, 1).
weight(s0, t21, 1).
weight(t21, s8, 1).
weight(t21, l30, 1).
weight(l34, t22, 1).
weight(s0, t22, 1).
weight(t22, s8, 1).
weight(t22, l35, 1).
weight(l37, t23, 1).
weight(s0, t23, 1).
weight(t23, s2, 1).
weight(t23, l38, 1).
weight(l37, t24, 1).
weight(s0, t24, 1).
weight(t24, s3, 1).
weight(t24, l38, 1).
weight(l38, t25, 1).
weight(s0, t25, 1).
weight(t25, s1, 1).
weight(t25, l39, 1).
weight(l38, t26, 1).
weight(s0, t26, 1).
weight(t26, s3, 1).
weight(t26, l39, 1).
weight(l39, t27, 1).
weight(s0, t27, 1).
weight(t27, s8, 1).
weight(t27, l40, 1).
weight(l43, t28, 1).
weight(s0, t28, 1).
weight(t28, s0, 1).
weight(t28, l22, 1).
weight(l44, t29, 1).
weight(s0, t29, 1).
weight(t29, s0, 1).
weight(t29, l45, 1).
weight(l0, t30, 1).
weight(s1, t30, 1).
weight(t30, s1, 1).
weight(t30, l1, 1).
weight(l0, t31, 1).
weight(s1, t31, 1).
weight(t31, s3, 1).
weight(t31, l1, 1).
weight(l1, t32, 1).
weight(s1, t32, 1).
weight(t32, s0, 1).
weight(t32, l2, 1).
weight(l1, t33, 1).
weight(s1, t33, 1).
weight(t33, s1, 1).
weight(t33, l2, 1).
weight(l2, t34, 1).
weight(s1, t34, 1).
weight(t34, s3, 1).
weight(t34, l3, 1).
weight(l4, t35, 1).
weight(s1, t35, 1).
weight(t35, s1, 1).
weight(t35, l5, 1).
weight(l5, t36, 1).
weight(s1, t36, 1).
weight(t36, s9, 1).
weight(t36, l6, 1).
weight(l8, t37, 1).
weight(s1, t37, 1).
weight(t37, s16, 1).
weight(t37, l46, 1).
weight(l9, t38, 1).
weight(s1, t38, 1).
weight(t38, s9, 1).
weight(t38, l10, 1).
weight(l12, t39, 1).
weight(s1, t39, 1).
weight(t39, s9, 1).
weight(t39, l13, 1).
weight(l15, t40, 1).
weight(s1, t40, 1).
weight(t40, s1, 1).
weight(t40, l16, 1).
weight(l16, t41, 1).
weight(s1, t41, 1).
weight(t41, s9, 1).
weight(t41, l17, 1).
weight(l19, t42, 1).
weight(s1, t42, 1).
weight(t42, s1, 1).
weight(t42, l4, 1).
weight(l20, t43, 1).
weight(s1, t43, 1).
weight(t43, s1, 1).
weight(t43, l21, 1).
weight(l22, t44, 1).
weight(s1, t44, 1).
weight(t44, s1, 1).
weight(t44, l23, 1).
weight(l24, t45, 1).
weight(s1, t45, 1).
weight(t45, s9, 1).
weight(t45, l25, 1).
weight(l27, t46, 1).
weight(s1, t46, 1).
weight(t46, s1, 1).
weight(t46, l28, 1).
weight(l27, t47, 1).
weight(s1, t47, 1).
weight(t47, s3, 1).
weight(t47, l28, 1).
weight(l28, t48, 1).
weight(s1, t48, 1).
weight(t48, s0, 1).
weight(t48, l29, 1).
weight(l28, t49, 1).
weight(s1, t49, 1).
weight(t49, s1, 1).
weight(t49, l29, 1).
weight(l28, t50, 1).
weight(s1, t50, 1).
weight(t50, s2, 1).
weight(t50, l29, 1).
weight(l28, t51, 1).
weight(s1, t51, 1).
weight(t51, s3, 1).
weight(t51, l29, 1).
weight(l29, t52, 1).
weight(s1, t52, 1).
weight(t52, s9, 1).
weight(t52, l30, 1).
weight(l34, t53, 1).
weight(s1, t53, 1).
weight(t53, s9, 1).
weight(t53, l35, 1).
weight(l37, t54, 1).
weight(s1, t54, 1).
weight(t54, s0, 1).
weight(t54, l38, 1).
weight(l37, t55, 1).
weight(s1, t55, 1).
weight(t55, s1, 1).
weight(t55, l38, 1).
weight(l37, t56, 1).
weight(s1, t56, 1).
weight(t56, s2, 1).
weight(t56, l38, 1).
weight(l37, t57, 1).
weight(s1, t57, 1).
weight(t57, s3, 1).
weight(t57, l38, 1).
weight(l38, t58, 1).
weight(s1, t58, 1).
weight(t58, s1, 1).
weight(t58, l39, 1).
weight(l38, t59, 1).
weight(s1, t59, 1).
weight(t59, s3, 1).
weight(t59, l39, 1).
weight(l39, t60, 1).
weight(s1, t60, 1).
weight(t60, s9, 1).
weight(t60, l40, 1).
weight(l43, t61, 1).
weight(s1, t61, 1).
weight(t61, s1, 1).
weight(t61, l22, 1).
weight(l44, t62, 1).
weight(s1, t62, 1).
weight(t62, s1, 1).
weight(t62, l45, 1).
weight(l0, t63, 1).
weight(s2, t63, 1).
weight(t63, s0, 1).
weight(t63, l1, 1).
weight(l0, t64, 1).
weight(s2, t64, 1).
weight(t64, s2, 1).
weight(t64, l1, 1).
weight(l1, t65, 1).
weight(s2, t65, 1).
weight(t65, s2, 1).
weight(t65, l2, 1).
weight(l1, t66, 1).
weight(s2, t66, 1).
weight(t66, s3, 1).
weight(t66, l2, 1).
weight(l2, t67, 1).
weight(s2, t67, 1).
weight(t67, s3, 1).
weight(t67, l3, 1).
weight(l4, t68, 1).
weight(s2, t68, 1).
weight(t68, s2, 1).
weight(t68, l5, 1).
weight(l5, t69, 1).
weight(s2, t69, 1).
weight(t69, s10, 1).
weight(t69, l6, 1).
weight(l8, t70, 1).
weight(s2, t70, 1).
weight(t70, s2, 1).
weight(t70, l9, 1).
weight(l9, t71, 1).
weight(s2, t71, 1).
weight(t71, s10, 1).
weight(t71, l10, 1).
weight(l12, t72, 1).
weight(s2, t72, 1).
weight(t72, s10, 1).
weight(t72, l13, 1).
weight(l15, t73, 1).
weight(s2, t73, 1).
weight(t73, s16, 1).
weight(t73, l46, 1).
weight(l16, t74, 1).
weight(s2, t74, 1).
weight(t74, s10, 1).
weight(t74, l17, 1).
weight(l19, t75, 1).
weight(s2, t75, 1).
weight(t75, s2, 1).
weight(t75, l4, 1).
weight(l20, t76, 1).
weight(s2, t76, 1).
weight(t76, s2, 1).
weight(t76, l21, 1).
weight(l22, t77, 1).
weight(s2, t77, 1).
weight(t77, s2, 1).
weight(t77, l23, 1).
weight(l24, t78, 1).
weight(s2, t78, 1).
weight(t78, s10, 1).
weight(t78, l25, 1).
weight(l27, t79, 1).
weight(s2, t79, 1).
weight(t79, s0, 1).
weight(t79, l28, 1).
weight(l27, t80, 1).
weight(s2, t80, 1).
weight(t80, s1, 1).
weight(t80, l28, 1).
weight(l27, t81, 1).
weight(s2, t81, 1).
weight(t81, s2, 1).
weight(t81, l28, 1).
weight(l27, t82, 1).
weight(s2, t82, 1).
weight(t82, s3, 1).
weight(t82, l28, 1).
weight(l28, t83, 1).
weight(s2, t83, 1).
weight(t83, s2, 1).
weight(t83, l29, 1).
weight(l28, t84, 1).
weight(s2, t84, 1).
weight(t84, s3, 1).
weight(t84, l29, 1).
weight(l29, t85, 1).
weight(s2, t85, 1).
weight(t85, s10, 1).
weight(t85, l30, 1).
weight(l34, t86, 1).
weight(s2, t86, 1).
weight(t86, s10, 1).
weight(t86, l35, 1).
weight(l37, t87, 1).
weight(s2, t87, 1).
weight(t87, s2, 1).
weight(t87, l38, 1).
weight(l37, t88, 1).
weight(s2, t88, 1).
weight(t88, s3, 1).
weight(t88, l38, 1).
weight(l38, t89, 1).
weight(s2, t89, 1).
weight(t89, s0, 1).
weight(t89, l39, 1).
weight(l38, t90, 1).
weight(s2, t90, 1).
weight(t90, s1, 1).
weight(t90, l39, 1).
weight(l38, t91, 1).
weight(s2, t91, 1).
weight(t91, s2, 1).
weight(t91, l39, 1).
weight(l38, t92, 1).
weight(s2, t92, 1).
weight(t92, s3, 1).
weight(t92, l39, 1).
weight(l39, t93, 1).
weight(s2, t93, 1).
weight(t93, s10, 1).
weight(t93, l40, 1).
weight(l43, t94, 1).
weight(s2, t94, 1).
weight(t94, s2, 1).
weight(t94, l22, 1).
weight(l44, t95, 1).
weight(s2, t95, 1).
weight(t95, s2, 1).
weight(t95, l45, 1).
weight(l0, t96, 1).
weight(s3, t96, 1).
weight(t96, s1, 1).
weight(t96, l1, 1).
weight(l0, t97, 1).
weight(s3, t97, 1).
weight(t97, s3, 1).
weight(t97, l1, 1).
weight(l1, t98, 1).
weight(s3, t98, 1).
weight(t98, s2, 1).
weight(t98, l2, 1).
weight(l1, t99, 1).
weight(s3, t99, 1).
weight(t99, s3, 1).
weight(t99, l2, 1).
weight(l2, t100, 1).
weight(s3, t100, 1).
weight(t100, s3, 1).
weight(t100, l3, 1).
weight(l4, t101, 1).
weight(s3, t101, 1).
weight(t101, s3, 1).
weight(t101, l5, 1).
weight(l5, t102, 1).
weight(s3, t102, 1).
weight(t102, s11, 1).
weight(t102, l6, 1).
weight(l8, t103, 1).
weight(s3, t103, 1).
weight(t103, s3, 1).
weight(t103, l9, 1).
weight(l9, t104, 1).
weight(s3, t104, 1).
weight(t104, s11, 1).
weight(t104, l10, 1).
weight(l12, t105, 1).
weight(s3, t105, 1).
weight(t105, s11, 1).
weight(t105, l13, 1).
weight(l15, t106, 1).
weight(s3, t106, 1).
weight(t106, s3, 1).
weight(t106, l16, 1).
weight(l16, t107, 1).
weight(s3, t107, 1).
weight(t107, s11, 1).
weight(t107, l17, 1).
weight(l19, t108, 1).
weight(s3, t108, 1).
weight(t108, s3, 1).
weight(t108, l4, 1).
weight(l20, t109, 1).
weight(s3, t109, 1).
weight(t109, s3, 1).
weight(t109, l21, 1).
weight(l22, t110, 1).
weight(s3, t110, 1).
weight(t110, s3, 1).
weight(t110, l23, 1).
weight(l24, t111, 1).
weight(s3, t111, 1).
weight(t111, s11, 1).
weight(t111, l25, 1).
weight(l27, t112, 1).
weight(s3, t112, 1).
weight(t112, s2, 1).
weight(t112, l28, 1).
weight(l27, t113, 1).
weight(s3, t113, 1).
weight(t113, s3, 1).
weight(t113, l28, 1).
weight(l28, t114, 1).
weight(s3, t114, 1).
weight(t114, s1, 1).
weight(t114, l29, 1).
weight(l28, t115, 1).
weight(s3, t115, 1).
weight(t115, s3, 1).
weight(t115, l29, 1).
weight(l29, t116, 1).
weight(s3, t116, 1).
weight(t116, s11, 1).
weight(t116, l30, 1).
weight(l34, t117, 1).
weight(s3, t117, 1).
weight(t117, s11, 1).
weight(t117, l35, 1).
weight(l37, t118, 1).
weight(s3, t118, 1).
weight(t118, s1, 1).
weight(t118, l38, 1).
weight(l37, t119, 1).
weight(s3, t119, 1).
weight(t119, s3, 1).
weight(t119, l38, 1).
weight(l38, t120, 1).
weight(s3, t120, 1).
weight(t120, s2, 1).
weight(t120, l39, 1).
weight(l38, t121, 1).
weight(s3, t121, 1).
weight(t121, s3, 1).
weight(t121, l39, 1).
weight(l39, t122, 1).
weight(s3, t122, 1).
weight(t122, s11, 1).
weight(t122, l40, 1).
weight(l43, t123, 1).
weight(s3, t123, 1).
weight(t123, s3, 1).
weight(t123, l22, 1).
weight(l44, t124, 1).
weight(s3, t124, 1).
weight(t124, s3, 1).
weight(t124, l45, 1).
weight(l3, t125, 1).
weight(s4, t125, 1).
weight(t125, s0, 1).
weight(t125, l22, 1).
weight(l23, t126, 1).
weight(s4, t126, 1).
weight(t126, s0, 1).
weight(t126, l33, 1).
weight(l33, t127, 1).
weight(s4, t127, 1).
weight(t127, s0, 1).
weight(t127, l43, 1).
weight(l3, t128, 1).
weight(s5, t128, 1).
weight(t128, s1, 1).
weight(t128, l22, 1).
weight(l23, t129, 1).
weight(s5, t129, 1).
weight(t129, s1, 1).
weight(t129, l33, 1).
weight(l33, t130, 1).
weight(s5, t130, 1).
weight(t130, s1, 1).
weight(t130, l43, 1).
weight(l3, t131, 1).
weight(s6, t131, 1).
weight(t131, s2, 1).
weight(t131, l22, 1).
weight(l23, t132, 1).
weight(s6, t132, 1).
weight(t132, s2, 1).
weight(t132, l33, 1).
weight(l33, t133, 1).
weight(s6, t133, 1).
weight(t133, s2, 1).
weight(t133, l43, 1).
weight(l3, t134, 1).
weight(s7, t134, 1).
weight(t134, s3, 1).
weight(t134, l22, 1).
weight(l23, t135, 1).
weight(s7, t135, 1).
weight(t135, s3, 1).
weight(t135, l33, 1).
weight(l33, t136, 1).
weight(s7, t136, 1).
weight(t136, s3, 1).
weight(t136, l43, 1).
weight(l6, t137, 1).
weight(s8, t137, 1).
weight(t137, s8, 1).
weight(t137, l7, 1).
weight(l7, t138, 1).
weight(s8, t138, 1).
weight(t138, s0, 1).
weight(t138, l8, 1).
weight(l10, t139, 1).
weight(s8, t139, 1).
weight(t139, s8, 1).
weight(t139, l11, 1).
weight(l11, t140, 1).
weight(s8, t140, 1).
weight(t140, s0, 1).
weight(t140, l12, 1).
weight(l13, t141, 1).
weight(s8, t141, 1).
weight(t141, s8, 1).
weight(t141, l14, 1).
weight(l14, t142, 1).
weight(s8, t142, 1).
weight(t142, s0, 1).
weight(t142, l15, 1).
weight(l17, t143, 1).
weight(s8, t143, 1).
weight(t143, s8, 1).
weight(t143, l18, 1).
weight(l18, t144, 1).
weight(s8, t144, 1).
weight(t144, s0, 1).
weight(t144, l19, 1).
weight(l25, t145, 1).
weight(s8, t145, 1).
weight(t145, s8, 1).
weight(t145, l26, 1).
weight(l26, t146, 1).
weight(s8, t146, 1).
weight(t146, s0, 1).
weight(t146, l27, 1).
weight(l30, t147, 1).
weight(s8, t147, 1).
weight(t147, s8, 1).
weight(t147, l31, 1).
weight(l31, t148, 1).
weight(s8, t148, 1).
weight(t148, s0, 1).
weight(t148, l32, 1).
weight(l35, t149, 1).
weight(s8, t149, 1).
weight(t149, s8, 1).
weight(t149, l36, 1).
weight(l36, t150, 1).
weight(s8, t150, 1).
weight(t150, s0, 1).
weight(t150, l37, 1).
weight(l40, t151, 1).
weight(s8, t151, 1).
weight(t151, s8, 1).
weight(t151, l41, 1).
weight(l41, t152, 1).
weight(s8, t152, 1).
weight(t152, s0, 1).
weight(t152, l42, 1).
weight(l6, t153, 1).
weight(s9, t153, 1).
weight(t153, s9, 1).
weight(t153, l7, 1).
weight(l7, t154, 1).
weight(s9, t154, 1).
weight(t154, s1, 1).
weight(t154, l8, 1).
weight(l10, t155, 1).
weight(s9, t155, 1).
weight(t155, s9, 1).
weight(t155, l11, 1).
weight(l11, t156, 1).
weight(s9, t156, 1).
weight(t156, s1, 1).
weight(t156, l12, 1).
weight(l13, t157, 1).
weight(s9, t157, 1).
weight(t157, s9, 1).
weight(t157, l14, 1).
weight(l14, t158, 1).
weight(s9, t158, 1).
weight(t158, s1, 1).
weight(t158, l15, 1).
weight(l17, t159, 1).
weight(s9, t159, 1).
weight(t159, s9, 1).
weight(t159, l18, 1).
weight(l18, t160, 1).
weight(s9, t160, 1).
weight(t160, s1, 1).
weight(t160, l19, 1).
weight(l25, t161, 1).
weight(s9, t161, 1).
weight(t161, s9, 1).
weight(t161, l26, 1).
weight(l26, t162, 1).
weight(s9, t162, 1).
weight(t162, s1, 1).
weight(t162, l27, 1).
weight(l30, t163, 1).
weight(s9, t163, 1).
weight(t163, s9, 1).
weight(t163, l31, 1).
weight(l31, t164, 1).
weight(s9, t164, 1).
weight(t164, s1, 1).
weight(t164, l32, 1).
weight(l35, t165, 1).
weight(s9, t165, 1).
weight(t165, s9, 1).
weight(t165, l36, 1).
weight(l36, t166, 1).
weight(s9, t166, 1).
weight(t166, s1, 1).
weight(t166, l37, 1).
weight(l40, t167, 1).
weight(s9, t167, 1).
weight(t167, s9, 1).
weight(t167, l41, 1).
weight(l41, t168, 1).
weight(s9, t168, 1).
weight(t168, s1, 1).
weight(t168, l42, 1).
weight(l6, t169, 1).
weight(s10, t169, 1).
weight(t169, s10, 1).
weight(t169, l7, 1).
weight(l7, t170, 1).
weight(s10, t170, 1).
weight(t170, s2, 1).
weight(t170, l8, 1).
weight(l10, t171, 1).
weight(s10, t171, 1).
weight(t171, s10, 1).
weight(t171, l11, 1).
weight(l11, t172, 1).
weight(s10, t172, 1).
weight(t172, s2, 1).
weight(t172, l12, 1).
weight(l13, t173, 1).
weight(s10, t173, 1).
weight(t173, s10, 1).
weight(t173, l14, 1).
weight(l14, t174, 1).
weight(s10, t174, 1).
weight(t174, s2, 1).
weight(t174, l15, 1).
weight(l17, t175, 1).
weight(s10, t175, 1).
weight(t175, s10, 1).
weight(t175, l18, 1).
weight(l18, t176, 1).
weight(s10, t176, 1).
weight(t176, s2, 1).
weight(t176, l19, 1).
weight(l25, t177, 1).
weight(s10, t177, 1).
weight(t177, s10, 1).
weight(t177, l26, 1).
weight(l26, t178, 1).
weight(s10, t178, 1).
weight(t178, s2, 1).
weight(t178, l27, 1).
weight(l30, t179, 1).
weight(s10, t179, 1).
weight(t179, s10, 1).
weight(t179, l31, 1).
weight(l31, t180, 1).
weight(s10, t180, 1).
weight(t180, s2, 1).
weight(t180, l32, 1).
weight(l35, t181, 1).
weight(s10, t181, 1).
weight(t181, s10, 1).
weight(t181, l36, 1).
weight(l36, t182, 1).
weight(s10, t182, 1).
weight(t182, s2, 1).
weight(t182, l37, 1).
weight(l40, t183, 1).
weight(s10, t183, 1).
weight(t183, s10, 1).
weight(t183, l41, 1).
weight(l41, t184, 1).
weight(s10, t184, 1).
weight(t184, s2, 1).
weight(t184, l42, 1).
weight(l6, t185, 1).
weight(s11, t185, 1).
weight(t185, s11, 1).
weight(t185, l7, 1).
weight(l7, t186, 1).
weight(s11, t186, 1).
weight(t186, s3, 1).
weight(t186, l8, 1).
weight(l10, t187, 1).
weight(s11, t187, 1).
weight(t187, s11, 1).
weight(t187, l11, 1).
weight(l11, t188, 1).
weight(s11, t188, 1).
weight(t188, s3, 1).
weight(t188, l12, 1).
weight(l13, t189, 1).
weight(s11, t189, 1).
weight(t189, s11, 1).
weight(t189, l14, 1).
weight(l14, t190, 1).
weight(s11, t190, 1).
weight(t190, s3, 1).
weight(t190, l15, 1).
weight(l17, t191, 1).
weight(s11, t191, 1).
weight(t191, s11, 1).
weight(t191, l18, 1).
weight(l18, t192, 1).
weight(s11, t192, 1).
weight(t192, s3, 1).
weight(t192, l19, 1).
weight(l25, t193, 1).
weight(s11, t193, 1).
weight(t193, s11, 1).
weight(t193, l26, 1).
weight(l26, t194, 1).
weight(s11, t194, 1).
weight(t194, s3, 1).
weight(t194, l27, 1).
weight(l30, t195, 1).
weight(s11, t195, 1).
weight(t195, s11, 1).
weight(t195, l31, 1).
weight(l31, t196, 1).
weight(s11, t196, 1).
weight(t196, s3, 1).
weight(t196, l32, 1).
weight(l35, t197, 1).
weight(s11, t197, 1).
weight(t197, s11, 1).
weight(t197, l36, 1).
weight(l36, t198, 1).
weight(s11, t198, 1).
weight(t198, s3, 1).
weight(t198, l37, 1).
weight(l40, t199, 1).
weight(s11, t199, 1).
weight(t199, s11, 1).
weight(t199, l41, 1).
weight(l41, t200, 1).
weight(s11, t200, 1).
weight(t200, s3, 1).
weight(t200, l42, 1).
weight(l3, t201, 1).
weight(s0, t201, 1).
weight(t201, l3, 1).
weight(t201, s4, 1).
weight(t201, l4, 1).
weight(l23, t202, 1).
weight(s0, t202, 1).
weight(t202, l23, 1).
weight(t202, s4, 1).
weight(t202, l24, 1).
weight(l33, t203, 1).
weight(s0, t203, 1).
weight(t203, l33, 1).
weight(t203, s4, 1).
weight(t203, l34, 1).
weight(l3, t204, 1).
weight(s1, t204, 1).
weight(t204, l3, 1).
weight(t204, s5, 1).
weight(t204, l4, 1).
weight(l23, t205, 1).
weight(s1, t205, 1).
weight(t205, l23, 1).
weight(t205, s5, 1).
weight(t205, l24, 1).
weight(l33, t206, 1).
weight(s1, t206, 1).
weight(t206, l33, 1).
weight(t206, s5, 1).
weight(t206, l34, 1).
weight(l3, t207, 1).
weight(s2, t207, 1).
weight(t207, l3, 1).
weight(t207, s6, 1).
weight(t207, l4, 1).
weight(l23, t208, 1).
weight(s2, t208, 1).
weight(t208, l23, 1).
weight(t208, s6, 1).
weight(t208, l24, 1).
weight(l33, t209, 1).
weight(s2, t209, 1).
weight(t209, l33, 1).
weight(t209, s6, 1).
weight(t209, l34, 1).
weight(l3, t210, 1).
weight(s3, t210, 1).
weight(t210, l3, 1).
weight(t210, s7, 1).
weight(t210, l4, 1).
weight(l23, t211, 1).
weight(s3, t211, 1).
weight(t211, l23, 1).
weight(t211, s7, 1).
weight(t211, l24, 1).
weight(l33, t212, 1).
weight(s3, t212, 1).
weight(t212, l33, 1).
weight(t212, s7, 1).
weight(t212, l34, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s16 1)').
cond('(>= l46 1)').

target(s16, 1).
target(l46, 1).


* Constructing constraints C' for petri net N
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun l46 () Real)
(declare-fun l1 () Real)
(declare-fun l2 () Real)
(declare-fun l5 () Real)
(declare-fun l9 () Real)
(declare-fun l16 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l28 () Real)
(declare-fun l29 () Real)
(declare-fun l38 () Real)
(declare-fun l39 () Real)
(declare-fun l44 () Real)
(declare-fun l45 () Real)
(declare-fun l22 () Real)
(declare-fun l43 () Real)
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l27 () Real)
(declare-fun l30 () Real)
(declare-fun l31 () Real)
(declare-fun l32 () Real)
(declare-fun l35 () Real)
(declare-fun l36 () Real)
(declare-fun l37 () Real)
(declare-fun l40 () Real)
(declare-fun l41 () Real)
(declare-fun s11 () Real)
(declare-fun l42 () Real)
(declare-fun s0 () Real)
(declare-fun s4 () Real)
(declare-fun s1 () Real)
(declare-fun s5 () Real)
(declare-fun s2 () Real)
(declare-fun s6 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun s3 () Real)
(declare-fun l33 () Real)
(declare-fun s7 () Real)
(declare-fun l34 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s2)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l2) l3 (- s0) s3)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 (- s0) s8)))
(assert (>= 0 (+ l46 (- l8) (- s0) s16)))
(assert (>= 0 (+ l10 (- l9) (- s0) s8)))
(assert (>= 0 (+ (- l12) l13 (- s0) s8)))
(assert (>= 0 (+ (- l15) l46 (- s0) s16)))
(assert (>= 0 (+ (- l16) l17 (- s0) s8)))
(assert (>= 0 (+ (- l19) l4)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l24) l25 (- s0) s8)))
(assert (>= 0 (+ (- l27) l28 (- s0) s1)))
(assert (>= 0 (+ (- l27) l28 (- s0) s3)))
(assert (>= 0 (+ (- l28) l29 (- s0) s2)))
(assert (>= 0 (+ (- l28) l29 (- s0) s3)))
(assert (>= 0 (+ (- l29) l30 (- s0) s8)))
(assert (>= 0 (+ (- l34) l35 (- s0) s8)))
(assert (>= 0 (+ (- l37) l38 (- s0) s2)))
(assert (>= 0 (+ (- l37) l38 (- s0) s3)))
(assert (>= 0 (+ (- l38) l39 (- s0) s1)))
(assert (>= 0 (+ (- l38) l39 (- s0) s3)))
(assert (>= 0 (+ (- l39) l40 (- s0) s8)))
(assert (>= 0 (+ l22 (- l43))))
(assert (>= 0 (+ (- l44) l45)))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s1) s3)))
(assert (>= 0 (+ (- l1) l2 s0 (- s1))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3 (- s1) s3)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 (- s1) s9)))
(assert (>= 0 (+ l46 (- l8) (- s1) s16)))
(assert (>= 0 (+ l10 (- l9) (- s1) s9)))
(assert (>= 0 (+ (- l12) l13 (- s1) s9)))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l16) l17 (- s1) s9)))
(assert (>= 0 (+ (- l19) l4)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l24) l25 (- s1) s9)))
(assert (>= 0 (+ (- l27) l28)))
(assert (>= 0 (+ (- l27) l28 (- s1) s3)))
(assert (>= 0 (+ (- l28) l29 s0 (- s1))))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l28) l29 (- s1) s2)))
(assert (>= 0 (+ (- l28) l29 (- s1) s3)))
(assert (>= 0 (+ (- l29) l30 (- s1) s9)))
(assert (>= 0 (+ (- l34) l35 (- s1) s9)))
(assert (>= 0 (+ (- l37) l38 s0 (- s1))))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l38 (- s1) s2)))
(assert (>= 0 (+ (- l37) l38 (- s1) s3)))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ (- l38) l39 (- s1) s3)))
(assert (>= 0 (+ (- l39) l40 (- s1) s9)))
(assert (>= 0 (+ l22 (- l43))))
(assert (>= 0 (+ (- l44) l45)))
(assert (>= 0 (+ (- l0) l1 s0 (- s2))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l1) l2 (- s2) s3)))
(assert (>= 0 (+ (- l2) l3 (- s2) s3)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 s10 (- s2))))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l10 (- l9) s10 (- s2))))
(assert (>= 0 (+ (- l12) l13 s10 (- s2))))
(assert (>= 0 (+ (- l15) l46 s16 (- s2))))
(assert (>= 0 (+ (- l16) l17 s10 (- s2))))
(assert (>= 0 (+ (- l19) l4)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l24) l25 s10 (- s2))))
(assert (>= 0 (+ (- l27) l28 s0 (- s2))))
(assert (>= 0 (+ (- l27) l28 s1 (- s2))))
(assert (>= 0 (+ (- l27) l28)))
(assert (>= 0 (+ (- l27) l28 (- s2) s3)))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l28) l29 (- s2) s3)))
(assert (>= 0 (+ (- l29) l30 s10 (- s2))))
(assert (>= 0 (+ (- l34) l35 s10 (- s2))))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l37) l38 (- s2) s3)))
(assert (>= 0 (+ (- l38) l39 s0 (- s2))))
(assert (>= 0 (+ (- l38) l39 s1 (- s2))))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ (- l38) l39 (- s2) s3)))
(assert (>= 0 (+ (- l39) l40 s10 (- s2))))
(assert (>= 0 (+ l22 (- l43))))
(assert (>= 0 (+ (- l44) l45)))
(assert (>= 0 (+ (- l0) l1 s1 (- s3))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2 s2 (- s3))))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ (- l5) l6 s11 (- s3))))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l10 (- l9) s11 (- s3))))
(assert (>= 0 (+ (- l12) l13 s11 (- s3))))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ (- l16) l17 s11 (- s3))))
(assert (>= 0 (+ (- l19) l4)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l24) l25 s11 (- s3))))
(assert (>= 0 (+ (- l27) l28 s2 (- s3))))
(assert (>= 0 (+ (- l27) l28)))
(assert (>= 0 (+ (- l28) l29 s1 (- s3))))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l29) l30 s11 (- s3))))
(assert (>= 0 (+ (- l34) l35 s11 (- s3))))
(assert (>= 0 (+ (- l37) l38 s1 (- s3))))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ (- l38) l39 s2 (- s3))))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ (- l39) l40 s11 (- s3))))
(assert (>= 0 (+ l22 (- l43))))
(assert (>= 0 (+ (- l44) l45)))
(assert (>= 0 (+ l22 (- l3) s0 (- s4))))
(assert (>= 0 (+ (- l23) l33 s0 (- s4))))
(assert (>= 0 (+ (- l33) l43 s0 (- s4))))
(assert (>= 0 (+ l22 (- l3) s1 (- s5))))
(assert (>= 0 (+ (- l23) l33 s1 (- s5))))
(assert (>= 0 (+ (- l33) l43 s1 (- s5))))
(assert (>= 0 (+ l22 (- l3) s2 (- s6))))
(assert (>= 0 (+ (- l23) l33 s2 (- s6))))
(assert (>= 0 (+ (- l33) l43 s2 (- s6))))
(assert (>= 0 (+ l22 (- l3) s3 (- s7))))
(assert (>= 0 (+ (- l23) l33 s3 (- s7))))
(assert (>= 0 (+ (- l33) l43 s3 (- s7))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 s0 (- s8))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 s0 (- s8))))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 s0 (- s8))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 s0 (- s8))))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27 s0 (- s8))))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 s0 (- s8))))
(assert (>= 0 (+ (- l35) l36)))
(assert (>= 0 (+ (- l36) l37 s0 (- s8))))
(assert (>= 0 (+ (- l40) l41)))
(assert (>= 0 (+ (- l41) l42 s0 (- s8))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 s1 (- s9))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 s1 (- s9))))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 s1 (- s9))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 s1 (- s9))))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27 s1 (- s9))))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 s1 (- s9))))
(assert (>= 0 (+ (- l35) l36)))
(assert (>= 0 (+ (- l36) l37 s1 (- s9))))
(assert (>= 0 (+ (- l40) l41)))
(assert (>= 0 (+ (- l41) l42 s1 (- s9))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 (- s10) s2)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 (- s10) s2)))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 (- s10) s2)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 (- s10) s2)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27 (- s10) s2)))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 (- s10) s2)))
(assert (>= 0 (+ (- l35) l36)))
(assert (>= 0 (+ (- l36) l37 (- s10) s2)))
(assert (>= 0 (+ (- l40) l41)))
(assert (>= 0 (+ (- l41) l42 (- s10) s2)))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l7) l8 (- s11) s3)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l11) l12 (- s11) s3)))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ (- l14) l15 (- s11) s3)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l18) l19 (- s11) s3)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ (- l26) l27 (- s11) s3)))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ (- l31) l32 (- s11) s3)))
(assert (>= 0 (+ (- l35) l36)))
(assert (>= 0 (+ (- l36) l37 (- s11) s3)))
(assert (>= 0 (+ (- l40) l41)))
(assert (>= 0 (+ (- l41) l42 (- s11) s3)))
(assert (>= 0 (+ l4 (- s0) s4)))
(assert (>= 0 (+ l24 (- s0) s4)))
(assert (>= 0 (+ l34 (- s0) s4)))
(assert (>= 0 (+ l4 (- s1) s5)))
(assert (>= 0 (+ l24 (- s1) s5)))
(assert (>= 0 (+ l34 (- s1) s5)))
(assert (>= 0 (+ l4 (- s2) s6)))
(assert (>= 0 (+ l24 (- s2) s6)))
(assert (>= 0 (+ l34 (- s2) s6)))
(assert (>= 0 (+ l4 (- s3) s7)))
(assert (>= 0 (+ l24 (- s3) s7)))
(assert (>= 0 (+ l34 (- s3) s7)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s16 l46 (- s0) (- l0))))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= l46 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= l5 0))
(assert (>= l9 0))
(assert (>= l16 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l38 0))
(assert (>= l39 0))
(assert (>= l44 0))
(assert (>= l45 0))
(assert (>= l22 0))
(assert (>= l43 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l30 0))
(assert (>= l31 0))
(assert (>= l32 0))
(assert (>= l35 0))
(assert (>= l36 0))
(assert (>= l37 0))
(assert (>= l40 0))
(assert (>= l41 0))
(assert (>= s11 0))
(assert (>= l42 0))
(assert (>= s0 0))
(assert (>= s4 0))
(assert (>= s1 0))
(assert (>= s5 0))
(assert (>= s2 0))
(assert (>= s6 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= s3 0))
(assert (>= l33 0))
(assert (>= s7 0))
(assert (>= l34 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 344 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


