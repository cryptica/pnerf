PETRINIZER: The checker for Petri Nets
[benchmarks/given-by-daniel-kroening/cprover_software_analysis/rand_lock_p0_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(l0, [], [t17,t16,t2,t1]).
place(l1, [t17,t16,t2,t1], [t18,t3]).
place(l2, [t18,t3], [t19,t4]).
place(s8, [t21], []).
place(l19, [t21], []).
place(l6, [t6], [t22,t7]).
place(l10, [t23,t8], [t25,t24,t10,t9]).
place(l11, [t25,t10], [t27,t26,t12,t11]).
place(l12, [t27,t26,t12,t11], [t28,t13]).
place(l3, [t29,t19,t14,t4], [t20,t5]).
place(l17, [], [t30,t15]).
place(l18, [t30,t15], []).
place(l16, [t32,t31], [t29,t14]).
place(s4, [t35,t33,t13,t7], [t36,t35,t34,t33]).
place(l7, [t22,t7], [t37,t33]).
place(l8, [t37,t33], [t38,t34]).
place(l9, [t38,t34,t24,t9], [t23,t8]).
place(l13, [t28,t13], [t39,t35]).
place(l14, [t39,t35], [t40,t36]).
place(s5, [t39,t37,t28,t22], [t40,t39,t38,t37]).
place(l15, [t40,t36], []).
place(s0, [t36,t34,t31,t26,t19,t16,t15,t14,t11,t10,t9,t8,t6,t5,t4,t1], [t41,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t41], [t31]).
place(s1, [t40,t38,t32,t30,t29,t27,t25,t24,t23,t20,t18,t17,t12,t3,t2], [t42,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16]).
place(l4, [t42,t41,t20,t5], [t42,t41,t32,t31]).
place(s3, [t42], [t32]).
place(l5, [t42,t41], [t21,t6]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l2,s0], [s0,l3]).
transition(t5, [l3,s0], [s0,l4]).
transition(t6, [l5,s0], [s0,l6]).
transition(t7, [l6,s0], [s4,l7]).
transition(t8, [l9,s0], [s0,l10]).
transition(t9, [l10,s0], [s0,l9]).
transition(t10, [l10,s0], [s0,l11]).
transition(t11, [l11,s0], [s0,l12]).
transition(t12, [l11,s0], [s1,l12]).
transition(t13, [l12,s0], [s4,l13]).
transition(t14, [l16,s0], [s0,l3]).
transition(t15, [l17,s0], [s0,l18]).
transition(t16, [l0,s1], [s0,l1]).
transition(t17, [l0,s1], [s1,l1]).
transition(t18, [l1,s1], [s1,l2]).
transition(t19, [l2,s1], [s0,l3]).
transition(t20, [l3,s1], [s1,l4]).
transition(t21, [l5,s1], [s8,l19]).
transition(t22, [l6,s1], [s5,l7]).
transition(t23, [l9,s1], [s1,l10]).
transition(t24, [l10,s1], [s1,l9]).
transition(t25, [l10,s1], [s1,l11]).
transition(t26, [l11,s1], [s0,l12]).
transition(t27, [l11,s1], [s1,l12]).
transition(t28, [l12,s1], [s5,l13]).
transition(t29, [l16,s1], [s1,l3]).
transition(t30, [l17,s1], [s1,l18]).
transition(t31, [l4,s2], [s0,l16]).
transition(t32, [l4,s3], [s1,l16]).
transition(t33, [l7,s4], [s4,l8]).
transition(t34, [l8,s4], [s0,l9]).
transition(t35, [l13,s4], [s4,l14]).
transition(t36, [l14,s4], [s0,l15]).
transition(t37, [l7,s5], [s5,l8]).
transition(t38, [l8,s5], [s1,l9]).
transition(t39, [l13,s5], [s5,l14]).
transition(t40, [l14,s5], [s1,l15]).
transition(t41, [l4,s0], [l4,s2,l5]).
transition(t42, [l4,s1], [l4,s3,l5]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s8 1)').
cond('(>= l19 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s6 () Int)
(declare-fun s7 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l2 () Int)
(declare-fun s8 () Int)
(declare-fun l19 () Int)
(declare-fun l6 () Int)
(declare-fun l10 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l3 () Int)
(declare-fun l17 () Int)
(declare-fun l18 () Int)
(declare-fun l16 () Int)
(declare-fun s4 () Int)
(declare-fun l7 () Int)
(declare-fun l8 () Int)
(declare-fun l9 () Int)
(declare-fun l13 () Int)
(declare-fun l14 () Int)
(declare-fun s5 () Int)
(declare-fun l15 () Int)
(declare-fun s0 () Int)
(declare-fun s2 () Int)
(declare-fun s1 () Int)
(declare-fun l4 () Int)
(declare-fun s3 () Int)
(declare-fun l5 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l2 0))
(assert (>= s8 0))
(assert (>= l19 0))
(assert (>= l6 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l3 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l16 0))
(assert (>= s4 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= s5 0))
(assert (>= l15 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= s1 0))
(assert (>= l4 0))
(assert (>= s3 0))
(assert (>= l5 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (= s6 (+ 0)))
(assert (= s7 (+ 0)))
(assert (= l0 (+ init1 (- t1) (- t16) (- t17) (- t2))))
(assert (= l1 (+ 0 t1 t16 t17 t2 (- t18) (- t3))))
(assert (= l2 (+ 0 t18 t3 (- t19) (- t4))))
(assert (= s8 (+ 0 t21)))
(assert (= l19 (+ 0 t21)))
(assert (= l6 (+ 0 t6 (- t22) (- t7))))
(assert (= l10 (+ 0 t23 t8 (- t10) (- t24) (- t25) (- t9))))
(assert (= l11 (+ 0 t10 t25 (- t11) (- t12) (- t26) (- t27))))
(assert (= l12 (+ 0 t11 t12 t26 t27 (- t13) (- t28))))
(assert (= l3 (+ 0 t14 t19 t29 t4 (- t20) (- t5))))
(assert (= l17 (+ 0 (- t15) (- t30))))
(assert (= l18 (+ 0 t15 t30)))
(assert (= l16 (+ 0 t31 t32 (- t14) (- t29))))
(assert (= s4 (+ 0 t13 t7 (- t34) (- t36))))
(assert (= l7 (+ 0 t22 t7 (- t33) (- t37))))
(assert (= l8 (+ 0 t33 t37 (- t34) (- t38))))
(assert (= l9 (+ 0 t24 t34 t38 t9 (- t23) (- t8))))
(assert (= l13 (+ 0 t13 t28 (- t35) (- t39))))
(assert (= l14 (+ 0 t35 t39 (- t36) (- t40))))
(assert (= s5 (+ 0 t22 t28 (- t38) (- t40))))
(assert (= l15 (+ 0 t36 t40)))
(assert (= s0 (+ 1 t16 t19 t26 t31 t34 t36 (- t12) (- t13) (- t2) (- t3) (- t41) (- t7))))
(assert (= s2 (+ 0 t41 (- t31))))
(assert (= s1 (+ 0 t12 t2 t3 t32 t38 t40 (- t16) (- t19) (- t21) (- t22) (- t26) (- t28) (- t42))))
(assert (= l4 (+ 0 t20 t5 (- t31) (- t32))))
(assert (= s3 (+ 0 t42 (- t32))))
(assert (= l5 (+ 0 t41 t42 (- t21) (- t6))))
(assert (>= init1 1))
(assert (>= s8 1))
(assert (>= l19 1))
(check-sat)
(get-model)

* Checking SAT(C0)
sat
(model 
  (define-fun t3 () Int
    0)
  (define-fun t28 () Int
    0)
  (define-fun t5 () Int
    0)
  (define-fun t15 () Int
    0)
  (define-fun t12 () Int
    0)
  (define-fun t20 () Int
    1)
  (define-fun t21 () Int
    1)
  (define-fun t6 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t17 () Int
    0)
  (define-fun t25 () Int
    0)
  (define-fun t26 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    0)
  (define-fun t14 () Int
    1)
  (define-fun t33 () Int
    0)
  (define-fun t40 () Int
    0)
  (define-fun t41 () Int
    1)
  (define-fun t1 () Int
    0)
  (define-fun t31 () Int
    1)
  (define-fun t23 () Int
    0)
  (define-fun t2 () Int
    1)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t30 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t24 () Int
    0)
  (define-fun t32 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    0)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t18 () Int
    0)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun s1 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun s5 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l8 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun s4 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l19 () Int
    1)
  (define-fun s8 () Int
    1)
  (define-fun l2 () Int
    0)
  (define-fun l1 () Int
    1)
  (define-fun l0 () Int
    0)
  (define-fun s7 () Int
    0)
  (define-fun s6 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t3, 0).
assignment(t28, 0).
assignment(t5, 0).
assignment(t15, 0).
assignment(t12, 0).
assignment(t20, 1).
assignment(t21, 1).
assignment(t6, 0).
assignment(init1, 1).
assignment(t17, 0).
assignment(t25, 0).
assignment(t26, 0).
assignment(t16, 0).
assignment(t7, 0).
assignment(t14, 1).
assignment(t33, 0).
assignment(t40, 0).
assignment(t41, 1).
assignment(t1, 0).
assignment(t31, 1).
assignment(t23, 0).
assignment(t2, 1).
assignment(t39, 0).
assignment(t4, 0).
assignment(t30, 0).
assignment(t8, 0).
assignment(t24, 0).
assignment(t32, 0).
assignment(t42, 0).
assignment(t19, 0).
assignment(t34, 0).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 0).
assignment(t37, 0).
assignment(t9, 0).
assignment(t11, 0).
assignment(t18, 0).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t35, 0).
assignment(t10, 0).
assignment(l5, 0).
assignment(s3, 0).
assignment(l4, 0).
assignment(s1, 0).
assignment(s2, 0).
assignment(s0, 0).
assignment(l15, 0).
assignment(s5, 0).
assignment(l14, 0).
assignment(l13, 0).
assignment(l9, 0).
assignment(l8, 0).
assignment(l7, 0).
assignment(s4, 0).
assignment(l16, 0).
assignment(l18, 0).
assignment(l17, 0).
assignment(l3, 0).
assignment(l12, 0).
assignment(l11, 0).
assignment(l10, 0).
assignment(l6, 0).
assignment(l19, 1).
assignment(s8, 1).
assignment(l2, 0).
assignment(l1, 1).
assignment(l0, 0).
assignment(s7, 0).
assignment(s6, 0).
- constraints C_theta...
(declare-fun s6 () Bool)
(declare-fun s7 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l2 () Bool)
(declare-fun s8 () Bool)
(declare-fun l19 () Bool)
(declare-fun l6 () Bool)
(declare-fun l10 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l3 () Bool)
(declare-fun l17 () Bool)
(declare-fun l18 () Bool)
(declare-fun l16 () Bool)
(declare-fun s4 () Bool)
(declare-fun l7 () Bool)
(declare-fun l8 () Bool)
(declare-fun l9 () Bool)
(declare-fun l13 () Bool)
(declare-fun l14 () Bool)
(declare-fun s5 () Bool)
(declare-fun l15 () Bool)
(declare-fun s0 () Bool)
(declare-fun s2 () Bool)
(declare-fun s1 () Bool)
(declare-fun l4 () Bool)
(declare-fun s3 () Bool)
(declare-fun l5 () Bool)

(assert (implies l0 (and (or s1 l1) (or s0 l1) (or s1 l1) (or s0 l1))))
(assert (implies l1 (and (or s1 l2) (or s1 l2))))
(assert (implies l2 (and (or s0 l3) (or s0 l3))))
(assert (implies l6 (and (or s5 l7) (or s4 l7))))
(assert (implies l10 (and (or s1 l11) (or s1 l9) (or s0 l11) (or s0 l9))))
(assert (implies l11 (and (or s1 l12) (or s0 l12) (or s1 l12) (or s0 l12))))
(assert (implies l12 (and (or s5 l13) (or s4 l13))))
(assert (implies l3 (and (or s1 l4) (or s0 l4))))
(assert (implies l17 (and (or s1 l18) (or s0 l18))))
(assert (implies l16 (and (or s1 l3) (or s0 l3))))
(assert (implies s4 (and (or s0 l15) (or s4 l14) (or s0 l9) (or s4 l8))))
(assert (implies l7 (and (or s5 l8) (or s4 l8))))
(assert (implies l8 (and (or s1 l9) (or s0 l9))))
(assert (implies l9 (and (or s1 l10) (or s0 l10))))
(assert (implies l13 (and (or s5 l14) (or s4 l14))))
(assert (implies l14 (and (or s1 l15) (or s0 l15))))
(assert (implies s5 (and (or s1 l15) (or s5 l14) (or s1 l9) (or s5 l8))))
(assert (implies s0 (and (or l4 s2 l5) (or s0 l18) (or s0 l3) (or s4 l13) (or s1 l12) (or s0 l12) (or s0 l11) (or s0 l9) (or s0 l10) (or s4 l7) (or s0 l6) (or s0 l4) (or s0 l3) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies s2 (or s0 l16)))
(assert (implies s1 (and (or l4 s3 l5) (or s1 l18) (or s1 l3) (or s5 l13) (or s1 l12) (or s0 l12) (or s1 l11) (or s1 l9) (or s1 l10) (or s5 l7) (or s8 l19) (or s1 l4) (or s0 l3) (or s1 l2) (or s1 l1) (or s0 l1))))
(assert (implies l4 (and (or l4 s3 l5) (or l4 s2 l5) (or s1 l16) (or s0 l16))))
(assert (implies s3 (or s1 l16)))
(assert (implies l5 (and (or s8 l19) (or s0 l6))))

(assert (or s0 l0))

(assert (not l19))
(assert (not s8))
(assert (not l1))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 62 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

