PETRINIZER: The checker for Petri Nets
[benchmarks/given-by-daniel-kroening/cprover_software_analysis/conditionals_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s1, [], []).
place(s3, [], []).
place(l42, [], []).
place(l43, [], []).
place(l0, [], [t2,t1]).
place(l1, [], [t4,t3]).
place(l4, [t5], [t8,t7]).
place(l5, [t6], [t10,t9]).
place(l6, [t9,t7], [t12,t11]).
place(l7, [t10,t8], [t14,t13]).
place(l8, [t13,t11], [t16,t15]).
place(l9, [t14,t12], [t18,t17]).
place(l10, [t17,t15], [t20,t19]).
place(l11, [t18,t16], [t22,t21]).
place(l12, [t21,t19], [t23]).
place(l13, [t22,t20], [t24]).
place(l20, [], [t27]).
place(l21, [t26], [t28]).
place(l22, [t25], [t29]).
place(l23, [], [t30]).
place(l24, [t29,t27], [t32,t31]).
place(l25, [t30,t28], [t34,t33]).
place(l26, [t31], [t35]).
place(l27, [t33], [t36]).
place(l28, [], [t37]).
place(l29, [t36], [t38]).
place(l30, [t32], [t39]).
place(l31, [t34], [t40]).
place(s4, [t40,t35], []).
place(l44, [t40,t35], []).
place(l32, [t39,t37], [t41]).
place(l33, [t38], [t42]).
place(l2, [t43,t3,t1], [t5]).
place(l3, [t44,t4,t2], [t6]).
place(l40, [t45], [t45]).
place(l41, [t46], [t46]).
place(l14, [t23], [t47]).
place(l15, [t24], [t48]).
place(l16, [t47], [t49]).
place(l18, [t49], [t25]).
place(l17, [t48], [t50]).
place(l19, [t50], [t26]).
place(l34, [t41], [t51]).
place(l35, [t42], [t52]).
place(l36, [t51], [t53]).
place(l38, [t53], [t43]).
place(l37, [t52], [t54]).
place(s2, [t52,t51,t48,t47,t42,t41,t24,t23], [t54,t53,t52,t51,t50,t49,t48,t47]).
place(s0, [t54,t53,t50,t49,t46,t45,t44,t43,t39,t38,t37,t36,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1], [t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(l39, [t54], [t44]).

transition(t1, [l0,s0], [s0,l2]).
transition(t2, [l0,s0], [s0,l3]).
transition(t3, [l1,s0], [s0,l2]).
transition(t4, [l1,s0], [s0,l3]).
transition(t5, [l2,s0], [s0,l4]).
transition(t6, [l3,s0], [s0,l5]).
transition(t7, [l4,s0], [s0,l6]).
transition(t8, [l4,s0], [s0,l7]).
transition(t9, [l5,s0], [s0,l6]).
transition(t10, [l5,s0], [s0,l7]).
transition(t11, [l6,s0], [s0,l8]).
transition(t12, [l6,s0], [s0,l9]).
transition(t13, [l7,s0], [s0,l8]).
transition(t14, [l7,s0], [s0,l9]).
transition(t15, [l8,s0], [s0,l10]).
transition(t16, [l8,s0], [s0,l11]).
transition(t17, [l9,s0], [s0,l10]).
transition(t18, [l9,s0], [s0,l11]).
transition(t19, [l10,s0], [s0,l12]).
transition(t20, [l10,s0], [s0,l13]).
transition(t21, [l11,s0], [s0,l12]).
transition(t22, [l11,s0], [s0,l13]).
transition(t23, [l12,s0], [s2,l14]).
transition(t24, [l13,s0], [s2,l15]).
transition(t25, [l18,s0], [s0,l22]).
transition(t26, [l19,s0], [s0,l21]).
transition(t27, [l20,s0], [s0,l24]).
transition(t28, [l21,s0], [s0,l25]).
transition(t29, [l22,s0], [s0,l24]).
transition(t30, [l23,s0], [s0,l25]).
transition(t31, [l24,s0], [s0,l26]).
transition(t32, [l24,s0], [s0,l30]).
transition(t33, [l25,s0], [s0,l27]).
transition(t34, [l25,s0], [s0,l31]).
transition(t35, [l26,s0], [s4,l44]).
transition(t36, [l27,s0], [s0,l29]).
transition(t37, [l28,s0], [s0,l32]).
transition(t38, [l29,s0], [s0,l33]).
transition(t39, [l30,s0], [s0,l32]).
transition(t40, [l31,s0], [s4,l44]).
transition(t41, [l32,s0], [s2,l34]).
transition(t42, [l33,s0], [s2,l35]).
transition(t43, [l38,s0], [s0,l2]).
transition(t44, [l39,s0], [s0,l3]).
transition(t45, [l40,s0], [l40,s0]).
transition(t46, [l41,s0], [l41,s0]).
transition(t47, [l14,s2], [s2,l16]).
transition(t48, [l15,s2], [s2,l17]).
transition(t49, [l16,s2], [s0,l18]).
transition(t50, [l17,s2], [s0,l19]).
transition(t51, [l34,s2], [s2,l36]).
transition(t52, [l35,s2], [s2,l37]).
transition(t53, [l36,s2], [s0,l38]).
transition(t54, [l37,s2], [s0,l39]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s4 1)').
cond('(>= l44 1)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s1 () Int)
(declare-fun s3 () Int)
(declare-fun l42 () Int)
(declare-fun l43 () Int)
(declare-fun l0 () Int)
(declare-fun l1 () Int)
(declare-fun l4 () Int)
(declare-fun l5 () Int)
(declare-fun l6 () Int)
(declare-fun l7 () Int)
(declare-fun l8 () Int)
(declare-fun l9 () Int)
(declare-fun l10 () Int)
(declare-fun l11 () Int)
(declare-fun l12 () Int)
(declare-fun l13 () Int)
(declare-fun l20 () Int)
(declare-fun l21 () Int)
(declare-fun l22 () Int)
(declare-fun l23 () Int)
(declare-fun l24 () Int)
(declare-fun l25 () Int)
(declare-fun l26 () Int)
(declare-fun l27 () Int)
(declare-fun l28 () Int)
(declare-fun l29 () Int)
(declare-fun l30 () Int)
(declare-fun l31 () Int)
(declare-fun s4 () Int)
(declare-fun l44 () Int)
(declare-fun l32 () Int)
(declare-fun l33 () Int)
(declare-fun l2 () Int)
(declare-fun l3 () Int)
(declare-fun l40 () Int)
(declare-fun l41 () Int)
(declare-fun l14 () Int)
(declare-fun l15 () Int)
(declare-fun l16 () Int)
(declare-fun l18 () Int)
(declare-fun l17 () Int)
(declare-fun l19 () Int)
(declare-fun l34 () Int)
(declare-fun l35 () Int)
(declare-fun l36 () Int)
(declare-fun l38 () Int)
(declare-fun l37 () Int)
(declare-fun s2 () Int)
(declare-fun s0 () Int)
(declare-fun l39 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(declare-fun t27 () Int)
(declare-fun t28 () Int)
(declare-fun t29 () Int)
(declare-fun t30 () Int)
(declare-fun t31 () Int)
(declare-fun t32 () Int)
(declare-fun t33 () Int)
(declare-fun t34 () Int)
(declare-fun t35 () Int)
(declare-fun t36 () Int)
(declare-fun t37 () Int)
(declare-fun t38 () Int)
(declare-fun t39 () Int)
(declare-fun t40 () Int)
(declare-fun t41 () Int)
(declare-fun t42 () Int)
(declare-fun t43 () Int)
(declare-fun t44 () Int)
(declare-fun t45 () Int)
(declare-fun t46 () Int)
(declare-fun t47 () Int)
(declare-fun t48 () Int)
(declare-fun t49 () Int)
(declare-fun t50 () Int)
(declare-fun t51 () Int)
(declare-fun t52 () Int)
(declare-fun t53 () Int)
(declare-fun t54 () Int)
(assert (>= s1 0))
(assert (>= s3 0))
(assert (>= l42 0))
(assert (>= l43 0))
(assert (>= l0 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l30 0))
(assert (>= l31 0))
(assert (>= s4 0))
(assert (>= l44 0))
(assert (>= l32 0))
(assert (>= l33 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l40 0))
(assert (>= l41 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l18 0))
(assert (>= l17 0))
(assert (>= l19 0))
(assert (>= l34 0))
(assert (>= l35 0))
(assert (>= l36 0))
(assert (>= l38 0))
(assert (>= l37 0))
(assert (>= s2 0))
(assert (>= s0 0))
(assert (>= l39 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (>= t27 0))
(assert (>= t28 0))
(assert (>= t29 0))
(assert (>= t30 0))
(assert (>= t31 0))
(assert (>= t32 0))
(assert (>= t33 0))
(assert (>= t34 0))
(assert (>= t35 0))
(assert (>= t36 0))
(assert (>= t37 0))
(assert (>= t38 0))
(assert (>= t39 0))
(assert (>= t40 0))
(assert (>= t41 0))
(assert (>= t42 0))
(assert (>= t43 0))
(assert (>= t44 0))
(assert (>= t45 0))
(assert (>= t46 0))
(assert (>= t47 0))
(assert (>= t48 0))
(assert (>= t49 0))
(assert (>= t50 0))
(assert (>= t51 0))
(assert (>= t52 0))
(assert (>= t53 0))
(assert (>= t54 0))
(assert (= s1 (+ 0)))
(assert (= s3 (+ 0)))
(assert (= l42 (+ 0)))
(assert (= l43 (+ 0)))
(assert (= l0 (+ init1 (- t1) (- t2))))
(assert (= l1 (+ 0 (- t3) (- t4))))
(assert (= l4 (+ 0 t5 (- t7) (- t8))))
(assert (= l5 (+ 0 t6 (- t10) (- t9))))
(assert (= l6 (+ 0 t7 t9 (- t11) (- t12))))
(assert (= l7 (+ 0 t10 t8 (- t13) (- t14))))
(assert (= l8 (+ 0 t11 t13 (- t15) (- t16))))
(assert (= l9 (+ 0 t12 t14 (- t17) (- t18))))
(assert (= l10 (+ 0 t15 t17 (- t19) (- t20))))
(assert (= l11 (+ 0 t16 t18 (- t21) (- t22))))
(assert (= l12 (+ 0 t19 t21 (- t23))))
(assert (= l13 (+ 0 t20 t22 (- t24))))
(assert (= l20 (+ 0 (- t27))))
(assert (= l21 (+ 0 t26 (- t28))))
(assert (= l22 (+ 0 t25 (- t29))))
(assert (= l23 (+ 0 (- t30))))
(assert (= l24 (+ 0 t27 t29 (- t31) (- t32))))
(assert (= l25 (+ 0 t28 t30 (- t33) (- t34))))
(assert (= l26 (+ 0 t31 (- t35))))
(assert (= l27 (+ 0 t33 (- t36))))
(assert (= l28 (+ 0 (- t37))))
(assert (= l29 (+ 0 t36 (- t38))))
(assert (= l30 (+ 0 t32 (- t39))))
(assert (= l31 (+ 0 t34 (- t40))))
(assert (= s4 (+ 0 t35 t40)))
(assert (= l44 (+ 0 t35 t40)))
(assert (= l32 (+ 0 t37 t39 (- t41))))
(assert (= l33 (+ 0 t38 (- t42))))
(assert (= l2 (+ 0 t1 t3 t43 (- t5))))
(assert (= l3 (+ 0 t2 t4 t44 (- t6))))
(assert (= l40 (+ 0)))
(assert (= l41 (+ 0)))
(assert (= l14 (+ 0 t23 (- t47))))
(assert (= l15 (+ 0 t24 (- t48))))
(assert (= l16 (+ 0 t47 (- t49))))
(assert (= l18 (+ 0 t49 (- t25))))
(assert (= l17 (+ 0 t48 (- t50))))
(assert (= l19 (+ 0 t50 (- t26))))
(assert (= l34 (+ 0 t41 (- t51))))
(assert (= l35 (+ 0 t42 (- t52))))
(assert (= l36 (+ 0 t51 (- t53))))
(assert (= l38 (+ 0 t53 (- t43))))
(assert (= l37 (+ 0 t52 (- t54))))
(assert (= s2 (+ 0 t23 t24 t41 t42 (- t49) (- t50) (- t53) (- t54))))
(assert (= s0 (+ 1 t49 t50 t53 t54 (- t23) (- t24) (- t35) (- t40) (- t41) (- t42))))
(assert (= l39 (+ 0 t54 (- t44))))
(assert (>= init1 1))
(assert (>= s4 1))
(assert (>= l44 1))
(check-sat)
(get-model)

* Checking SAT(C0)
sat
(model 
  (define-fun t28 () Int
    1)
  (define-fun t3 () Int
    0)
  (define-fun t5 () Int
    1)
  (define-fun t15 () Int
    0)
  (define-fun t6 () Int
    0)
  (define-fun t14 () Int
    0)
  (define-fun t16 () Int
    0)
  (define-fun t7 () Int
    1)
  (define-fun t51 () Int
    0)
  (define-fun t53 () Int
    0)
  (define-fun t33 () Int
    0)
  (define-fun t40 () Int
    1)
  (define-fun t41 () Int
    0)
  (define-fun t31 () Int
    0)
  (define-fun t2 () Int
    0)
  (define-fun t39 () Int
    0)
  (define-fun t4 () Int
    0)
  (define-fun t52 () Int
    0)
  (define-fun t49 () Int
    0)
  (define-fun t8 () Int
    0)
  (define-fun t24 () Int
    1)
  (define-fun t54 () Int
    0)
  (define-fun t37 () Int
    0)
  (define-fun t9 () Int
    0)
  (define-fun t18 () Int
    0)
  (define-fun t35 () Int
    0)
  (define-fun t12 () Int
    1)
  (define-fun t20 () Int
    1)
  (define-fun t21 () Int
    0)
  (define-fun init1 () Int
    1)
  (define-fun t17 () Int
    1)
  (define-fun t26 () Int
    1)
  (define-fun t25 () Int
    0)
  (define-fun t44 () Int
    0)
  (define-fun t48 () Int
    1)
  (define-fun t1 () Int
    1)
  (define-fun t23 () Int
    0)
  (define-fun t30 () Int
    0)
  (define-fun t43 () Int
    0)
  (define-fun t47 () Int
    0)
  (define-fun t50 () Int
    1)
  (define-fun t32 () Int
    0)
  (define-fun t42 () Int
    0)
  (define-fun t19 () Int
    0)
  (define-fun t34 () Int
    1)
  (define-fun t36 () Int
    0)
  (define-fun t22 () Int
    0)
  (define-fun t13 () Int
    0)
  (define-fun t11 () Int
    0)
  (define-fun t27 () Int
    0)
  (define-fun t38 () Int
    0)
  (define-fun t29 () Int
    0)
  (define-fun t10 () Int
    0)
  (define-fun t46 () Int
    0)
  (define-fun t45 () Int
    0)
  (define-fun l39 () Int
    0)
  (define-fun s0 () Int
    0)
  (define-fun s2 () Int
    0)
  (define-fun l37 () Int
    0)
  (define-fun l38 () Int
    0)
  (define-fun l36 () Int
    0)
  (define-fun l35 () Int
    0)
  (define-fun l34 () Int
    0)
  (define-fun l19 () Int
    0)
  (define-fun l17 () Int
    0)
  (define-fun l18 () Int
    0)
  (define-fun l16 () Int
    0)
  (define-fun l15 () Int
    0)
  (define-fun l14 () Int
    0)
  (define-fun l41 () Int
    0)
  (define-fun l40 () Int
    0)
  (define-fun l3 () Int
    0)
  (define-fun l2 () Int
    0)
  (define-fun l33 () Int
    0)
  (define-fun l32 () Int
    0)
  (define-fun l44 () Int
    1)
  (define-fun s4 () Int
    1)
  (define-fun l31 () Int
    0)
  (define-fun l30 () Int
    0)
  (define-fun l29 () Int
    0)
  (define-fun l28 () Int
    0)
  (define-fun l27 () Int
    0)
  (define-fun l26 () Int
    0)
  (define-fun l25 () Int
    0)
  (define-fun l24 () Int
    0)
  (define-fun l23 () Int
    0)
  (define-fun l22 () Int
    0)
  (define-fun l21 () Int
    0)
  (define-fun l20 () Int
    0)
  (define-fun l13 () Int
    0)
  (define-fun l12 () Int
    0)
  (define-fun l11 () Int
    0)
  (define-fun l10 () Int
    0)
  (define-fun l9 () Int
    0)
  (define-fun l8 () Int
    0)
  (define-fun l7 () Int
    0)
  (define-fun l6 () Int
    0)
  (define-fun l5 () Int
    0)
  (define-fun l4 () Int
    0)
  (define-fun l1 () Int
    0)
  (define-fun l0 () Int
    0)
  (define-fun l43 () Int
    0)
  (define-fun l42 () Int
    0)
  (define-fun s3 () Int
    0)
  (define-fun s1 () Int
    0)
)

* Constructing trap constraints C_theta for model A
- model A...
assignment(t28, 1).
assignment(t3, 0).
assignment(t5, 1).
assignment(t15, 0).
assignment(t6, 0).
assignment(t14, 0).
assignment(t16, 0).
assignment(t7, 1).
assignment(t51, 0).
assignment(t53, 0).
assignment(t33, 0).
assignment(t40, 1).
assignment(t41, 0).
assignment(t31, 0).
assignment(t2, 0).
assignment(t39, 0).
assignment(t4, 0).
assignment(t52, 0).
assignment(t49, 0).
assignment(t8, 0).
assignment(t24, 1).
assignment(t54, 0).
assignment(t37, 0).
assignment(t9, 0).
assignment(t18, 0).
assignment(t35, 0).
assignment(t12, 1).
assignment(t20, 1).
assignment(t21, 0).
assignment(init1, 1).
assignment(t17, 1).
assignment(t26, 1).
assignment(t25, 0).
assignment(t44, 0).
assignment(t48, 1).
assignment(t1, 1).
assignment(t23, 0).
assignment(t30, 0).
assignment(t43, 0).
assignment(t47, 0).
assignment(t50, 1).
assignment(t32, 0).
assignment(t42, 0).
assignment(t19, 0).
assignment(t34, 1).
assignment(t36, 0).
assignment(t22, 0).
assignment(t13, 0).
assignment(t11, 0).
assignment(t27, 0).
assignment(t38, 0).
assignment(t29, 0).
assignment(t10, 0).
assignment(t46, 0).
assignment(t45, 0).
assignment(l39, 0).
assignment(s0, 0).
assignment(s2, 0).
assignment(l37, 0).
assignment(l38, 0).
assignment(l36, 0).
assignment(l35, 0).
assignment(l34, 0).
assignment(l19, 0).
assignment(l17, 0).
assignment(l18, 0).
assignment(l16, 0).
assignment(l15, 0).
assignment(l14, 0).
assignment(l41, 0).
assignment(l40, 0).
assignment(l3, 0).
assignment(l2, 0).
assignment(l33, 0).
assignment(l32, 0).
assignment(l44, 1).
assignment(s4, 1).
assignment(l31, 0).
assignment(l30, 0).
assignment(l29, 0).
assignment(l28, 0).
assignment(l27, 0).
assignment(l26, 0).
assignment(l25, 0).
assignment(l24, 0).
assignment(l23, 0).
assignment(l22, 0).
assignment(l21, 0).
assignment(l20, 0).
assignment(l13, 0).
assignment(l12, 0).
assignment(l11, 0).
assignment(l10, 0).
assignment(l9, 0).
assignment(l8, 0).
assignment(l7, 0).
assignment(l6, 0).
assignment(l5, 0).
assignment(l4, 0).
assignment(l1, 0).
assignment(l0, 0).
assignment(l43, 0).
assignment(l42, 0).
assignment(s3, 0).
assignment(s1, 0).
- constraints C_theta...
(declare-fun s1 () Bool)
(declare-fun s3 () Bool)
(declare-fun l42 () Bool)
(declare-fun l43 () Bool)
(declare-fun l0 () Bool)
(declare-fun l1 () Bool)
(declare-fun l4 () Bool)
(declare-fun l5 () Bool)
(declare-fun l6 () Bool)
(declare-fun l7 () Bool)
(declare-fun l8 () Bool)
(declare-fun l9 () Bool)
(declare-fun l10 () Bool)
(declare-fun l11 () Bool)
(declare-fun l12 () Bool)
(declare-fun l13 () Bool)
(declare-fun l20 () Bool)
(declare-fun l21 () Bool)
(declare-fun l22 () Bool)
(declare-fun l23 () Bool)
(declare-fun l24 () Bool)
(declare-fun l25 () Bool)
(declare-fun l26 () Bool)
(declare-fun l27 () Bool)
(declare-fun l28 () Bool)
(declare-fun l29 () Bool)
(declare-fun l30 () Bool)
(declare-fun l31 () Bool)
(declare-fun s4 () Bool)
(declare-fun l44 () Bool)
(declare-fun l32 () Bool)
(declare-fun l33 () Bool)
(declare-fun l2 () Bool)
(declare-fun l3 () Bool)
(declare-fun l40 () Bool)
(declare-fun l41 () Bool)
(declare-fun l14 () Bool)
(declare-fun l15 () Bool)
(declare-fun l16 () Bool)
(declare-fun l18 () Bool)
(declare-fun l17 () Bool)
(declare-fun l19 () Bool)
(declare-fun l34 () Bool)
(declare-fun l35 () Bool)
(declare-fun l36 () Bool)
(declare-fun l38 () Bool)
(declare-fun l37 () Bool)
(declare-fun s2 () Bool)
(declare-fun s0 () Bool)
(declare-fun l39 () Bool)

(assert (implies l0 (and (or s0 l3) (or s0 l2))))
(assert (implies l1 (and (or s0 l3) (or s0 l2))))
(assert (implies l4 (and (or s0 l7) (or s0 l6))))
(assert (implies l5 (and (or s0 l7) (or s0 l6))))
(assert (implies l6 (and (or s0 l9) (or s0 l8))))
(assert (implies l7 (and (or s0 l9) (or s0 l8))))
(assert (implies l8 (and (or s0 l11) (or s0 l10))))
(assert (implies l9 (and (or s0 l11) (or s0 l10))))
(assert (implies l10 (and (or s0 l13) (or s0 l12))))
(assert (implies l11 (and (or s0 l13) (or s0 l12))))
(assert (implies l12 (or s2 l14)))
(assert (implies l13 (or s2 l15)))
(assert (implies l20 (or s0 l24)))
(assert (implies l21 (or s0 l25)))
(assert (implies l22 (or s0 l24)))
(assert (implies l23 (or s0 l25)))
(assert (implies l24 (and (or s0 l30) (or s0 l26))))
(assert (implies l25 (and (or s0 l31) (or s0 l27))))
(assert (implies l26 (or s4 l44)))
(assert (implies l27 (or s0 l29)))
(assert (implies l28 (or s0 l32)))
(assert (implies l29 (or s0 l33)))
(assert (implies l30 (or s0 l32)))
(assert (implies l31 (or s4 l44)))
(assert (implies l32 (or s2 l34)))
(assert (implies l33 (or s2 l35)))
(assert (implies l2 (or s0 l4)))
(assert (implies l3 (or s0 l5)))
(assert (implies l40 (or l40 s0)))
(assert (implies l41 (or l41 s0)))
(assert (implies l14 (or s2 l16)))
(assert (implies l15 (or s2 l17)))
(assert (implies l16 (or s0 l18)))
(assert (implies l18 (or s0 l22)))
(assert (implies l17 (or s0 l19)))
(assert (implies l19 (or s0 l21)))
(assert (implies l34 (or s2 l36)))
(assert (implies l35 (or s2 l37)))
(assert (implies l36 (or s0 l38)))
(assert (implies l38 (or s0 l2)))
(assert (implies l37 (or s0 l39)))
(assert (implies s2 (and (or s0 l39) (or s0 l38) (or s2 l37) (or s2 l36) (or s0 l19) (or s0 l18) (or s2 l17) (or s2 l16))))
(assert (implies s0 (and (or l41 s0) (or l40 s0) (or s0 l3) (or s0 l2) (or s2 l35) (or s2 l34) (or s4 l44) (or s0 l32) (or s0 l33) (or s0 l32) (or s0 l29) (or s4 l44) (or s0 l31) (or s0 l27) (or s0 l30) (or s0 l26) (or s0 l25) (or s0 l24) (or s0 l25) (or s0 l24) (or s0 l21) (or s0 l22) (or s2 l15) (or s2 l14) (or s0 l13) (or s0 l12) (or s0 l13) (or s0 l12) (or s0 l11) (or s0 l10) (or s0 l11) (or s0 l10) (or s0 l9) (or s0 l8) (or s0 l9) (or s0 l8) (or s0 l7) (or s0 l6) (or s0 l7) (or s0 l6) (or s0 l5) (or s0 l4) (or s0 l3) (or s0 l2) (or s0 l3) (or s0 l2))))
(assert (implies l39 (or s0 l3)))

(assert (or s0 l0))

(assert (not l44))
(assert (not s4))

(check-sat)
(get-model)

* Checking SAT(C_theta)
unsat
(error "line 103 column 10: model is not available")

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------

