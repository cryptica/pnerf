PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover_software_analysis/Function_Pointer3_vs_satabs.1/main.spec.pl]

* Constructing petri net N from input file
place(s6, [], []).
place(s7, [], []).
place(s8, [t5], []).
place(l30, [t5], []).
place(l1, [t29,t28,t2,t1], [t30,t3]).
place(l4, [t31,t4], [t32,t5]).
place(l5, [t32], [t33,t6]).
place(l6, [], [t34,t7]).
place(l7, [t34,t7], []).
place(l11, [t36,t9], [t38,t11]).
place(l12, [t37,t10], [t39,t12]).
place(l13, [t39,t38,t12,t11], [t40,t13]).
place(l17, [t41,t14], [t44,t43,t17,t16]).
place(l18, [t43,t42,t16,t15], [t45,t18]).
place(l19, [t45,t18], [t47,t46,t20,t19]).
place(l20, [t47,t46,t20,t19], [t48,t21]).
place(l21, [t44,t17], [t49,t22]).
place(l22, [t49,t22], [t51,t50,t24,t23]).
place(l23, [t51,t50,t48,t24,t23,t21], [t52,t25]).
place(l28, [], [t54,t27]).
place(l29, [t54,t27], []).
place(l8, [t57,t55,t53,t26], [t35,t8]).
place(l27, [t58,t56], [t53,t26]).
place(s4, [t61,t59,t25,t13], [t62,t61,t60,t59]).
place(l14, [t40,t13], [t63,t59]).
place(l15, [t63,t59], [t64,t60]).
place(l16, [t64,t60], [t42,t41,t15,t14]).
place(l24, [t52,t25], [t65,t61]).
place(l25, [t65,t61], [t66,t62]).
place(s5, [t65,t63,t52,t40], [t66,t65,t64,t63]).
place(l26, [t66,t62], []).
place(s0, [t62,t60,t56,t55,t50,t46,t28,t27,t26,t23,t22,t21,t19,t18,t17,t16,t15,t14,t12,t11,t10,t9,t8,t7,t6,t4,t1], [t68,t67,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).
place(s2, [t68,t67], [t56,t55]).
place(l2, [t69,t67,t30,t3], [t69,t67,t57,t55]).
place(l3, [t69,t67,t33,t6], [t31,t4]).
place(s1, [t66,t64,t58,t57,t54,t53,t51,t49,t48,t47,t45,t44,t43,t42,t41,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t24,t20,t3,t2], [t70,t69,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28]).
place(l9, [t70,t68,t35,t8], [t70,t68,t58,t56]).
place(s3, [t70,t69], [t58,t57]).
place(l10, [t70,t68], [t37,t36,t10,t9]).
place(l0, [init1], [t29,t28,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l1,s0], [s1,l2]).
transition(t4, [l3,s0], [s0,l4]).
transition(t5, [l4,s0], [s8,l30]).
transition(t6, [l5,s0], [s0,l3]).
transition(t7, [l6,s0], [s0,l7]).
transition(t8, [l8,s0], [s0,l9]).
transition(t9, [l10,s0], [s0,l11]).
transition(t10, [l10,s0], [s0,l12]).
transition(t11, [l11,s0], [s0,l13]).
transition(t12, [l12,s0], [s0,l13]).
transition(t13, [l13,s0], [s4,l14]).
transition(t14, [l16,s0], [s0,l17]).
transition(t15, [l16,s0], [s0,l18]).
transition(t16, [l17,s0], [s0,l18]).
transition(t17, [l17,s0], [s0,l21]).
transition(t18, [l18,s0], [s0,l19]).
transition(t19, [l19,s0], [s0,l20]).
transition(t20, [l19,s0], [s1,l20]).
transition(t21, [l20,s0], [s0,l23]).
transition(t22, [l21,s0], [s0,l22]).
transition(t23, [l22,s0], [s0,l23]).
transition(t24, [l22,s0], [s1,l23]).
transition(t25, [l23,s0], [s4,l24]).
transition(t26, [l27,s0], [s0,l8]).
transition(t27, [l28,s0], [s0,l29]).
transition(t28, [l0,s1], [s0,l1]).
transition(t29, [l0,s1], [s1,l1]).
transition(t30, [l1,s1], [s1,l2]).
transition(t31, [l3,s1], [s1,l4]).
transition(t32, [l4,s1], [s1,l5]).
transition(t33, [l5,s1], [s1,l3]).
transition(t34, [l6,s1], [s1,l7]).
transition(t35, [l8,s1], [s1,l9]).
transition(t36, [l10,s1], [s1,l11]).
transition(t37, [l10,s1], [s1,l12]).
transition(t38, [l11,s1], [s1,l13]).
transition(t39, [l12,s1], [s1,l13]).
transition(t40, [l13,s1], [s5,l14]).
transition(t41, [l16,s1], [s1,l17]).
transition(t42, [l16,s1], [s1,l18]).
transition(t43, [l17,s1], [s1,l18]).
transition(t44, [l17,s1], [s1,l21]).
transition(t45, [l18,s1], [s1,l19]).
transition(t46, [l19,s1], [s0,l20]).
transition(t47, [l19,s1], [s1,l20]).
transition(t48, [l20,s1], [s1,l23]).
transition(t49, [l21,s1], [s1,l22]).
transition(t50, [l22,s1], [s0,l23]).
transition(t51, [l22,s1], [s1,l23]).
transition(t52, [l23,s1], [s5,l24]).
transition(t53, [l27,s1], [s1,l8]).
transition(t54, [l28,s1], [s1,l29]).
transition(t55, [l2,s2], [s0,l8]).
transition(t56, [l9,s2], [s0,l27]).
transition(t57, [l2,s3], [s1,l8]).
transition(t58, [l9,s3], [s1,l27]).
transition(t59, [l14,s4], [s4,l15]).
transition(t60, [l15,s4], [s0,l16]).
transition(t61, [l24,s4], [s4,l25]).
transition(t62, [l25,s4], [s0,l26]).
transition(t63, [l14,s5], [s5,l15]).
transition(t64, [l15,s5], [s1,l16]).
transition(t65, [l24,s5], [s5,l25]).
transition(t66, [l25,s5], [s1,l26]).
transition(t67, [l2,s0], [l2,s2,l3]).
transition(t68, [l9,s0], [l9,s2,l10]).
transition(t69, [l2,s1], [l2,s3,l3]).
transition(t70, [l9,s1], [l9,s3,l10]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l1, 1).
weight(l1, t3, 1).
weight(s0, t3, 1).
weight(t3, s1, 1).
weight(t3, l2, 1).
weight(l3, t4, 1).
weight(s0, t4, 1).
weight(t4, s0, 1).
weight(t4, l4, 1).
weight(l4, t5, 1).
weight(s0, t5, 1).
weight(t5, s8, 1).
weight(t5, l30, 1).
weight(l5, t6, 1).
weight(s0, t6, 1).
weight(t6, s0, 1).
weight(t6, l3, 1).
weight(l6, t7, 1).
weight(s0, t7, 1).
weight(t7, s0, 1).
weight(t7, l7, 1).
weight(l8, t8, 1).
weight(s0, t8, 1).
weight(t8, s0, 1).
weight(t8, l9, 1).
weight(l10, t9, 1).
weight(s0, t9, 1).
weight(t9, s0, 1).
weight(t9, l11, 1).
weight(l10, t10, 1).
weight(s0, t10, 1).
weight(t10, s0, 1).
weight(t10, l12, 1).
weight(l11, t11, 1).
weight(s0, t11, 1).
weight(t11, s0, 1).
weight(t11, l13, 1).
weight(l12, t12, 1).
weight(s0, t12, 1).
weight(t12, s0, 1).
weight(t12, l13, 1).
weight(l13, t13, 1).
weight(s0, t13, 1).
weight(t13, s4, 1).
weight(t13, l14, 1).
weight(l16, t14, 1).
weight(s0, t14, 1).
weight(t14, s0, 1).
weight(t14, l17, 1).
weight(l16, t15, 1).
weight(s0, t15, 1).
weight(t15, s0, 1).
weight(t15, l18, 1).
weight(l17, t16, 1).
weight(s0, t16, 1).
weight(t16, s0, 1).
weight(t16, l18, 1).
weight(l17, t17, 1).
weight(s0, t17, 1).
weight(t17, s0, 1).
weight(t17, l21, 1).
weight(l18, t18, 1).
weight(s0, t18, 1).
weight(t18, s0, 1).
weight(t18, l19, 1).
weight(l19, t19, 1).
weight(s0, t19, 1).
weight(t19, s0, 1).
weight(t19, l20, 1).
weight(l19, t20, 1).
weight(s0, t20, 1).
weight(t20, s1, 1).
weight(t20, l20, 1).
weight(l20, t21, 1).
weight(s0, t21, 1).
weight(t21, s0, 1).
weight(t21, l23, 1).
weight(l21, t22, 1).
weight(s0, t22, 1).
weight(t22, s0, 1).
weight(t22, l22, 1).
weight(l22, t23, 1).
weight(s0, t23, 1).
weight(t23, s0, 1).
weight(t23, l23, 1).
weight(l22, t24, 1).
weight(s0, t24, 1).
weight(t24, s1, 1).
weight(t24, l23, 1).
weight(l23, t25, 1).
weight(s0, t25, 1).
weight(t25, s4, 1).
weight(t25, l24, 1).
weight(l27, t26, 1).
weight(s0, t26, 1).
weight(t26, s0, 1).
weight(t26, l8, 1).
weight(l28, t27, 1).
weight(s0, t27, 1).
weight(t27, s0, 1).
weight(t27, l29, 1).
weight(l0, t28, 1).
weight(s1, t28, 1).
weight(t28, s0, 1).
weight(t28, l1, 1).
weight(l0, t29, 1).
weight(s1, t29, 1).
weight(t29, s1, 1).
weight(t29, l1, 1).
weight(l1, t30, 1).
weight(s1, t30, 1).
weight(t30, s1, 1).
weight(t30, l2, 1).
weight(l3, t31, 1).
weight(s1, t31, 1).
weight(t31, s1, 1).
weight(t31, l4, 1).
weight(l4, t32, 1).
weight(s1, t32, 1).
weight(t32, s1, 1).
weight(t32, l5, 1).
weight(l5, t33, 1).
weight(s1, t33, 1).
weight(t33, s1, 1).
weight(t33, l3, 1).
weight(l6, t34, 1).
weight(s1, t34, 1).
weight(t34, s1, 1).
weight(t34, l7, 1).
weight(l8, t35, 1).
weight(s1, t35, 1).
weight(t35, s1, 1).
weight(t35, l9, 1).
weight(l10, t36, 1).
weight(s1, t36, 1).
weight(t36, s1, 1).
weight(t36, l11, 1).
weight(l10, t37, 1).
weight(s1, t37, 1).
weight(t37, s1, 1).
weight(t37, l12, 1).
weight(l11, t38, 1).
weight(s1, t38, 1).
weight(t38, s1, 1).
weight(t38, l13, 1).
weight(l12, t39, 1).
weight(s1, t39, 1).
weight(t39, s1, 1).
weight(t39, l13, 1).
weight(l13, t40, 1).
weight(s1, t40, 1).
weight(t40, s5, 1).
weight(t40, l14, 1).
weight(l16, t41, 1).
weight(s1, t41, 1).
weight(t41, s1, 1).
weight(t41, l17, 1).
weight(l16, t42, 1).
weight(s1, t42, 1).
weight(t42, s1, 1).
weight(t42, l18, 1).
weight(l17, t43, 1).
weight(s1, t43, 1).
weight(t43, s1, 1).
weight(t43, l18, 1).
weight(l17, t44, 1).
weight(s1, t44, 1).
weight(t44, s1, 1).
weight(t44, l21, 1).
weight(l18, t45, 1).
weight(s1, t45, 1).
weight(t45, s1, 1).
weight(t45, l19, 1).
weight(l19, t46, 1).
weight(s1, t46, 1).
weight(t46, s0, 1).
weight(t46, l20, 1).
weight(l19, t47, 1).
weight(s1, t47, 1).
weight(t47, s1, 1).
weight(t47, l20, 1).
weight(l20, t48, 1).
weight(s1, t48, 1).
weight(t48, s1, 1).
weight(t48, l23, 1).
weight(l21, t49, 1).
weight(s1, t49, 1).
weight(t49, s1, 1).
weight(t49, l22, 1).
weight(l22, t50, 1).
weight(s1, t50, 1).
weight(t50, s0, 1).
weight(t50, l23, 1).
weight(l22, t51, 1).
weight(s1, t51, 1).
weight(t51, s1, 1).
weight(t51, l23, 1).
weight(l23, t52, 1).
weight(s1, t52, 1).
weight(t52, s5, 1).
weight(t52, l24, 1).
weight(l27, t53, 1).
weight(s1, t53, 1).
weight(t53, s1, 1).
weight(t53, l8, 1).
weight(l28, t54, 1).
weight(s1, t54, 1).
weight(t54, s1, 1).
weight(t54, l29, 1).
weight(l2, t55, 1).
weight(s2, t55, 1).
weight(t55, s0, 1).
weight(t55, l8, 1).
weight(l9, t56, 1).
weight(s2, t56, 1).
weight(t56, s0, 1).
weight(t56, l27, 1).
weight(l2, t57, 1).
weight(s3, t57, 1).
weight(t57, s1, 1).
weight(t57, l8, 1).
weight(l9, t58, 1).
weight(s3, t58, 1).
weight(t58, s1, 1).
weight(t58, l27, 1).
weight(l14, t59, 1).
weight(s4, t59, 1).
weight(t59, s4, 1).
weight(t59, l15, 1).
weight(l15, t60, 1).
weight(s4, t60, 1).
weight(t60, s0, 1).
weight(t60, l16, 1).
weight(l24, t61, 1).
weight(s4, t61, 1).
weight(t61, s4, 1).
weight(t61, l25, 1).
weight(l25, t62, 1).
weight(s4, t62, 1).
weight(t62, s0, 1).
weight(t62, l26, 1).
weight(l14, t63, 1).
weight(s5, t63, 1).
weight(t63, s5, 1).
weight(t63, l15, 1).
weight(l15, t64, 1).
weight(s5, t64, 1).
weight(t64, s1, 1).
weight(t64, l16, 1).
weight(l24, t65, 1).
weight(s5, t65, 1).
weight(t65, s5, 1).
weight(t65, l25, 1).
weight(l25, t66, 1).
weight(s5, t66, 1).
weight(t66, s1, 1).
weight(t66, l26, 1).
weight(l2, t67, 1).
weight(s0, t67, 1).
weight(t67, l2, 1).
weight(t67, s2, 1).
weight(t67, l3, 1).
weight(l9, t68, 1).
weight(s0, t68, 1).
weight(t68, l9, 1).
weight(t68, s2, 1).
weight(t68, l10, 1).
weight(l2, t69, 1).
weight(s1, t69, 1).
weight(t69, l2, 1).
weight(t69, s3, 1).
weight(t69, l3, 1).
weight(l9, t70, 1).
weight(s1, t70, 1).
weight(t70, l9, 1).
weight(t70, s3, 1).
weight(t70, l10, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s8 1)').
cond('(>= l30 1)').

target(s8, 1).
target(l30, 1).


* Constructing constraints C' for petri net N
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun l30 () Real)
(declare-fun l1 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l28 () Real)
(declare-fun l29 () Real)
(declare-fun l8 () Real)
(declare-fun l27 () Real)
(declare-fun s4 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun s5 () Real)
(declare-fun l26 () Real)
(declare-fun s0 () Real)
(declare-fun s2 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun s1 () Real)
(declare-fun l9 () Real)
(declare-fun s3 () Real)
(declare-fun l10 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l1) l2 (- s0) s1)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ l30 (- l4) (- s0) s8)))
(assert (>= 0 (+ l3 (- l5))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l10) l12)))
(assert (>= 0 (+ (- l11) l13)))
(assert (>= 0 (+ (- l12) l13)))
(assert (>= 0 (+ (- l13) l14 (- s0) s4)))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ (- l16) l18)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l17) l21)))
(assert (>= 0 (+ (- l18) l19)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l19) l20 (- s0) s1)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l22) l23 (- s0) s1)))
(assert (>= 0 (+ (- l23) l24 (- s0) s4)))
(assert (>= 0 (+ (- l27) l8)))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l0) l1 s0 (- s1))))
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l1) l2)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ l3 (- l5))))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ (- l10) l12)))
(assert (>= 0 (+ (- l11) l13)))
(assert (>= 0 (+ (- l12) l13)))
(assert (>= 0 (+ (- l13) l14 (- s1) s5)))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ (- l16) l18)))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ (- l17) l21)))
(assert (>= 0 (+ (- l18) l19)))
(assert (>= 0 (+ (- l19) l20 s0 (- s1))))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ (- l20) l23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ (- l22) l23 s0 (- s1))))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ (- l23) l24 (- s1) s5)))
(assert (>= 0 (+ (- l27) l8)))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ (- l2) l8 s0 (- s2))))
(assert (>= 0 (+ l27 (- l9) s0 (- s2))))
(assert (>= 0 (+ (- l2) l8 s1 (- s3))))
(assert (>= 0 (+ l27 (- l9) s1 (- s3))))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ (- l15) l16 s0 (- s4))))
(assert (>= 0 (+ (- l24) l25)))
(assert (>= 0 (+ (- l25) l26 s0 (- s4))))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ (- l15) l16 s1 (- s5))))
(assert (>= 0 (+ (- l24) l25)))
(assert (>= 0 (+ (- l25) l26 s1 (- s5))))
(assert (>= 0 (+ l3 (- s0) s2)))
(assert (>= 0 (+ l10 (- s0) s2)))
(assert (>= 0 (+ l3 (- s1) s3)))
(assert (>= 0 (+ l10 (- s1) s3)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 s8 l30 (- s0) (- l0))))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l30 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l8 0))
(assert (>= l27 0))
(assert (>= s4 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= s5 0))
(assert (>= l26 0))
(assert (>= s0 0))
(assert (>= s2 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= s1 0))
(assert (>= l9 0))
(assert (>= s3 0))
(assert (>= l10 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 154 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


