PETRINIZER: The checker for Petri Nets
[benchmarks/given-by-daniel-kroening/cprover-PN/csm.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [t1], [t2,t1]).
place(s1, [t2], [t3]).
place(s2, [t3], [t4]).
place(s3, [t4], [t5]).
place(l2, [t6], [t8,t7]).
place(l1, [t10,t9], [t6]).
place(l6, [t8,t7,t2], [t11]).
place(l5, [t11], [t10,t9]).
place(l8, [t15,t4,t1], [t13]).
place(l13, [t16], [t18]).
place(l12, [t18], [t17]).
place(s5, [t9], [t19]).
place(s6, [t10], [t20]).
place(l4, [t20], [t21]).
place(s7, [t7], [t21]).
place(l7, [t21,t14,t3], [t20,t12]).
place(l3, [t19], [t22]).
place(s8, [t8], [t22]).
place(l10, [t22,t12], [t19,t14]).
place(l9, [t17,t13], [t23]).
place(s9, [t12], [t23]).
place(s10, [t14], [t24]).
place(l11, [t24], [t16,t15]).
place(s11, [t17], [t25]).
place(l14, [t25,t5], [t26]).
place(s12, [t18], [t26]).
place(s4, [t26,t25,t24,t23,t22,t21,t20,t19,t16,t15,t13,t11,t6,t5], [t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6]).
place(l0, [t26,t23], [t25,t24,t5,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s0,l8]).
transition(t2, [l0,s0], [s1,l6]).
transition(t3, [l0,s1], [s2,l7]).
transition(t4, [l0,s2], [s3,l8]).
transition(t5, [l0,s3], [s4,l14]).
transition(t6, [l1,s4], [s4,l2]).
transition(t7, [l2,s4], [s7,l6]).
transition(t8, [l2,s4], [s8,l6]).
transition(t9, [l5,s4], [s5,l1]).
transition(t10, [l5,s4], [s6,l1]).
transition(t11, [l6,s4], [s4,l5]).
transition(t12, [l7,s4], [s9,l10]).
transition(t13, [l8,s4], [s4,l9]).
transition(t14, [l10,s4], [s10,l7]).
transition(t15, [l11,s4], [s4,l8]).
transition(t16, [l11,s4], [s4,l13]).
transition(t17, [l12,s4], [s11,l9]).
transition(t18, [l13,s4], [s12,l12]).
transition(t19, [l10,s5], [s4,l3]).
transition(t20, [l7,s6], [s4,l4]).
transition(t21, [l4,s7], [s4,l7]).
transition(t22, [l3,s8], [s4,l10]).
transition(t23, [l9,s9], [s4,l0]).
transition(t24, [l0,s10], [s4,l11]).
transition(t25, [l0,s11], [s4,l14]).
transition(t26, [l14,s12], [s4,l0]).

init(s0, 1).
init(l0, init1).

cond('(>= init1 1)').
cond('(>= s4 1)').
cond('(>= l10 2)').


* Constructing constraint C_0 for petri net N
(declare-fun init1 () Int)
(declare-fun s0 () Int)
(declare-fun s1 () Int)
(declare-fun s2 () Int)
(declare-fun s3 () Int)
(declare-fun l2 () Int)
(declare-fun l1 () Int)
(declare-fun l6 () Int)
(declare-fun l5 () Int)
(declare-fun l8 () Int)
(declare-fun l13 () Int)
(declare-fun l12 () Int)
(declare-fun s5 () Int)
(declare-fun s6 () Int)
(declare-fun l4 () Int)
(declare-fun s7 () Int)
(declare-fun l7 () Int)
(declare-fun l3 () Int)
(declare-fun s8 () Int)
(declare-fun l10 () Int)
(declare-fun l9 () Int)
(declare-fun s9 () Int)
(declare-fun s10 () Int)
(declare-fun l11 () Int)
(declare-fun s11 () Int)
(declare-fun l14 () Int)
(declare-fun s12 () Int)
(declare-fun s4 () Int)
(declare-fun l0 () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(declare-fun t3 () Int)
(declare-fun t4 () Int)
(declare-fun t5 () Int)
(declare-fun t6 () Int)
(declare-fun t7 () Int)
(declare-fun t8 () Int)
(declare-fun t9 () Int)
(declare-fun t10 () Int)
(declare-fun t11 () Int)
(declare-fun t12 () Int)
(declare-fun t13 () Int)
(declare-fun t14 () Int)
(declare-fun t15 () Int)
(declare-fun t16 () Int)
(declare-fun t17 () Int)
(declare-fun t18 () Int)
(declare-fun t19 () Int)
(declare-fun t20 () Int)
(declare-fun t21 () Int)
(declare-fun t22 () Int)
(declare-fun t23 () Int)
(declare-fun t24 () Int)
(declare-fun t25 () Int)
(declare-fun t26 () Int)
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= l2 0))
(assert (>= l1 0))
(assert (>= l6 0))
(assert (>= l5 0))
(assert (>= l8 0))
(assert (>= l13 0))
(assert (>= l12 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= l4 0))
(assert (>= s7 0))
(assert (>= l7 0))
(assert (>= l3 0))
(assert (>= s8 0))
(assert (>= l10 0))
(assert (>= l9 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= l11 0))
(assert (>= s11 0))
(assert (>= l14 0))
(assert (>= s12 0))
(assert (>= s4 0))
(assert (>= l0 0))
(assert (>= t1 0))
(assert (>= t2 0))
(assert (>= t3 0))
(assert (>= t4 0))
(assert (>= t5 0))
(assert (>= t6 0))
(assert (>= t7 0))
(assert (>= t8 0))
(assert (>= t9 0))
(assert (>= t10 0))
(assert (>= t11 0))
(assert (>= t12 0))
(assert (>= t13 0))
(assert (>= t14 0))
(assert (>= t15 0))
(assert (>= t16 0))
(assert (>= t17 0))
(assert (>= t18 0))
(assert (>= t19 0))
(assert (>= t20 0))
(assert (>= t21 0))
(assert (>= t22 0))
(assert (>= t23 0))
(assert (>= t24 0))
(assert (>= t25 0))
(assert (>= t26 0))
(assert (= s0 (+ 1 (- t2))))
(assert (= s1 (+ 0 t2 (- t3))))
(assert (= s2 (+ 0 t3 (- t4))))
(assert (= s3 (+ 0 t4 (- t5))))
(assert (= l2 (+ 0 t6 (- t7) (- t8))))
(assert (= l1 (+ 0 t10 t9 (- t6))))
(assert (= l6 (+ 0 t2 t7 t8 (- t11))))
(assert (= l5 (+ 0 t11 (- t10) (- t9))))
(assert (= l8 (+ 0 t1 t15 t4 (- t13))))
(assert (= l13 (+ 0 t16 (- t18))))
(assert (= l12 (+ 0 t18 (- t17))))
(assert (= s5 (+ 0 t9 (- t19))))
(assert (= s6 (+ 0 t10 (- t20))))
(assert (= l4 (+ 0 t20 (- t21))))
(assert (= s7 (+ 0 t7 (- t21))))
(assert (= l7 (+ 0 t14 t21 t3 (- t12) (- t20))))
(assert (= l3 (+ 0 t19 (- t22))))
(assert (= s8 (+ 0 t8 (- t22))))
(assert (= l10 (+ 0 t12 t22 (- t14) (- t19))))
(assert (= l9 (+ 0 t13 t17 (- t23))))
(assert (= s9 (+ 0 t12 (- t23))))
(assert (= s10 (+ 0 t14 (- t24))))
(assert (= l11 (+ 0 t24 (- t15) (- t16))))
(assert (= s11 (+ 0 t17 (- t25))))
(assert (= l14 (+ 0 t25 t5 (- t26))))
(assert (= s12 (+ 0 t18 (- t26))))
(assert (= s4 (+ 0 t19 t20 t21 t22 t23 t24 t25 t26 t5 (- t10) (- t12) (- t14) (- t17) (- t18) (- t7) (- t8) (- t9))))
(assert (= l0 (+ init1 t23 t26 (- t1) (- t2) (- t24) (- t25) (- t3) (- t4) (- t5))))
(assert (>= init1 1))
(assert (>= s4 1))
(assert (>= l10 2))
(check-sat)
(get-model)

* Checking SAT(C0)
unsat
(error "line 142 column 10: model is not available")

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------

