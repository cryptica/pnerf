PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/bingham_h50.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [t1], [t2,t1]).
place(s1, [t2], [t3]).
place(l2, [t4], [t7,t6,t5]).
place(l3, [t5], [t9,t8]).
place(l4, [t8], [t11,t10]).
place(l5, [t10], [t13,t12]).
place(l6, [t12], [t15,t14]).
place(l7, [t14], [t17,t16]).
place(l8, [t16], [t19,t18]).
place(l9, [t18], [t21,t20]).
place(l10, [t20], [t23,t22]).
place(l11, [t22], [t25,t24]).
place(l12, [t24], [t27,t26]).
place(l13, [t26], [t29,t28]).
place(l14, [t28], [t31,t30]).
place(l15, [t30], [t33,t32]).
place(l16, [t32], [t35,t34]).
place(l17, [t34], [t37,t36]).
place(l18, [t36], [t39,t38]).
place(l19, [t38], [t41,t40]).
place(l20, [t40], [t43,t42]).
place(l21, [t42], [t45,t44]).
place(l22, [t44], [t47,t46]).
place(l23, [t46], [t49,t48]).
place(l24, [t48], [t51,t50]).
place(l25, [t50], [t53,t52]).
place(l26, [t52], [t55,t54]).
place(l27, [t54], [t57,t56]).
place(l28, [t56], [t59,t58]).
place(l29, [t58], [t61,t60]).
place(l30, [t60], [t63,t62]).
place(l31, [t62], [t65,t64]).
place(l32, [t64], [t67,t66]).
place(l33, [t66], [t69,t68]).
place(l34, [t68], [t71,t70]).
place(l35, [t70], [t73,t72]).
place(l36, [t72], [t75,t74]).
place(l37, [t74], [t77,t76]).
place(l38, [t76], [t79,t78]).
place(l39, [t78], [t81,t80]).
place(l40, [t80], [t83,t82]).
place(l41, [t82], [t85,t84]).
place(l42, [t84], [t87,t86]).
place(l43, [t86], [t89,t88]).
place(l44, [t88], [t91,t90]).
place(l45, [t90], [t93,t92]).
place(l46, [t92], [t95,t94]).
place(l47, [t94], [t97,t96]).
place(l48, [t96], [t99,t98]).
place(l49, [t98], [t101,t100]).
place(l50, [t100], [t103,t102]).
place(l51, [t102], [t104]).
place(l1, [t104,t103,t101,t99,t97,t95,t93,t91,t89,t87,t85,t83,t81,t79,t77,t75,t73,t71,t69,t67,t65,t63,t61,t59,t57,t55,t53,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t6,t2,t1], [t4]).
place(s3, [t4], [t105]).
place(s4, [t6], [t106]).
place(s5, [t7], [t107]).
place(s6, [t9], [t108]).
place(s7, [t11], [t109]).
place(s8, [t13], [t110]).
place(s9, [t15], [t111]).
place(s10, [t17], [t112]).
place(s11, [t19], [t113]).
place(s12, [t21], [t114]).
place(s13, [t23], [t115]).
place(s14, [t25], [t116]).
place(s15, [t27], [t117]).
place(s16, [t29], [t118]).
place(s17, [t31], [t119]).
place(s18, [t33], [t120]).
place(s19, [t35], [t121]).
place(s20, [t37], [t122]).
place(s21, [t39], [t123]).
place(s22, [t41], [t124]).
place(s23, [t43], [t125]).
place(s24, [t45], [t126]).
place(s25, [t47], [t127]).
place(s26, [t49], [t128]).
place(s27, [t51], [t129]).
place(s28, [t53], [t130]).
place(s29, [t55], [t131]).
place(s30, [t57], [t132]).
place(s31, [t59], [t133]).
place(s32, [t61], [t134]).
place(s33, [t63], [t135]).
place(s34, [t65], [t136]).
place(s35, [t67], [t137]).
place(s36, [t69], [t138]).
place(s37, [t71], [t139]).
place(s38, [t73], [t140]).
place(s39, [t75], [t141]).
place(s40, [t77], [t142]).
place(s41, [t79], [t143]).
place(s42, [t81], [t144]).
place(s43, [t83], [t145]).
place(s44, [t85], [t146]).
place(s45, [t87], [t147]).
place(s46, [t89], [t148]).
place(s47, [t91], [t149]).
place(s48, [t93], [t150]).
place(s49, [t95], [t151]).
place(s50, [t97], [t152]).
place(s51, [t99], [t153]).
place(s52, [t101], [t154]).
place(s53, [t103], [t155]).
place(l52, [t106,t105], [t156,t155,t154,t153,t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115,t114,t113,t112,t111,t110,t109,t108,t107]).
place(s54, [t104], [t156]).
place(s2, [t156,t155,t154,t153,t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115,t114,t113,t112,t111,t110,t109,t108,t107,t106,t105,t102,t100,t98,t96,t94,t92,t90,t88,t86,t84,t82,t80,t78,t76,t74,t72,t70,t68,t66,t64,t62,t60,t58,t56,t54,t52,t50,t48,t46,t44,t42,t40,t38,t36,t34,t32,t30,t28,t26,t24,t22,t20,t18,t16,t14,t12,t10,t8,t5,t3], [t104,t103,t102,t101,t100,t99,t98,t97,t96,t95,t94,t93,t92,t91,t90,t89,t88,t87,t86,t85,t84,t83,t82,t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4]).
place(l53, [t156,t155,t154,t153,t152,t151,t150,t149,t148,t147,t146,t145,t144,t143,t142,t141,t140,t139,t138,t137,t136,t135,t134,t133,t132,t131,t130,t129,t128,t127,t126,t125,t124,t123,t122,t121,t120,t119,t118,t117,t116,t115,t114,t113,t112,t111,t110,t109,t108,t107,t3], [t106,t105]).
place(l0, [init1], [t3,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l0,s1], [s2,l53]).
transition(t4, [l1,s2], [s3,l2]).
transition(t5, [l2,s2], [s2,l3]).
transition(t6, [l2,s2], [s4,l1]).
transition(t7, [l2,s2], [s5,l1]).
transition(t8, [l3,s2], [s2,l4]).
transition(t9, [l3,s2], [s6,l1]).
transition(t10, [l4,s2], [s2,l5]).
transition(t11, [l4,s2], [s7,l1]).
transition(t12, [l5,s2], [s2,l6]).
transition(t13, [l5,s2], [s8,l1]).
transition(t14, [l6,s2], [s2,l7]).
transition(t15, [l6,s2], [s9,l1]).
transition(t16, [l7,s2], [s2,l8]).
transition(t17, [l7,s2], [s10,l1]).
transition(t18, [l8,s2], [s2,l9]).
transition(t19, [l8,s2], [s11,l1]).
transition(t20, [l9,s2], [s2,l10]).
transition(t21, [l9,s2], [s12,l1]).
transition(t22, [l10,s2], [s2,l11]).
transition(t23, [l10,s2], [s13,l1]).
transition(t24, [l11,s2], [s2,l12]).
transition(t25, [l11,s2], [s14,l1]).
transition(t26, [l12,s2], [s2,l13]).
transition(t27, [l12,s2], [s15,l1]).
transition(t28, [l13,s2], [s2,l14]).
transition(t29, [l13,s2], [s16,l1]).
transition(t30, [l14,s2], [s2,l15]).
transition(t31, [l14,s2], [s17,l1]).
transition(t32, [l15,s2], [s2,l16]).
transition(t33, [l15,s2], [s18,l1]).
transition(t34, [l16,s2], [s2,l17]).
transition(t35, [l16,s2], [s19,l1]).
transition(t36, [l17,s2], [s2,l18]).
transition(t37, [l17,s2], [s20,l1]).
transition(t38, [l18,s2], [s2,l19]).
transition(t39, [l18,s2], [s21,l1]).
transition(t40, [l19,s2], [s2,l20]).
transition(t41, [l19,s2], [s22,l1]).
transition(t42, [l20,s2], [s2,l21]).
transition(t43, [l20,s2], [s23,l1]).
transition(t44, [l21,s2], [s2,l22]).
transition(t45, [l21,s2], [s24,l1]).
transition(t46, [l22,s2], [s2,l23]).
transition(t47, [l22,s2], [s25,l1]).
transition(t48, [l23,s2], [s2,l24]).
transition(t49, [l23,s2], [s26,l1]).
transition(t50, [l24,s2], [s2,l25]).
transition(t51, [l24,s2], [s27,l1]).
transition(t52, [l25,s2], [s2,l26]).
transition(t53, [l25,s2], [s28,l1]).
transition(t54, [l26,s2], [s2,l27]).
transition(t55, [l26,s2], [s29,l1]).
transition(t56, [l27,s2], [s2,l28]).
transition(t57, [l27,s2], [s30,l1]).
transition(t58, [l28,s2], [s2,l29]).
transition(t59, [l28,s2], [s31,l1]).
transition(t60, [l29,s2], [s2,l30]).
transition(t61, [l29,s2], [s32,l1]).
transition(t62, [l30,s2], [s2,l31]).
transition(t63, [l30,s2], [s33,l1]).
transition(t64, [l31,s2], [s2,l32]).
transition(t65, [l31,s2], [s34,l1]).
transition(t66, [l32,s2], [s2,l33]).
transition(t67, [l32,s2], [s35,l1]).
transition(t68, [l33,s2], [s2,l34]).
transition(t69, [l33,s2], [s36,l1]).
transition(t70, [l34,s2], [s2,l35]).
transition(t71, [l34,s2], [s37,l1]).
transition(t72, [l35,s2], [s2,l36]).
transition(t73, [l35,s2], [s38,l1]).
transition(t74, [l36,s2], [s2,l37]).
transition(t75, [l36,s2], [s39,l1]).
transition(t76, [l37,s2], [s2,l38]).
transition(t77, [l37,s2], [s40,l1]).
transition(t78, [l38,s2], [s2,l39]).
transition(t79, [l38,s2], [s41,l1]).
transition(t80, [l39,s2], [s2,l40]).
transition(t81, [l39,s2], [s42,l1]).
transition(t82, [l40,s2], [s2,l41]).
transition(t83, [l40,s2], [s43,l1]).
transition(t84, [l41,s2], [s2,l42]).
transition(t85, [l41,s2], [s44,l1]).
transition(t86, [l42,s2], [s2,l43]).
transition(t87, [l42,s2], [s45,l1]).
transition(t88, [l43,s2], [s2,l44]).
transition(t89, [l43,s2], [s46,l1]).
transition(t90, [l44,s2], [s2,l45]).
transition(t91, [l44,s2], [s47,l1]).
transition(t92, [l45,s2], [s2,l46]).
transition(t93, [l45,s2], [s48,l1]).
transition(t94, [l46,s2], [s2,l47]).
transition(t95, [l46,s2], [s49,l1]).
transition(t96, [l47,s2], [s2,l48]).
transition(t97, [l47,s2], [s50,l1]).
transition(t98, [l48,s2], [s2,l49]).
transition(t99, [l48,s2], [s51,l1]).
transition(t100, [l49,s2], [s2,l50]).
transition(t101, [l49,s2], [s52,l1]).
transition(t102, [l50,s2], [s2,l51]).
transition(t103, [l50,s2], [s53,l1]).
transition(t104, [l51,s2], [s54,l1]).
transition(t105, [l53,s3], [s2,l52]).
transition(t106, [l53,s4], [s2,l52]).
transition(t107, [l52,s5], [s2,l53]).
transition(t108, [l52,s6], [s2,l53]).
transition(t109, [l52,s7], [s2,l53]).
transition(t110, [l52,s8], [s2,l53]).
transition(t111, [l52,s9], [s2,l53]).
transition(t112, [l52,s10], [s2,l53]).
transition(t113, [l52,s11], [s2,l53]).
transition(t114, [l52,s12], [s2,l53]).
transition(t115, [l52,s13], [s2,l53]).
transition(t116, [l52,s14], [s2,l53]).
transition(t117, [l52,s15], [s2,l53]).
transition(t118, [l52,s16], [s2,l53]).
transition(t119, [l52,s17], [s2,l53]).
transition(t120, [l52,s18], [s2,l53]).
transition(t121, [l52,s19], [s2,l53]).
transition(t122, [l52,s20], [s2,l53]).
transition(t123, [l52,s21], [s2,l53]).
transition(t124, [l52,s22], [s2,l53]).
transition(t125, [l52,s23], [s2,l53]).
transition(t126, [l52,s24], [s2,l53]).
transition(t127, [l52,s25], [s2,l53]).
transition(t128, [l52,s26], [s2,l53]).
transition(t129, [l52,s27], [s2,l53]).
transition(t130, [l52,s28], [s2,l53]).
transition(t131, [l52,s29], [s2,l53]).
transition(t132, [l52,s30], [s2,l53]).
transition(t133, [l52,s31], [s2,l53]).
transition(t134, [l52,s32], [s2,l53]).
transition(t135, [l52,s33], [s2,l53]).
transition(t136, [l52,s34], [s2,l53]).
transition(t137, [l52,s35], [s2,l53]).
transition(t138, [l52,s36], [s2,l53]).
transition(t139, [l52,s37], [s2,l53]).
transition(t140, [l52,s38], [s2,l53]).
transition(t141, [l52,s39], [s2,l53]).
transition(t142, [l52,s40], [s2,l53]).
transition(t143, [l52,s41], [s2,l53]).
transition(t144, [l52,s42], [s2,l53]).
transition(t145, [l52,s43], [s2,l53]).
transition(t146, [l52,s44], [s2,l53]).
transition(t147, [l52,s45], [s2,l53]).
transition(t148, [l52,s46], [s2,l53]).
transition(t149, [l52,s47], [s2,l53]).
transition(t150, [l52,s48], [s2,l53]).
transition(t151, [l52,s49], [s2,l53]).
transition(t152, [l52,s50], [s2,l53]).
transition(t153, [l52,s51], [s2,l53]).
transition(t154, [l52,s52], [s2,l53]).
transition(t155, [l52,s53], [s2,l53]).
transition(t156, [l52,s54], [s2,l53]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l1, 1).
weight(l0, t3, 1).
weight(s1, t3, 1).
weight(t3, s2, 1).
weight(t3, l53, 1).
weight(l1, t4, 1).
weight(s2, t4, 1).
weight(t4, s3, 1).
weight(t4, l2, 1).
weight(l2, t5, 1).
weight(s2, t5, 1).
weight(t5, s2, 1).
weight(t5, l3, 1).
weight(l2, t6, 1).
weight(s2, t6, 1).
weight(t6, s4, 1).
weight(t6, l1, 1).
weight(l2, t7, 1).
weight(s2, t7, 1).
weight(t7, s5, 1).
weight(t7, l1, 1).
weight(l3, t8, 1).
weight(s2, t8, 1).
weight(t8, s2, 1).
weight(t8, l4, 1).
weight(l3, t9, 1).
weight(s2, t9, 1).
weight(t9, s6, 1).
weight(t9, l1, 1).
weight(l4, t10, 1).
weight(s2, t10, 1).
weight(t10, s2, 1).
weight(t10, l5, 1).
weight(l4, t11, 1).
weight(s2, t11, 1).
weight(t11, s7, 1).
weight(t11, l1, 1).
weight(l5, t12, 1).
weight(s2, t12, 1).
weight(t12, s2, 1).
weight(t12, l6, 1).
weight(l5, t13, 1).
weight(s2, t13, 1).
weight(t13, s8, 1).
weight(t13, l1, 1).
weight(l6, t14, 1).
weight(s2, t14, 1).
weight(t14, s2, 1).
weight(t14, l7, 1).
weight(l6, t15, 1).
weight(s2, t15, 1).
weight(t15, s9, 1).
weight(t15, l1, 1).
weight(l7, t16, 1).
weight(s2, t16, 1).
weight(t16, s2, 1).
weight(t16, l8, 1).
weight(l7, t17, 1).
weight(s2, t17, 1).
weight(t17, s10, 1).
weight(t17, l1, 1).
weight(l8, t18, 1).
weight(s2, t18, 1).
weight(t18, s2, 1).
weight(t18, l9, 1).
weight(l8, t19, 1).
weight(s2, t19, 1).
weight(t19, s11, 1).
weight(t19, l1, 1).
weight(l9, t20, 1).
weight(s2, t20, 1).
weight(t20, s2, 1).
weight(t20, l10, 1).
weight(l9, t21, 1).
weight(s2, t21, 1).
weight(t21, s12, 1).
weight(t21, l1, 1).
weight(l10, t22, 1).
weight(s2, t22, 1).
weight(t22, s2, 1).
weight(t22, l11, 1).
weight(l10, t23, 1).
weight(s2, t23, 1).
weight(t23, s13, 1).
weight(t23, l1, 1).
weight(l11, t24, 1).
weight(s2, t24, 1).
weight(t24, s2, 1).
weight(t24, l12, 1).
weight(l11, t25, 1).
weight(s2, t25, 1).
weight(t25, s14, 1).
weight(t25, l1, 1).
weight(l12, t26, 1).
weight(s2, t26, 1).
weight(t26, s2, 1).
weight(t26, l13, 1).
weight(l12, t27, 1).
weight(s2, t27, 1).
weight(t27, s15, 1).
weight(t27, l1, 1).
weight(l13, t28, 1).
weight(s2, t28, 1).
weight(t28, s2, 1).
weight(t28, l14, 1).
weight(l13, t29, 1).
weight(s2, t29, 1).
weight(t29, s16, 1).
weight(t29, l1, 1).
weight(l14, t30, 1).
weight(s2, t30, 1).
weight(t30, s2, 1).
weight(t30, l15, 1).
weight(l14, t31, 1).
weight(s2, t31, 1).
weight(t31, s17, 1).
weight(t31, l1, 1).
weight(l15, t32, 1).
weight(s2, t32, 1).
weight(t32, s2, 1).
weight(t32, l16, 1).
weight(l15, t33, 1).
weight(s2, t33, 1).
weight(t33, s18, 1).
weight(t33, l1, 1).
weight(l16, t34, 1).
weight(s2, t34, 1).
weight(t34, s2, 1).
weight(t34, l17, 1).
weight(l16, t35, 1).
weight(s2, t35, 1).
weight(t35, s19, 1).
weight(t35, l1, 1).
weight(l17, t36, 1).
weight(s2, t36, 1).
weight(t36, s2, 1).
weight(t36, l18, 1).
weight(l17, t37, 1).
weight(s2, t37, 1).
weight(t37, s20, 1).
weight(t37, l1, 1).
weight(l18, t38, 1).
weight(s2, t38, 1).
weight(t38, s2, 1).
weight(t38, l19, 1).
weight(l18, t39, 1).
weight(s2, t39, 1).
weight(t39, s21, 1).
weight(t39, l1, 1).
weight(l19, t40, 1).
weight(s2, t40, 1).
weight(t40, s2, 1).
weight(t40, l20, 1).
weight(l19, t41, 1).
weight(s2, t41, 1).
weight(t41, s22, 1).
weight(t41, l1, 1).
weight(l20, t42, 1).
weight(s2, t42, 1).
weight(t42, s2, 1).
weight(t42, l21, 1).
weight(l20, t43, 1).
weight(s2, t43, 1).
weight(t43, s23, 1).
weight(t43, l1, 1).
weight(l21, t44, 1).
weight(s2, t44, 1).
weight(t44, s2, 1).
weight(t44, l22, 1).
weight(l21, t45, 1).
weight(s2, t45, 1).
weight(t45, s24, 1).
weight(t45, l1, 1).
weight(l22, t46, 1).
weight(s2, t46, 1).
weight(t46, s2, 1).
weight(t46, l23, 1).
weight(l22, t47, 1).
weight(s2, t47, 1).
weight(t47, s25, 1).
weight(t47, l1, 1).
weight(l23, t48, 1).
weight(s2, t48, 1).
weight(t48, s2, 1).
weight(t48, l24, 1).
weight(l23, t49, 1).
weight(s2, t49, 1).
weight(t49, s26, 1).
weight(t49, l1, 1).
weight(l24, t50, 1).
weight(s2, t50, 1).
weight(t50, s2, 1).
weight(t50, l25, 1).
weight(l24, t51, 1).
weight(s2, t51, 1).
weight(t51, s27, 1).
weight(t51, l1, 1).
weight(l25, t52, 1).
weight(s2, t52, 1).
weight(t52, s2, 1).
weight(t52, l26, 1).
weight(l25, t53, 1).
weight(s2, t53, 1).
weight(t53, s28, 1).
weight(t53, l1, 1).
weight(l26, t54, 1).
weight(s2, t54, 1).
weight(t54, s2, 1).
weight(t54, l27, 1).
weight(l26, t55, 1).
weight(s2, t55, 1).
weight(t55, s29, 1).
weight(t55, l1, 1).
weight(l27, t56, 1).
weight(s2, t56, 1).
weight(t56, s2, 1).
weight(t56, l28, 1).
weight(l27, t57, 1).
weight(s2, t57, 1).
weight(t57, s30, 1).
weight(t57, l1, 1).
weight(l28, t58, 1).
weight(s2, t58, 1).
weight(t58, s2, 1).
weight(t58, l29, 1).
weight(l28, t59, 1).
weight(s2, t59, 1).
weight(t59, s31, 1).
weight(t59, l1, 1).
weight(l29, t60, 1).
weight(s2, t60, 1).
weight(t60, s2, 1).
weight(t60, l30, 1).
weight(l29, t61, 1).
weight(s2, t61, 1).
weight(t61, s32, 1).
weight(t61, l1, 1).
weight(l30, t62, 1).
weight(s2, t62, 1).
weight(t62, s2, 1).
weight(t62, l31, 1).
weight(l30, t63, 1).
weight(s2, t63, 1).
weight(t63, s33, 1).
weight(t63, l1, 1).
weight(l31, t64, 1).
weight(s2, t64, 1).
weight(t64, s2, 1).
weight(t64, l32, 1).
weight(l31, t65, 1).
weight(s2, t65, 1).
weight(t65, s34, 1).
weight(t65, l1, 1).
weight(l32, t66, 1).
weight(s2, t66, 1).
weight(t66, s2, 1).
weight(t66, l33, 1).
weight(l32, t67, 1).
weight(s2, t67, 1).
weight(t67, s35, 1).
weight(t67, l1, 1).
weight(l33, t68, 1).
weight(s2, t68, 1).
weight(t68, s2, 1).
weight(t68, l34, 1).
weight(l33, t69, 1).
weight(s2, t69, 1).
weight(t69, s36, 1).
weight(t69, l1, 1).
weight(l34, t70, 1).
weight(s2, t70, 1).
weight(t70, s2, 1).
weight(t70, l35, 1).
weight(l34, t71, 1).
weight(s2, t71, 1).
weight(t71, s37, 1).
weight(t71, l1, 1).
weight(l35, t72, 1).
weight(s2, t72, 1).
weight(t72, s2, 1).
weight(t72, l36, 1).
weight(l35, t73, 1).
weight(s2, t73, 1).
weight(t73, s38, 1).
weight(t73, l1, 1).
weight(l36, t74, 1).
weight(s2, t74, 1).
weight(t74, s2, 1).
weight(t74, l37, 1).
weight(l36, t75, 1).
weight(s2, t75, 1).
weight(t75, s39, 1).
weight(t75, l1, 1).
weight(l37, t76, 1).
weight(s2, t76, 1).
weight(t76, s2, 1).
weight(t76, l38, 1).
weight(l37, t77, 1).
weight(s2, t77, 1).
weight(t77, s40, 1).
weight(t77, l1, 1).
weight(l38, t78, 1).
weight(s2, t78, 1).
weight(t78, s2, 1).
weight(t78, l39, 1).
weight(l38, t79, 1).
weight(s2, t79, 1).
weight(t79, s41, 1).
weight(t79, l1, 1).
weight(l39, t80, 1).
weight(s2, t80, 1).
weight(t80, s2, 1).
weight(t80, l40, 1).
weight(l39, t81, 1).
weight(s2, t81, 1).
weight(t81, s42, 1).
weight(t81, l1, 1).
weight(l40, t82, 1).
weight(s2, t82, 1).
weight(t82, s2, 1).
weight(t82, l41, 1).
weight(l40, t83, 1).
weight(s2, t83, 1).
weight(t83, s43, 1).
weight(t83, l1, 1).
weight(l41, t84, 1).
weight(s2, t84, 1).
weight(t84, s2, 1).
weight(t84, l42, 1).
weight(l41, t85, 1).
weight(s2, t85, 1).
weight(t85, s44, 1).
weight(t85, l1, 1).
weight(l42, t86, 1).
weight(s2, t86, 1).
weight(t86, s2, 1).
weight(t86, l43, 1).
weight(l42, t87, 1).
weight(s2, t87, 1).
weight(t87, s45, 1).
weight(t87, l1, 1).
weight(l43, t88, 1).
weight(s2, t88, 1).
weight(t88, s2, 1).
weight(t88, l44, 1).
weight(l43, t89, 1).
weight(s2, t89, 1).
weight(t89, s46, 1).
weight(t89, l1, 1).
weight(l44, t90, 1).
weight(s2, t90, 1).
weight(t90, s2, 1).
weight(t90, l45, 1).
weight(l44, t91, 1).
weight(s2, t91, 1).
weight(t91, s47, 1).
weight(t91, l1, 1).
weight(l45, t92, 1).
weight(s2, t92, 1).
weight(t92, s2, 1).
weight(t92, l46, 1).
weight(l45, t93, 1).
weight(s2, t93, 1).
weight(t93, s48, 1).
weight(t93, l1, 1).
weight(l46, t94, 1).
weight(s2, t94, 1).
weight(t94, s2, 1).
weight(t94, l47, 1).
weight(l46, t95, 1).
weight(s2, t95, 1).
weight(t95, s49, 1).
weight(t95, l1, 1).
weight(l47, t96, 1).
weight(s2, t96, 1).
weight(t96, s2, 1).
weight(t96, l48, 1).
weight(l47, t97, 1).
weight(s2, t97, 1).
weight(t97, s50, 1).
weight(t97, l1, 1).
weight(l48, t98, 1).
weight(s2, t98, 1).
weight(t98, s2, 1).
weight(t98, l49, 1).
weight(l48, t99, 1).
weight(s2, t99, 1).
weight(t99, s51, 1).
weight(t99, l1, 1).
weight(l49, t100, 1).
weight(s2, t100, 1).
weight(t100, s2, 1).
weight(t100, l50, 1).
weight(l49, t101, 1).
weight(s2, t101, 1).
weight(t101, s52, 1).
weight(t101, l1, 1).
weight(l50, t102, 1).
weight(s2, t102, 1).
weight(t102, s2, 1).
weight(t102, l51, 1).
weight(l50, t103, 1).
weight(s2, t103, 1).
weight(t103, s53, 1).
weight(t103, l1, 1).
weight(l51, t104, 1).
weight(s2, t104, 1).
weight(t104, s54, 1).
weight(t104, l1, 1).
weight(l53, t105, 1).
weight(s3, t105, 1).
weight(t105, s2, 1).
weight(t105, l52, 1).
weight(l53, t106, 1).
weight(s4, t106, 1).
weight(t106, s2, 1).
weight(t106, l52, 1).
weight(l52, t107, 1).
weight(s5, t107, 1).
weight(t107, s2, 1).
weight(t107, l53, 1).
weight(l52, t108, 1).
weight(s6, t108, 1).
weight(t108, s2, 1).
weight(t108, l53, 1).
weight(l52, t109, 1).
weight(s7, t109, 1).
weight(t109, s2, 1).
weight(t109, l53, 1).
weight(l52, t110, 1).
weight(s8, t110, 1).
weight(t110, s2, 1).
weight(t110, l53, 1).
weight(l52, t111, 1).
weight(s9, t111, 1).
weight(t111, s2, 1).
weight(t111, l53, 1).
weight(l52, t112, 1).
weight(s10, t112, 1).
weight(t112, s2, 1).
weight(t112, l53, 1).
weight(l52, t113, 1).
weight(s11, t113, 1).
weight(t113, s2, 1).
weight(t113, l53, 1).
weight(l52, t114, 1).
weight(s12, t114, 1).
weight(t114, s2, 1).
weight(t114, l53, 1).
weight(l52, t115, 1).
weight(s13, t115, 1).
weight(t115, s2, 1).
weight(t115, l53, 1).
weight(l52, t116, 1).
weight(s14, t116, 1).
weight(t116, s2, 1).
weight(t116, l53, 1).
weight(l52, t117, 1).
weight(s15, t117, 1).
weight(t117, s2, 1).
weight(t117, l53, 1).
weight(l52, t118, 1).
weight(s16, t118, 1).
weight(t118, s2, 1).
weight(t118, l53, 1).
weight(l52, t119, 1).
weight(s17, t119, 1).
weight(t119, s2, 1).
weight(t119, l53, 1).
weight(l52, t120, 1).
weight(s18, t120, 1).
weight(t120, s2, 1).
weight(t120, l53, 1).
weight(l52, t121, 1).
weight(s19, t121, 1).
weight(t121, s2, 1).
weight(t121, l53, 1).
weight(l52, t122, 1).
weight(s20, t122, 1).
weight(t122, s2, 1).
weight(t122, l53, 1).
weight(l52, t123, 1).
weight(s21, t123, 1).
weight(t123, s2, 1).
weight(t123, l53, 1).
weight(l52, t124, 1).
weight(s22, t124, 1).
weight(t124, s2, 1).
weight(t124, l53, 1).
weight(l52, t125, 1).
weight(s23, t125, 1).
weight(t125, s2, 1).
weight(t125, l53, 1).
weight(l52, t126, 1).
weight(s24, t126, 1).
weight(t126, s2, 1).
weight(t126, l53, 1).
weight(l52, t127, 1).
weight(s25, t127, 1).
weight(t127, s2, 1).
weight(t127, l53, 1).
weight(l52, t128, 1).
weight(s26, t128, 1).
weight(t128, s2, 1).
weight(t128, l53, 1).
weight(l52, t129, 1).
weight(s27, t129, 1).
weight(t129, s2, 1).
weight(t129, l53, 1).
weight(l52, t130, 1).
weight(s28, t130, 1).
weight(t130, s2, 1).
weight(t130, l53, 1).
weight(l52, t131, 1).
weight(s29, t131, 1).
weight(t131, s2, 1).
weight(t131, l53, 1).
weight(l52, t132, 1).
weight(s30, t132, 1).
weight(t132, s2, 1).
weight(t132, l53, 1).
weight(l52, t133, 1).
weight(s31, t133, 1).
weight(t133, s2, 1).
weight(t133, l53, 1).
weight(l52, t134, 1).
weight(s32, t134, 1).
weight(t134, s2, 1).
weight(t134, l53, 1).
weight(l52, t135, 1).
weight(s33, t135, 1).
weight(t135, s2, 1).
weight(t135, l53, 1).
weight(l52, t136, 1).
weight(s34, t136, 1).
weight(t136, s2, 1).
weight(t136, l53, 1).
weight(l52, t137, 1).
weight(s35, t137, 1).
weight(t137, s2, 1).
weight(t137, l53, 1).
weight(l52, t138, 1).
weight(s36, t138, 1).
weight(t138, s2, 1).
weight(t138, l53, 1).
weight(l52, t139, 1).
weight(s37, t139, 1).
weight(t139, s2, 1).
weight(t139, l53, 1).
weight(l52, t140, 1).
weight(s38, t140, 1).
weight(t140, s2, 1).
weight(t140, l53, 1).
weight(l52, t141, 1).
weight(s39, t141, 1).
weight(t141, s2, 1).
weight(t141, l53, 1).
weight(l52, t142, 1).
weight(s40, t142, 1).
weight(t142, s2, 1).
weight(t142, l53, 1).
weight(l52, t143, 1).
weight(s41, t143, 1).
weight(t143, s2, 1).
weight(t143, l53, 1).
weight(l52, t144, 1).
weight(s42, t144, 1).
weight(t144, s2, 1).
weight(t144, l53, 1).
weight(l52, t145, 1).
weight(s43, t145, 1).
weight(t145, s2, 1).
weight(t145, l53, 1).
weight(l52, t146, 1).
weight(s44, t146, 1).
weight(t146, s2, 1).
weight(t146, l53, 1).
weight(l52, t147, 1).
weight(s45, t147, 1).
weight(t147, s2, 1).
weight(t147, l53, 1).
weight(l52, t148, 1).
weight(s46, t148, 1).
weight(t148, s2, 1).
weight(t148, l53, 1).
weight(l52, t149, 1).
weight(s47, t149, 1).
weight(t149, s2, 1).
weight(t149, l53, 1).
weight(l52, t150, 1).
weight(s48, t150, 1).
weight(t150, s2, 1).
weight(t150, l53, 1).
weight(l52, t151, 1).
weight(s49, t151, 1).
weight(t151, s2, 1).
weight(t151, l53, 1).
weight(l52, t152, 1).
weight(s50, t152, 1).
weight(t152, s2, 1).
weight(t152, l53, 1).
weight(l52, t153, 1).
weight(s51, t153, 1).
weight(t153, s2, 1).
weight(t153, l53, 1).
weight(l52, t154, 1).
weight(s52, t154, 1).
weight(t154, s2, 1).
weight(t154, l53, 1).
weight(l52, t155, 1).
weight(s53, t155, 1).
weight(t155, s2, 1).
weight(t155, l53, 1).
weight(l52, t156, 1).
weight(s54, t156, 1).
weight(t156, s2, 1).
weight(t156, l53, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s2 1)').
cond('(>= l51 2)').

target(s2, 1).
target(l51, 2).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l27 () Real)
(declare-fun l28 () Real)
(declare-fun l29 () Real)
(declare-fun l30 () Real)
(declare-fun l31 () Real)
(declare-fun l32 () Real)
(declare-fun l33 () Real)
(declare-fun l34 () Real)
(declare-fun l35 () Real)
(declare-fun l36 () Real)
(declare-fun l37 () Real)
(declare-fun l38 () Real)
(declare-fun l39 () Real)
(declare-fun l40 () Real)
(declare-fun l41 () Real)
(declare-fun l42 () Real)
(declare-fun l43 () Real)
(declare-fun l44 () Real)
(declare-fun l45 () Real)
(declare-fun l46 () Real)
(declare-fun l47 () Real)
(declare-fun l48 () Real)
(declare-fun l49 () Real)
(declare-fun l50 () Real)
(declare-fun l51 () Real)
(declare-fun l1 () Real)
(declare-fun s3 () Real)
(declare-fun s4 () Real)
(declare-fun s5 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun s11 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun s17 () Real)
(declare-fun s18 () Real)
(declare-fun s19 () Real)
(declare-fun s20 () Real)
(declare-fun s21 () Real)
(declare-fun s22 () Real)
(declare-fun s23 () Real)
(declare-fun s24 () Real)
(declare-fun s25 () Real)
(declare-fun s26 () Real)
(declare-fun s27 () Real)
(declare-fun s28 () Real)
(declare-fun s29 () Real)
(declare-fun s30 () Real)
(declare-fun s31 () Real)
(declare-fun s32 () Real)
(declare-fun s33 () Real)
(declare-fun s34 () Real)
(declare-fun s35 () Real)
(declare-fun s36 () Real)
(declare-fun s37 () Real)
(declare-fun s38 () Real)
(declare-fun s39 () Real)
(declare-fun s40 () Real)
(declare-fun s41 () Real)
(declare-fun s42 () Real)
(declare-fun s43 () Real)
(declare-fun s44 () Real)
(declare-fun s45 () Real)
(declare-fun s46 () Real)
(declare-fun s47 () Real)
(declare-fun s48 () Real)
(declare-fun s49 () Real)
(declare-fun s50 () Real)
(declare-fun s51 () Real)
(declare-fun s52 () Real)
(declare-fun s53 () Real)
(declare-fun l52 () Real)
(declare-fun s54 () Real)
(declare-fun s2 () Real)
(declare-fun l53 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l53 (- s1) s2)))
(assert (>= 0 (+ (- l1) l2 (- s2) s3)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ l1 (- l2) (- s2) s4)))
(assert (>= 0 (+ l1 (- l2) (- s2) s5)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ l1 (- l3) (- s2) s6)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ l1 (- l4) (- s2) s7)))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ l1 (- l5) (- s2) s8)))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ l1 (- l6) (- s2) s9)))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ l1 (- l7) s10 (- s2))))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l1 (- l8) s11 (- s2))))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ l1 (- l9) s12 (- s2))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ l1 (- l10) s13 (- s2))))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ l1 (- l11) s14 (- s2))))
(assert (>= 0 (+ (- l12) l13)))
(assert (>= 0 (+ l1 (- l12) s15 (- s2))))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ l1 (- l13) s16 (- s2))))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ l1 (- l14) s17 (- s2))))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ l1 (- l15) s18 (- s2))))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ l1 (- l16) s19 (- s2))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ l1 (- l17) (- s2) s20)))
(assert (>= 0 (+ (- l18) l19)))
(assert (>= 0 (+ l1 (- l18) (- s2) s21)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ l1 (- l19) (- s2) s22)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ l1 (- l20) (- s2) s23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ l1 (- l21) (- s2) s24)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ l1 (- l22) (- s2) s25)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ l1 (- l23) (- s2) s26)))
(assert (>= 0 (+ (- l24) l25)))
(assert (>= 0 (+ l1 (- l24) (- s2) s27)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ l1 (- l25) (- s2) s28)))
(assert (>= 0 (+ (- l26) l27)))
(assert (>= 0 (+ l1 (- l26) (- s2) s29)))
(assert (>= 0 (+ (- l27) l28)))
(assert (>= 0 (+ l1 (- l27) (- s2) s30)))
(assert (>= 0 (+ (- l28) l29)))
(assert (>= 0 (+ l1 (- l28) (- s2) s31)))
(assert (>= 0 (+ (- l29) l30)))
(assert (>= 0 (+ l1 (- l29) (- s2) s32)))
(assert (>= 0 (+ (- l30) l31)))
(assert (>= 0 (+ l1 (- l30) (- s2) s33)))
(assert (>= 0 (+ (- l31) l32)))
(assert (>= 0 (+ l1 (- l31) (- s2) s34)))
(assert (>= 0 (+ (- l32) l33)))
(assert (>= 0 (+ l1 (- l32) (- s2) s35)))
(assert (>= 0 (+ (- l33) l34)))
(assert (>= 0 (+ l1 (- l33) (- s2) s36)))
(assert (>= 0 (+ (- l34) l35)))
(assert (>= 0 (+ l1 (- l34) (- s2) s37)))
(assert (>= 0 (+ (- l35) l36)))
(assert (>= 0 (+ l1 (- l35) (- s2) s38)))
(assert (>= 0 (+ (- l36) l37)))
(assert (>= 0 (+ l1 (- l36) (- s2) s39)))
(assert (>= 0 (+ (- l37) l38)))
(assert (>= 0 (+ l1 (- l37) (- s2) s40)))
(assert (>= 0 (+ (- l38) l39)))
(assert (>= 0 (+ l1 (- l38) (- s2) s41)))
(assert (>= 0 (+ (- l39) l40)))
(assert (>= 0 (+ l1 (- l39) (- s2) s42)))
(assert (>= 0 (+ (- l40) l41)))
(assert (>= 0 (+ l1 (- l40) (- s2) s43)))
(assert (>= 0 (+ (- l41) l42)))
(assert (>= 0 (+ l1 (- l41) (- s2) s44)))
(assert (>= 0 (+ (- l42) l43)))
(assert (>= 0 (+ l1 (- l42) (- s2) s45)))
(assert (>= 0 (+ (- l43) l44)))
(assert (>= 0 (+ l1 (- l43) (- s2) s46)))
(assert (>= 0 (+ (- l44) l45)))
(assert (>= 0 (+ l1 (- l44) (- s2) s47)))
(assert (>= 0 (+ (- l45) l46)))
(assert (>= 0 (+ l1 (- l45) (- s2) s48)))
(assert (>= 0 (+ (- l46) l47)))
(assert (>= 0 (+ l1 (- l46) (- s2) s49)))
(assert (>= 0 (+ (- l47) l48)))
(assert (>= 0 (+ l1 (- l47) (- s2) s50)))
(assert (>= 0 (+ (- l48) l49)))
(assert (>= 0 (+ l1 (- l48) (- s2) s51)))
(assert (>= 0 (+ (- l49) l50)))
(assert (>= 0 (+ l1 (- l49) (- s2) s52)))
(assert (>= 0 (+ (- l50) l51)))
(assert (>= 0 (+ l1 (- l50) (- s2) s53)))
(assert (>= 0 (+ l1 (- l51) (- s2) s54)))
(assert (>= 0 (+ l52 (- l53) s2 (- s3))))
(assert (>= 0 (+ l52 (- l53) s2 (- s4))))
(assert (>= 0 (+ (- l52) l53 s2 (- s5))))
(assert (>= 0 (+ (- l52) l53 s2 (- s6))))
(assert (>= 0 (+ (- l52) l53 s2 (- s7))))
(assert (>= 0 (+ (- l52) l53 s2 (- s8))))
(assert (>= 0 (+ (- l52) l53 s2 (- s9))))
(assert (>= 0 (+ (- l52) l53 (- s10) s2)))
(assert (>= 0 (+ (- l52) l53 (- s11) s2)))
(assert (>= 0 (+ (- l52) l53 (- s12) s2)))
(assert (>= 0 (+ (- l52) l53 (- s13) s2)))
(assert (>= 0 (+ (- l52) l53 (- s14) s2)))
(assert (>= 0 (+ (- l52) l53 (- s15) s2)))
(assert (>= 0 (+ (- l52) l53 (- s16) s2)))
(assert (>= 0 (+ (- l52) l53 (- s17) s2)))
(assert (>= 0 (+ (- l52) l53 (- s18) s2)))
(assert (>= 0 (+ (- l52) l53 (- s19) s2)))
(assert (>= 0 (+ (- l52) l53 s2 (- s20))))
(assert (>= 0 (+ (- l52) l53 s2 (- s21))))
(assert (>= 0 (+ (- l52) l53 s2 (- s22))))
(assert (>= 0 (+ (- l52) l53 s2 (- s23))))
(assert (>= 0 (+ (- l52) l53 s2 (- s24))))
(assert (>= 0 (+ (- l52) l53 s2 (- s25))))
(assert (>= 0 (+ (- l52) l53 s2 (- s26))))
(assert (>= 0 (+ (- l52) l53 s2 (- s27))))
(assert (>= 0 (+ (- l52) l53 s2 (- s28))))
(assert (>= 0 (+ (- l52) l53 s2 (- s29))))
(assert (>= 0 (+ (- l52) l53 s2 (- s30))))
(assert (>= 0 (+ (- l52) l53 s2 (- s31))))
(assert (>= 0 (+ (- l52) l53 s2 (- s32))))
(assert (>= 0 (+ (- l52) l53 s2 (- s33))))
(assert (>= 0 (+ (- l52) l53 s2 (- s34))))
(assert (>= 0 (+ (- l52) l53 s2 (- s35))))
(assert (>= 0 (+ (- l52) l53 s2 (- s36))))
(assert (>= 0 (+ (- l52) l53 s2 (- s37))))
(assert (>= 0 (+ (- l52) l53 s2 (- s38))))
(assert (>= 0 (+ (- l52) l53 s2 (- s39))))
(assert (>= 0 (+ (- l52) l53 s2 (- s40))))
(assert (>= 0 (+ (- l52) l53 s2 (- s41))))
(assert (>= 0 (+ (- l52) l53 s2 (- s42))))
(assert (>= 0 (+ (- l52) l53 s2 (- s43))))
(assert (>= 0 (+ (- l52) l53 s2 (- s44))))
(assert (>= 0 (+ (- l52) l53 s2 (- s45))))
(assert (>= 0 (+ (- l52) l53 s2 (- s46))))
(assert (>= 0 (+ (- l52) l53 s2 (- s47))))
(assert (>= 0 (+ (- l52) l53 s2 (- s48))))
(assert (>= 0 (+ (- l52) l53 s2 (- s49))))
(assert (>= 0 (+ (- l52) l53 s2 (- s50))))
(assert (>= 0 (+ (- l52) l53 s2 (- s51))))
(assert (>= 0 (+ (- l52) l53 s2 (- s52))))
(assert (>= 0 (+ (- l52) l53 s2 (- s53))))
(assert (>= 0 (+ (- l52) l53 s2 (- s54))))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) (* 2 l51) s2 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l27 0))
(assert (>= l28 0))
(assert (>= l29 0))
(assert (>= l30 0))
(assert (>= l31 0))
(assert (>= l32 0))
(assert (>= l33 0))
(assert (>= l34 0))
(assert (>= l35 0))
(assert (>= l36 0))
(assert (>= l37 0))
(assert (>= l38 0))
(assert (>= l39 0))
(assert (>= l40 0))
(assert (>= l41 0))
(assert (>= l42 0))
(assert (>= l43 0))
(assert (>= l44 0))
(assert (>= l45 0))
(assert (>= l46 0))
(assert (>= l47 0))
(assert (>= l48 0))
(assert (>= l49 0))
(assert (>= l50 0))
(assert (>= l51 0))
(assert (>= l1 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= s17 0))
(assert (>= s18 0))
(assert (>= s19 0))
(assert (>= s20 0))
(assert (>= s21 0))
(assert (>= s22 0))
(assert (>= s23 0))
(assert (>= s24 0))
(assert (>= s25 0))
(assert (>= s26 0))
(assert (>= s27 0))
(assert (>= s28 0))
(assert (>= s29 0))
(assert (>= s30 0))
(assert (>= s31 0))
(assert (>= s32 0))
(assert (>= s33 0))
(assert (>= s34 0))
(assert (>= s35 0))
(assert (>= s36 0))
(assert (>= s37 0))
(assert (>= s38 0))
(assert (>= s39 0))
(assert (>= s40 0))
(assert (>= s41 0))
(assert (>= s42 0))
(assert (>= s43 0))
(assert (>= s44 0))
(assert (>= s45 0))
(assert (>= s46 0))
(assert (>= s47 0))
(assert (>= s48 0))
(assert (>= s49 0))
(assert (>= s50 0))
(assert (>= s51 0))
(assert (>= s52 0))
(assert (>= s53 0))
(assert (>= l52 0))
(assert (>= s54 0))
(assert (>= s2 0))
(assert (>= l53 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun l31 () Real
    1.0)
  (define-fun l18 () Real
    1.0)
  (define-fun s21 () Real
    2.0)
  (define-fun s25 () Real
    2.0)
  (define-fun s8 () Real
    2.0)
  (define-fun s11 () Real
    2.0)
  (define-fun l9 () Real
    1.0)
  (define-fun l10 () Real
    1.0)
  (define-fun s13 () Real
    2.0)
  (define-fun l49 () Real
    1.0)
  (define-fun s22 () Real
    2.0)
  (define-fun s51 () Real
    2.0)
  (define-fun s29 () Real
    2.0)
  (define-fun s43 () Real
    2.0)
  (define-fun l6 () Real
    1.0)
  (define-fun s0 () Real
    2.0)
  (define-fun l30 () Real
    1.0)
  (define-fun l50 () Real
    1.0)
  (define-fun s27 () Real
    2.0)
  (define-fun s28 () Real
    2.0)
  (define-fun l21 () Real
    1.0)
  (define-fun l37 () Real
    1.0)
  (define-fun s5 () Real
    2.0)
  (define-fun s7 () Real
    2.0)
  (define-fun l5 () Real
    1.0)
  (define-fun l51 () Real
    1.0)
  (define-fun s18 () Real
    2.0)
  (define-fun l13 () Real
    1.0)
  (define-fun l22 () Real
    1.0)
  (define-fun l42 () Real
    1.0)
  (define-fun l25 () Real
    1.0)
  (define-fun s54 () Real
    2.0)
  (define-fun l53 () Real
    1.0)
  (define-fun l7 () Real
    1.0)
  (define-fun s23 () Real
    2.0)
  (define-fun s24 () Real
    2.0)
  (define-fun l38 () Real
    1.0)
  (define-fun l40 () Real
    1.0)
  (define-fun s44 () Real
    2.0)
  (define-fun s16 () Real
    2.0)
  (define-fun s6 () Real
    2.0)
  (define-fun s35 () Real
    2.0)
  (define-fun l0 () Real
    0.0)
  (define-fun s34 () Real
    2.0)
  (define-fun s20 () Real
    2.0)
  (define-fun l33 () Real
    1.0)
  (define-fun l26 () Real
    1.0)
  (define-fun l36 () Real
    1.0)
  (define-fun s48 () Real
    2.0)
  (define-fun s3 () Real
    0.0)
  (define-fun s42 () Real
    2.0)
  (define-fun l19 () Real
    1.0)
  (define-fun l8 () Real
    1.0)
  (define-fun s4 () Real
    0.0)
  (define-fun s50 () Real
    2.0)
  (define-fun l32 () Real
    1.0)
  (define-fun l3 () Real
    1.0)
  (define-fun s49 () Real
    2.0)
  (define-fun l39 () Real
    1.0)
  (define-fun s36 () Real
    2.0)
  (define-fun l47 () Real
    1.0)
  (define-fun l35 () Real
    1.0)
  (define-fun s32 () Real
    2.0)
  (define-fun l14 () Real
    1.0)
  (define-fun s46 () Real
    2.0)
  (define-fun l45 () Real
    1.0)
  (define-fun s2 () Real
    1.0)
  (define-fun s37 () Real
    2.0)
  (define-fun s52 () Real
    2.0)
  (define-fun l29 () Real
    1.0)
  (define-fun s31 () Real
    2.0)
  (define-fun s41 () Real
    2.0)
  (define-fun s30 () Real
    2.0)
  (define-fun l1 () Real
    0.0)
  (define-fun s9 () Real
    2.0)
  (define-fun l52 () Real
    0.0)
  (define-fun l12 () Real
    1.0)
  (define-fun l23 () Real
    1.0)
  (define-fun l34 () Real
    1.0)
  (define-fun l27 () Real
    1.0)
  (define-fun s38 () Real
    2.0)
  (define-fun s14 () Real
    2.0)
  (define-fun l20 () Real
    1.0)
  (define-fun s45 () Real
    2.0)
  (define-fun l4 () Real
    1.0)
  (define-fun l28 () Real
    1.0)
  (define-fun l24 () Real
    1.0)
  (define-fun s39 () Real
    2.0)
  (define-fun s47 () Real
    2.0)
  (define-fun s12 () Real
    2.0)
  (define-fun l41 () Real
    1.0)
  (define-fun s40 () Real
    2.0)
  (define-fun l48 () Real
    1.0)
  (define-fun l11 () Real
    1.0)
  (define-fun s19 () Real
    2.0)
  (define-fun s10 () Real
    2.0)
  (define-fun l46 () Real
    1.0)
  (define-fun s15 () Real
    2.0)
  (define-fun s17 () Real
    2.0)
  (define-fun l2 () Real
    1.0)
  (define-fun l43 () Real
    1.0)
  (define-fun s53 () Real
    2.0)
  (define-fun l15 () Real
    1.0)
  (define-fun l17 () Real
    1.0)
  (define-fun s33 () Real
    2.0)
  (define-fun s1 () Real
    2.0)
  (define-fun l16 () Real
    1.0)
  (define-fun s26 () Real
    2.0)
  (define-fun l44 () Real
    1.0)
)
- sat, getting model A' for C'
assignment('l31', 1.0).
assignment('l18', 1.0).
assignment('s21', 2.0).
assignment('s25', 2.0).
assignment('s8', 2.0).
assignment('s11', 2.0).
assignment('l9', 1.0).
assignment('l10', 1.0).
assignment('s13', 2.0).
assignment('l49', 1.0).
assignment('s22', 2.0).
assignment('s51', 2.0).
assignment('s29', 2.0).
assignment('s43', 2.0).
assignment('l6', 1.0).
assignment('s0', 2.0).
assignment('l30', 1.0).
assignment('l50', 1.0).
assignment('s27', 2.0).
assignment('s28', 2.0).
assignment('l21', 1.0).
assignment('l37', 1.0).
assignment('s5', 2.0).
assignment('s7', 2.0).
assignment('l5', 1.0).
assignment('l51', 1.0).
assignment('s18', 2.0).
assignment('l13', 1.0).
assignment('l22', 1.0).
assignment('l42', 1.0).
assignment('l25', 1.0).
assignment('s54', 2.0).
assignment('l53', 1.0).
assignment('l7', 1.0).
assignment('s23', 2.0).
assignment('s24', 2.0).
assignment('l38', 1.0).
assignment('l40', 1.0).
assignment('s44', 2.0).
assignment('s16', 2.0).
assignment('s6', 2.0).
assignment('s35', 2.0).
assignment('l0', 0.0).
assignment('s34', 2.0).
assignment('s20', 2.0).
assignment('l33', 1.0).
assignment('l26', 1.0).
assignment('l36', 1.0).
assignment('s48', 2.0).
assignment('s3', 0.0).
assignment('s42', 2.0).
assignment('l19', 1.0).
assignment('l8', 1.0).
assignment('s4', 0.0).
assignment('s50', 2.0).
assignment('l32', 1.0).
assignment('l3', 1.0).
assignment('s49', 2.0).
assignment('l39', 1.0).
assignment('s36', 2.0).
assignment('l47', 1.0).
assignment('l35', 1.0).
assignment('s32', 2.0).
assignment('l14', 1.0).
assignment('s46', 2.0).
assignment('l45', 1.0).
assignment('s2', 1.0).
assignment('s37', 2.0).
assignment('s52', 2.0).
assignment('l29', 1.0).
assignment('s31', 2.0).
assignment('s41', 2.0).
assignment('s30', 2.0).
assignment('l1', 0.0).
assignment('s9', 2.0).
assignment('l52', 0.0).
assignment('l12', 1.0).
assignment('l23', 1.0).
assignment('l34', 1.0).
assignment('l27', 1.0).
assignment('s38', 2.0).
assignment('s14', 2.0).
assignment('l20', 1.0).
assignment('s45', 2.0).
assignment('l4', 1.0).
assignment('l28', 1.0).
assignment('l24', 1.0).
assignment('s39', 2.0).
assignment('s47', 2.0).
assignment('s12', 2.0).
assignment('l41', 1.0).
assignment('s40', 2.0).
assignment('l48', 1.0).
assignment('l11', 1.0).
assignment('s19', 2.0).
assignment('s10', 2.0).
assignment('l46', 1.0).
assignment('s15', 2.0).
assignment('s17', 2.0).
assignment('l2', 1.0).
assignment('l43', 1.0).
assignment('s53', 2.0).
assignment('l15', 1.0).
assignment('l17', 1.0).
assignment('s33', 2.0).
assignment('s1', 2.0).
assignment('l16', 1.0).
assignment('s26', 2.0).
assignment('l44', 1.0).
- constructing invariant I for petri net N and model A'
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 l27 l28 l29 l30 l31 l32 l33 l34 l35 l36 l37 l38 l39 l40 l41 l42 l43 l44 l45 l46 l47 l48 l49 l50 l51 (* 2.0 s5) (* 2.0 s6) (* 2.0 s7) (* 2.0 s8) (* 2.0 s9) (* 2.0 s10) (* 2.0 s11) (* 2.0 s12) (* 2.0 s13) (* 2.0 s14) (* 2.0 s15) (* 2.0 s16) (* 2.0 s17) (* 2.0 s18) (* 2.0 s19) (* 2.0 s20) (* 2.0 s21) (* 2.0 s22) (* 2.0 s23) (* 2.0 s24) (* 2.0 s25) (* 2.0 s26) (* 2.0 s27) (* 2.0 s28) (* 2.0 s29) (* 2.0 s30) (* 2.0 s31) (* 2.0 s32) (* 2.0 s33) (* 2.0 s34) (* 2.0 s35) (* 2.0 s36) (* 2.0 s37) (* 2.0 s38) (* 2.0 s39) (* 2.0 s40) (* 2.0 s41) (* 2.0 s42) (* 2.0 s43) (* 2.0 s44) (* 2.0 s45) (* 2.0 s46) (* 2.0 s47) (* 2.0 s48) (* 2.0 s49) (* 2.0 s50) (* 2.0 s51) (* 2.0 s52) (* 2.0 s53) (* 2.0 s54) s2 l53)))

* Invariant I for the petri net:
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 l27 l28 l29 l30 l31 l32 l33 l34 l35 l36 l37 l38 l39 l40 l41 l42 l43 l44 l45 l46 l47 l48 l49 l50 l51 (* 2.0 s5) (* 2.0 s6) (* 2.0 s7) (* 2.0 s8) (* 2.0 s9) (* 2.0 s10) (* 2.0 s11) (* 2.0 s12) (* 2.0 s13) (* 2.0 s14) (* 2.0 s15) (* 2.0 s16) (* 2.0 s17) (* 2.0 s18) (* 2.0 s19) (* 2.0 s20) (* 2.0 s21) (* 2.0 s22) (* 2.0 s23) (* 2.0 s24) (* 2.0 s25) (* 2.0 s26) (* 2.0 s27) (* 2.0 s28) (* 2.0 s29) (* 2.0 s30) (* 2.0 s31) (* 2.0 s32) (* 2.0 s33) (* 2.0 s34) (* 2.0 s35) (* 2.0 s36) (* 2.0 s37) (* 2.0 s38) (* 2.0 s39) (* 2.0 s40) (* 2.0 s41) (* 2.0 s42) (* 2.0 s43) (* 2.0 s44) (* 2.0 s45) (* 2.0 s46) (* 2.0 s47) (* 2.0 s48) (* 2.0 s49) (* 2.0 s50) (* 2.0 s51) (* 2.0 s52) (* 2.0 s53) (* 2.0 s54) s2 l53)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


