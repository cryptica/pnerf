PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/bingham_h25.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [t1], [t2,t1]).
place(s1, [t2], [t3]).
place(l2, [t4], [t7,t6,t5]).
place(l3, [t5], [t9,t8]).
place(l4, [t8], [t11,t10]).
place(l5, [t10], [t13,t12]).
place(l6, [t12], [t15,t14]).
place(l7, [t14], [t17,t16]).
place(l8, [t16], [t19,t18]).
place(l9, [t18], [t21,t20]).
place(l10, [t20], [t23,t22]).
place(l11, [t22], [t25,t24]).
place(l12, [t24], [t27,t26]).
place(l13, [t26], [t29,t28]).
place(l14, [t28], [t31,t30]).
place(l15, [t30], [t33,t32]).
place(l16, [t32], [t35,t34]).
place(l17, [t34], [t37,t36]).
place(l18, [t36], [t39,t38]).
place(l19, [t38], [t41,t40]).
place(l20, [t40], [t43,t42]).
place(l21, [t42], [t45,t44]).
place(l22, [t44], [t47,t46]).
place(l23, [t46], [t49,t48]).
place(l24, [t48], [t51,t50]).
place(l25, [t50], [t53,t52]).
place(l26, [t52], [t54]).
place(l1, [t54,t53,t51,t49,t47,t45,t43,t41,t39,t37,t35,t33,t31,t29,t27,t25,t23,t21,t19,t17,t15,t13,t11,t9,t7,t6,t2,t1], [t4]).
place(s3, [t4], [t55]).
place(s4, [t6], [t56]).
place(s5, [t7], [t57]).
place(s6, [t9], [t58]).
place(s7, [t11], [t59]).
place(s8, [t13], [t60]).
place(s9, [t15], [t61]).
place(s10, [t17], [t62]).
place(s11, [t19], [t63]).
place(s12, [t21], [t64]).
place(s13, [t23], [t65]).
place(s14, [t25], [t66]).
place(s15, [t27], [t67]).
place(s16, [t29], [t68]).
place(s17, [t31], [t69]).
place(s18, [t33], [t70]).
place(s19, [t35], [t71]).
place(s20, [t37], [t72]).
place(s21, [t39], [t73]).
place(s22, [t41], [t74]).
place(s23, [t43], [t75]).
place(s24, [t45], [t76]).
place(s25, [t47], [t77]).
place(s26, [t49], [t78]).
place(s27, [t51], [t79]).
place(s28, [t53], [t80]).
place(l27, [t56,t55], [t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57]).
place(s29, [t54], [t81]).
place(s2, [t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t52,t50,t48,t46,t44,t42,t40,t38,t36,t34,t32,t30,t28,t26,t24,t22,t20,t18,t16,t14,t12,t10,t8,t5,t3], [t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4]).
place(l28, [t81,t80,t79,t78,t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t3], [t56,t55]).
place(l0, [init1], [t3,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s1,l1]).
transition(t3, [l0,s1], [s2,l28]).
transition(t4, [l1,s2], [s3,l2]).
transition(t5, [l2,s2], [s2,l3]).
transition(t6, [l2,s2], [s4,l1]).
transition(t7, [l2,s2], [s5,l1]).
transition(t8, [l3,s2], [s2,l4]).
transition(t9, [l3,s2], [s6,l1]).
transition(t10, [l4,s2], [s2,l5]).
transition(t11, [l4,s2], [s7,l1]).
transition(t12, [l5,s2], [s2,l6]).
transition(t13, [l5,s2], [s8,l1]).
transition(t14, [l6,s2], [s2,l7]).
transition(t15, [l6,s2], [s9,l1]).
transition(t16, [l7,s2], [s2,l8]).
transition(t17, [l7,s2], [s10,l1]).
transition(t18, [l8,s2], [s2,l9]).
transition(t19, [l8,s2], [s11,l1]).
transition(t20, [l9,s2], [s2,l10]).
transition(t21, [l9,s2], [s12,l1]).
transition(t22, [l10,s2], [s2,l11]).
transition(t23, [l10,s2], [s13,l1]).
transition(t24, [l11,s2], [s2,l12]).
transition(t25, [l11,s2], [s14,l1]).
transition(t26, [l12,s2], [s2,l13]).
transition(t27, [l12,s2], [s15,l1]).
transition(t28, [l13,s2], [s2,l14]).
transition(t29, [l13,s2], [s16,l1]).
transition(t30, [l14,s2], [s2,l15]).
transition(t31, [l14,s2], [s17,l1]).
transition(t32, [l15,s2], [s2,l16]).
transition(t33, [l15,s2], [s18,l1]).
transition(t34, [l16,s2], [s2,l17]).
transition(t35, [l16,s2], [s19,l1]).
transition(t36, [l17,s2], [s2,l18]).
transition(t37, [l17,s2], [s20,l1]).
transition(t38, [l18,s2], [s2,l19]).
transition(t39, [l18,s2], [s21,l1]).
transition(t40, [l19,s2], [s2,l20]).
transition(t41, [l19,s2], [s22,l1]).
transition(t42, [l20,s2], [s2,l21]).
transition(t43, [l20,s2], [s23,l1]).
transition(t44, [l21,s2], [s2,l22]).
transition(t45, [l21,s2], [s24,l1]).
transition(t46, [l22,s2], [s2,l23]).
transition(t47, [l22,s2], [s25,l1]).
transition(t48, [l23,s2], [s2,l24]).
transition(t49, [l23,s2], [s26,l1]).
transition(t50, [l24,s2], [s2,l25]).
transition(t51, [l24,s2], [s27,l1]).
transition(t52, [l25,s2], [s2,l26]).
transition(t53, [l25,s2], [s28,l1]).
transition(t54, [l26,s2], [s29,l1]).
transition(t55, [l28,s3], [s2,l27]).
transition(t56, [l28,s4], [s2,l27]).
transition(t57, [l27,s5], [s2,l28]).
transition(t58, [l27,s6], [s2,l28]).
transition(t59, [l27,s7], [s2,l28]).
transition(t60, [l27,s8], [s2,l28]).
transition(t61, [l27,s9], [s2,l28]).
transition(t62, [l27,s10], [s2,l28]).
transition(t63, [l27,s11], [s2,l28]).
transition(t64, [l27,s12], [s2,l28]).
transition(t65, [l27,s13], [s2,l28]).
transition(t66, [l27,s14], [s2,l28]).
transition(t67, [l27,s15], [s2,l28]).
transition(t68, [l27,s16], [s2,l28]).
transition(t69, [l27,s17], [s2,l28]).
transition(t70, [l27,s18], [s2,l28]).
transition(t71, [l27,s19], [s2,l28]).
transition(t72, [l27,s20], [s2,l28]).
transition(t73, [l27,s21], [s2,l28]).
transition(t74, [l27,s22], [s2,l28]).
transition(t75, [l27,s23], [s2,l28]).
transition(t76, [l27,s24], [s2,l28]).
transition(t77, [l27,s25], [s2,l28]).
transition(t78, [l27,s26], [s2,l28]).
transition(t79, [l27,s27], [s2,l28]).
transition(t80, [l27,s28], [s2,l28]).
transition(t81, [l27,s29], [s2,l28]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s1, 1).
weight(t2, l1, 1).
weight(l0, t3, 1).
weight(s1, t3, 1).
weight(t3, s2, 1).
weight(t3, l28, 1).
weight(l1, t4, 1).
weight(s2, t4, 1).
weight(t4, s3, 1).
weight(t4, l2, 1).
weight(l2, t5, 1).
weight(s2, t5, 1).
weight(t5, s2, 1).
weight(t5, l3, 1).
weight(l2, t6, 1).
weight(s2, t6, 1).
weight(t6, s4, 1).
weight(t6, l1, 1).
weight(l2, t7, 1).
weight(s2, t7, 1).
weight(t7, s5, 1).
weight(t7, l1, 1).
weight(l3, t8, 1).
weight(s2, t8, 1).
weight(t8, s2, 1).
weight(t8, l4, 1).
weight(l3, t9, 1).
weight(s2, t9, 1).
weight(t9, s6, 1).
weight(t9, l1, 1).
weight(l4, t10, 1).
weight(s2, t10, 1).
weight(t10, s2, 1).
weight(t10, l5, 1).
weight(l4, t11, 1).
weight(s2, t11, 1).
weight(t11, s7, 1).
weight(t11, l1, 1).
weight(l5, t12, 1).
weight(s2, t12, 1).
weight(t12, s2, 1).
weight(t12, l6, 1).
weight(l5, t13, 1).
weight(s2, t13, 1).
weight(t13, s8, 1).
weight(t13, l1, 1).
weight(l6, t14, 1).
weight(s2, t14, 1).
weight(t14, s2, 1).
weight(t14, l7, 1).
weight(l6, t15, 1).
weight(s2, t15, 1).
weight(t15, s9, 1).
weight(t15, l1, 1).
weight(l7, t16, 1).
weight(s2, t16, 1).
weight(t16, s2, 1).
weight(t16, l8, 1).
weight(l7, t17, 1).
weight(s2, t17, 1).
weight(t17, s10, 1).
weight(t17, l1, 1).
weight(l8, t18, 1).
weight(s2, t18, 1).
weight(t18, s2, 1).
weight(t18, l9, 1).
weight(l8, t19, 1).
weight(s2, t19, 1).
weight(t19, s11, 1).
weight(t19, l1, 1).
weight(l9, t20, 1).
weight(s2, t20, 1).
weight(t20, s2, 1).
weight(t20, l10, 1).
weight(l9, t21, 1).
weight(s2, t21, 1).
weight(t21, s12, 1).
weight(t21, l1, 1).
weight(l10, t22, 1).
weight(s2, t22, 1).
weight(t22, s2, 1).
weight(t22, l11, 1).
weight(l10, t23, 1).
weight(s2, t23, 1).
weight(t23, s13, 1).
weight(t23, l1, 1).
weight(l11, t24, 1).
weight(s2, t24, 1).
weight(t24, s2, 1).
weight(t24, l12, 1).
weight(l11, t25, 1).
weight(s2, t25, 1).
weight(t25, s14, 1).
weight(t25, l1, 1).
weight(l12, t26, 1).
weight(s2, t26, 1).
weight(t26, s2, 1).
weight(t26, l13, 1).
weight(l12, t27, 1).
weight(s2, t27, 1).
weight(t27, s15, 1).
weight(t27, l1, 1).
weight(l13, t28, 1).
weight(s2, t28, 1).
weight(t28, s2, 1).
weight(t28, l14, 1).
weight(l13, t29, 1).
weight(s2, t29, 1).
weight(t29, s16, 1).
weight(t29, l1, 1).
weight(l14, t30, 1).
weight(s2, t30, 1).
weight(t30, s2, 1).
weight(t30, l15, 1).
weight(l14, t31, 1).
weight(s2, t31, 1).
weight(t31, s17, 1).
weight(t31, l1, 1).
weight(l15, t32, 1).
weight(s2, t32, 1).
weight(t32, s2, 1).
weight(t32, l16, 1).
weight(l15, t33, 1).
weight(s2, t33, 1).
weight(t33, s18, 1).
weight(t33, l1, 1).
weight(l16, t34, 1).
weight(s2, t34, 1).
weight(t34, s2, 1).
weight(t34, l17, 1).
weight(l16, t35, 1).
weight(s2, t35, 1).
weight(t35, s19, 1).
weight(t35, l1, 1).
weight(l17, t36, 1).
weight(s2, t36, 1).
weight(t36, s2, 1).
weight(t36, l18, 1).
weight(l17, t37, 1).
weight(s2, t37, 1).
weight(t37, s20, 1).
weight(t37, l1, 1).
weight(l18, t38, 1).
weight(s2, t38, 1).
weight(t38, s2, 1).
weight(t38, l19, 1).
weight(l18, t39, 1).
weight(s2, t39, 1).
weight(t39, s21, 1).
weight(t39, l1, 1).
weight(l19, t40, 1).
weight(s2, t40, 1).
weight(t40, s2, 1).
weight(t40, l20, 1).
weight(l19, t41, 1).
weight(s2, t41, 1).
weight(t41, s22, 1).
weight(t41, l1, 1).
weight(l20, t42, 1).
weight(s2, t42, 1).
weight(t42, s2, 1).
weight(t42, l21, 1).
weight(l20, t43, 1).
weight(s2, t43, 1).
weight(t43, s23, 1).
weight(t43, l1, 1).
weight(l21, t44, 1).
weight(s2, t44, 1).
weight(t44, s2, 1).
weight(t44, l22, 1).
weight(l21, t45, 1).
weight(s2, t45, 1).
weight(t45, s24, 1).
weight(t45, l1, 1).
weight(l22, t46, 1).
weight(s2, t46, 1).
weight(t46, s2, 1).
weight(t46, l23, 1).
weight(l22, t47, 1).
weight(s2, t47, 1).
weight(t47, s25, 1).
weight(t47, l1, 1).
weight(l23, t48, 1).
weight(s2, t48, 1).
weight(t48, s2, 1).
weight(t48, l24, 1).
weight(l23, t49, 1).
weight(s2, t49, 1).
weight(t49, s26, 1).
weight(t49, l1, 1).
weight(l24, t50, 1).
weight(s2, t50, 1).
weight(t50, s2, 1).
weight(t50, l25, 1).
weight(l24, t51, 1).
weight(s2, t51, 1).
weight(t51, s27, 1).
weight(t51, l1, 1).
weight(l25, t52, 1).
weight(s2, t52, 1).
weight(t52, s2, 1).
weight(t52, l26, 1).
weight(l25, t53, 1).
weight(s2, t53, 1).
weight(t53, s28, 1).
weight(t53, l1, 1).
weight(l26, t54, 1).
weight(s2, t54, 1).
weight(t54, s29, 1).
weight(t54, l1, 1).
weight(l28, t55, 1).
weight(s3, t55, 1).
weight(t55, s2, 1).
weight(t55, l27, 1).
weight(l28, t56, 1).
weight(s4, t56, 1).
weight(t56, s2, 1).
weight(t56, l27, 1).
weight(l27, t57, 1).
weight(s5, t57, 1).
weight(t57, s2, 1).
weight(t57, l28, 1).
weight(l27, t58, 1).
weight(s6, t58, 1).
weight(t58, s2, 1).
weight(t58, l28, 1).
weight(l27, t59, 1).
weight(s7, t59, 1).
weight(t59, s2, 1).
weight(t59, l28, 1).
weight(l27, t60, 1).
weight(s8, t60, 1).
weight(t60, s2, 1).
weight(t60, l28, 1).
weight(l27, t61, 1).
weight(s9, t61, 1).
weight(t61, s2, 1).
weight(t61, l28, 1).
weight(l27, t62, 1).
weight(s10, t62, 1).
weight(t62, s2, 1).
weight(t62, l28, 1).
weight(l27, t63, 1).
weight(s11, t63, 1).
weight(t63, s2, 1).
weight(t63, l28, 1).
weight(l27, t64, 1).
weight(s12, t64, 1).
weight(t64, s2, 1).
weight(t64, l28, 1).
weight(l27, t65, 1).
weight(s13, t65, 1).
weight(t65, s2, 1).
weight(t65, l28, 1).
weight(l27, t66, 1).
weight(s14, t66, 1).
weight(t66, s2, 1).
weight(t66, l28, 1).
weight(l27, t67, 1).
weight(s15, t67, 1).
weight(t67, s2, 1).
weight(t67, l28, 1).
weight(l27, t68, 1).
weight(s16, t68, 1).
weight(t68, s2, 1).
weight(t68, l28, 1).
weight(l27, t69, 1).
weight(s17, t69, 1).
weight(t69, s2, 1).
weight(t69, l28, 1).
weight(l27, t70, 1).
weight(s18, t70, 1).
weight(t70, s2, 1).
weight(t70, l28, 1).
weight(l27, t71, 1).
weight(s19, t71, 1).
weight(t71, s2, 1).
weight(t71, l28, 1).
weight(l27, t72, 1).
weight(s20, t72, 1).
weight(t72, s2, 1).
weight(t72, l28, 1).
weight(l27, t73, 1).
weight(s21, t73, 1).
weight(t73, s2, 1).
weight(t73, l28, 1).
weight(l27, t74, 1).
weight(s22, t74, 1).
weight(t74, s2, 1).
weight(t74, l28, 1).
weight(l27, t75, 1).
weight(s23, t75, 1).
weight(t75, s2, 1).
weight(t75, l28, 1).
weight(l27, t76, 1).
weight(s24, t76, 1).
weight(t76, s2, 1).
weight(t76, l28, 1).
weight(l27, t77, 1).
weight(s25, t77, 1).
weight(t77, s2, 1).
weight(t77, l28, 1).
weight(l27, t78, 1).
weight(s26, t78, 1).
weight(t78, s2, 1).
weight(t78, l28, 1).
weight(l27, t79, 1).
weight(s27, t79, 1).
weight(t79, s2, 1).
weight(t79, l28, 1).
weight(l27, t80, 1).
weight(s28, t80, 1).
weight(t80, s2, 1).
weight(t80, l28, 1).
weight(l27, t81, 1).
weight(s29, t81, 1).
weight(t81, s2, 1).
weight(t81, l28, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s2 1)').
cond('(>= l26 2)').

target(s2, 1).
target(l26, 2).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l11 () Real)
(declare-fun l12 () Real)
(declare-fun l13 () Real)
(declare-fun l14 () Real)
(declare-fun l15 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l18 () Real)
(declare-fun l19 () Real)
(declare-fun l20 () Real)
(declare-fun l21 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l1 () Real)
(declare-fun s3 () Real)
(declare-fun s4 () Real)
(declare-fun s5 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun s11 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun s17 () Real)
(declare-fun s18 () Real)
(declare-fun s19 () Real)
(declare-fun s20 () Real)
(declare-fun s21 () Real)
(declare-fun s22 () Real)
(declare-fun s23 () Real)
(declare-fun s24 () Real)
(declare-fun s25 () Real)
(declare-fun s26 () Real)
(declare-fun s27 () Real)
(declare-fun s28 () Real)
(declare-fun l27 () Real)
(declare-fun s29 () Real)
(declare-fun s2 () Real)
(declare-fun l28 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l28 (- s1) s2)))
(assert (>= 0 (+ (- l1) l2 (- s2) s3)))
(assert (>= 0 (+ (- l2) l3)))
(assert (>= 0 (+ l1 (- l2) (- s2) s4)))
(assert (>= 0 (+ l1 (- l2) (- s2) s5)))
(assert (>= 0 (+ (- l3) l4)))
(assert (>= 0 (+ l1 (- l3) (- s2) s6)))
(assert (>= 0 (+ (- l4) l5)))
(assert (>= 0 (+ l1 (- l4) (- s2) s7)))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ l1 (- l5) (- s2) s8)))
(assert (>= 0 (+ (- l6) l7)))
(assert (>= 0 (+ l1 (- l6) (- s2) s9)))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ l1 (- l7) s10 (- s2))))
(assert (>= 0 (+ (- l8) l9)))
(assert (>= 0 (+ l1 (- l8) s11 (- s2))))
(assert (>= 0 (+ l10 (- l9))))
(assert (>= 0 (+ l1 (- l9) s12 (- s2))))
(assert (>= 0 (+ (- l10) l11)))
(assert (>= 0 (+ l1 (- l10) s13 (- s2))))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ l1 (- l11) s14 (- s2))))
(assert (>= 0 (+ (- l12) l13)))
(assert (>= 0 (+ l1 (- l12) s15 (- s2))))
(assert (>= 0 (+ (- l13) l14)))
(assert (>= 0 (+ l1 (- l13) s16 (- s2))))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ l1 (- l14) s17 (- s2))))
(assert (>= 0 (+ (- l15) l16)))
(assert (>= 0 (+ l1 (- l15) s18 (- s2))))
(assert (>= 0 (+ (- l16) l17)))
(assert (>= 0 (+ l1 (- l16) s19 (- s2))))
(assert (>= 0 (+ (- l17) l18)))
(assert (>= 0 (+ l1 (- l17) (- s2) s20)))
(assert (>= 0 (+ (- l18) l19)))
(assert (>= 0 (+ l1 (- l18) (- s2) s21)))
(assert (>= 0 (+ (- l19) l20)))
(assert (>= 0 (+ l1 (- l19) (- s2) s22)))
(assert (>= 0 (+ (- l20) l21)))
(assert (>= 0 (+ l1 (- l20) (- s2) s23)))
(assert (>= 0 (+ (- l21) l22)))
(assert (>= 0 (+ l1 (- l21) (- s2) s24)))
(assert (>= 0 (+ (- l22) l23)))
(assert (>= 0 (+ l1 (- l22) (- s2) s25)))
(assert (>= 0 (+ (- l23) l24)))
(assert (>= 0 (+ l1 (- l23) (- s2) s26)))
(assert (>= 0 (+ (- l24) l25)))
(assert (>= 0 (+ l1 (- l24) (- s2) s27)))
(assert (>= 0 (+ (- l25) l26)))
(assert (>= 0 (+ l1 (- l25) (- s2) s28)))
(assert (>= 0 (+ l1 (- l26) (- s2) s29)))
(assert (>= 0 (+ l27 (- l28) s2 (- s3))))
(assert (>= 0 (+ l27 (- l28) s2 (- s4))))
(assert (>= 0 (+ (- l27) l28 s2 (- s5))))
(assert (>= 0 (+ (- l27) l28 s2 (- s6))))
(assert (>= 0 (+ (- l27) l28 s2 (- s7))))
(assert (>= 0 (+ (- l27) l28 s2 (- s8))))
(assert (>= 0 (+ (- l27) l28 s2 (- s9))))
(assert (>= 0 (+ (- l27) l28 (- s10) s2)))
(assert (>= 0 (+ (- l27) l28 (- s11) s2)))
(assert (>= 0 (+ (- l27) l28 (- s12) s2)))
(assert (>= 0 (+ (- l27) l28 (- s13) s2)))
(assert (>= 0 (+ (- l27) l28 (- s14) s2)))
(assert (>= 0 (+ (- l27) l28 (- s15) s2)))
(assert (>= 0 (+ (- l27) l28 (- s16) s2)))
(assert (>= 0 (+ (- l27) l28 (- s17) s2)))
(assert (>= 0 (+ (- l27) l28 (- s18) s2)))
(assert (>= 0 (+ (- l27) l28 (- s19) s2)))
(assert (>= 0 (+ (- l27) l28 s2 (- s20))))
(assert (>= 0 (+ (- l27) l28 s2 (- s21))))
(assert (>= 0 (+ (- l27) l28 s2 (- s22))))
(assert (>= 0 (+ (- l27) l28 s2 (- s23))))
(assert (>= 0 (+ (- l27) l28 s2 (- s24))))
(assert (>= 0 (+ (- l27) l28 s2 (- s25))))
(assert (>= 0 (+ (- l27) l28 s2 (- s26))))
(assert (>= 0 (+ (- l27) l28 s2 (- s27))))
(assert (>= 0 (+ (- l27) l28 s2 (- s28))))
(assert (>= 0 (+ (- l27) l28 s2 (- s29))))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) (* 2 l26) s2 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l11 0))
(assert (>= l12 0))
(assert (>= l13 0))
(assert (>= l14 0))
(assert (>= l15 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l18 0))
(assert (>= l19 0))
(assert (>= l20 0))
(assert (>= l21 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l1 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= s17 0))
(assert (>= s18 0))
(assert (>= s19 0))
(assert (>= s20 0))
(assert (>= s21 0))
(assert (>= s22 0))
(assert (>= s23 0))
(assert (>= s24 0))
(assert (>= s25 0))
(assert (>= s26 0))
(assert (>= s27 0))
(assert (>= s28 0))
(assert (>= l27 0))
(assert (>= s29 0))
(assert (>= s2 0))
(assert (>= l28 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun l18 () Real
    1.0)
  (define-fun s21 () Real
    2.0)
  (define-fun s25 () Real
    2.0)
  (define-fun s8 () Real
    2.0)
  (define-fun s11 () Real
    2.0)
  (define-fun l14 () Real
    1.0)
  (define-fun l9 () Real
    1.0)
  (define-fun s2 () Real
    1.0)
  (define-fun l10 () Real
    1.0)
  (define-fun s13 () Real
    2.0)
  (define-fun l1 () Real
    0.0)
  (define-fun s22 () Real
    2.0)
  (define-fun s9 () Real
    2.0)
  (define-fun s29 () Real
    2.0)
  (define-fun l6 () Real
    1.0)
  (define-fun l12 () Real
    1.0)
  (define-fun l23 () Real
    1.0)
  (define-fun s0 () Real
    2.0)
  (define-fun l27 () Real
    0.0)
  (define-fun s27 () Real
    2.0)
  (define-fun s28 () Real
    2.0)
  (define-fun l21 () Real
    1.0)
  (define-fun s5 () Real
    2.0)
  (define-fun s14 () Real
    2.0)
  (define-fun s7 () Real
    2.0)
  (define-fun l20 () Real
    1.0)
  (define-fun l5 () Real
    1.0)
  (define-fun l4 () Real
    1.0)
  (define-fun l28 () Real
    1.0)
  (define-fun l24 () Real
    1.0)
  (define-fun s18 () Real
    2.0)
  (define-fun l13 () Real
    1.0)
  (define-fun s12 () Real
    2.0)
  (define-fun l22 () Real
    1.0)
  (define-fun l25 () Real
    1.0)
  (define-fun l11 () Real
    1.0)
  (define-fun s19 () Real
    2.0)
  (define-fun s10 () Real
    2.0)
  (define-fun l7 () Real
    1.0)
  (define-fun s23 () Real
    2.0)
  (define-fun s24 () Real
    2.0)
  (define-fun s15 () Real
    2.0)
  (define-fun s17 () Real
    2.0)
  (define-fun s16 () Real
    2.0)
  (define-fun l2 () Real
    1.0)
  (define-fun s6 () Real
    2.0)
  (define-fun l0 () Real
    0.0)
  (define-fun l15 () Real
    1.0)
  (define-fun s20 () Real
    2.0)
  (define-fun l26 () Real
    1.0)
  (define-fun l17 () Real
    1.0)
  (define-fun s3 () Real
    0.0)
  (define-fun s1 () Real
    2.0)
  (define-fun l16 () Real
    1.0)
  (define-fun s26 () Real
    2.0)
  (define-fun l19 () Real
    1.0)
  (define-fun l8 () Real
    1.0)
  (define-fun s4 () Real
    0.0)
  (define-fun l3 () Real
    1.0)
)
- sat, getting model A' for C'
assignment('l18', 1.0).
assignment('s21', 2.0).
assignment('s25', 2.0).
assignment('s8', 2.0).
assignment('s11', 2.0).
assignment('l14', 1.0).
assignment('l9', 1.0).
assignment('s2', 1.0).
assignment('l10', 1.0).
assignment('s13', 2.0).
assignment('l1', 0.0).
assignment('s22', 2.0).
assignment('s9', 2.0).
assignment('s29', 2.0).
assignment('l6', 1.0).
assignment('l12', 1.0).
assignment('l23', 1.0).
assignment('s0', 2.0).
assignment('l27', 0.0).
assignment('s27', 2.0).
assignment('s28', 2.0).
assignment('l21', 1.0).
assignment('s5', 2.0).
assignment('s14', 2.0).
assignment('s7', 2.0).
assignment('l20', 1.0).
assignment('l5', 1.0).
assignment('l4', 1.0).
assignment('l28', 1.0).
assignment('l24', 1.0).
assignment('s18', 2.0).
assignment('l13', 1.0).
assignment('s12', 2.0).
assignment('l22', 1.0).
assignment('l25', 1.0).
assignment('l11', 1.0).
assignment('s19', 2.0).
assignment('s10', 2.0).
assignment('l7', 1.0).
assignment('s23', 2.0).
assignment('s24', 2.0).
assignment('s15', 2.0).
assignment('s17', 2.0).
assignment('s16', 2.0).
assignment('l2', 1.0).
assignment('s6', 2.0).
assignment('l0', 0.0).
assignment('l15', 1.0).
assignment('s20', 2.0).
assignment('l26', 1.0).
assignment('l17', 1.0).
assignment('s3', 0.0).
assignment('s1', 2.0).
assignment('l16', 1.0).
assignment('s26', 2.0).
assignment('l19', 1.0).
assignment('l8', 1.0).
assignment('s4', 0.0).
assignment('l3', 1.0).
- constructing invariant I for petri net N and model A'
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 (* 2.0 s5) (* 2.0 s6) (* 2.0 s7) (* 2.0 s8) (* 2.0 s9) (* 2.0 s10) (* 2.0 s11) (* 2.0 s12) (* 2.0 s13) (* 2.0 s14) (* 2.0 s15) (* 2.0 s16) (* 2.0 s17) (* 2.0 s18) (* 2.0 s19) (* 2.0 s20) (* 2.0 s21) (* 2.0 s22) (* 2.0 s23) (* 2.0 s24) (* 2.0 s25) (* 2.0 s26) (* 2.0 s27) (* 2.0 s28) (* 2.0 s29) s2 l28)))

* Invariant I for the petri net:
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 (* 2.0 s5) (* 2.0 s6) (* 2.0 s7) (* 2.0 s8) (* 2.0 s9) (* 2.0 s10) (* 2.0 s11) (* 2.0 s12) (* 2.0 s13) (* 2.0 s14) (* 2.0 s15) (* 2.0 s16) (* 2.0 s17) (* 2.0 s18) (* 2.0 s19) (* 2.0 s20) (* 2.0 s21) (* 2.0 s22) (* 2.0 s23) (* 2.0 s24) (* 2.0 s25) (* 2.0 s26) (* 2.0 s27) (* 2.0 s28) (* 2.0 s29) s2 l28)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


