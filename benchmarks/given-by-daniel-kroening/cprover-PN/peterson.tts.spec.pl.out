PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/peterson.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(s1, [t1], [t2]).
place(s2, [t2], [t3]).
place(s3, [t3], [t4]).
place(s4, [t4], [t5]).
place(l2, [t6], [t8,t7]).
place(l3, [t8,t7], [t10,t9]).
place(l4, [t10,t9], [t11]).
place(l1, [t11,t1], [t6]).
place(l9, [t17], [t16]).
place(s6, [t6], [t18]).
place(s7, [t7], [t19]).
place(s8, [t8], [t20]).
place(s9, [t20], [t21]).
place(s10, [t9], [t22]).
place(s11, [t22], [t23]).
place(l10, [t23,t16,t4], [t22,t17]).
place(s12, [t10], [t24]).
place(s13, [t24], [t25]).
place(l6, [t18], [t26]).
place(s14, [t11], [t26]).
place(s15, [t17], [t27]).
place(s16, [t14], [t28]).
place(l12, [t27], [t29,t28]).
place(s17, [t13], [t29]).
place(s18, [t29], [t30]).
place(l7, [t30,t25,t14], [t24,t19,t13]).
place(s19, [t12], [t31]).
place(s20, [t31], [t32]).
place(l5, [t32,t26,t2], [t18,t12]).
place(l13, [t28,t13], [t33,t31]).
place(s21, [t15], [t33]).
place(s22, [t33], [t34]).
place(l8, [t34,t21,t19,t3], [t20,t15,t14]).
place(l14, [t15,t12], [t35]).
place(s23, [t16], [t35]).
place(s5, [t35,t34,t32,t30,t28,t27,t26,t25,t23,t21,t19,t18,t5], [t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6]).
place(l11, [t35,t5], [t27]).
place(l0, [init1,t33,t31,t29,t24,t22,t20], [t34,t32,t30,t25,t23,t21,t5,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s1,l1]).
transition(t2, [l0,s1], [s2,l5]).
transition(t3, [l0,s2], [s3,l8]).
transition(t4, [l0,s3], [s4,l10]).
transition(t5, [l0,s4], [s5,l11]).
transition(t6, [l1,s5], [s6,l2]).
transition(t7, [l2,s5], [s7,l3]).
transition(t8, [l2,s5], [s8,l3]).
transition(t9, [l3,s5], [s10,l4]).
transition(t10, [l3,s5], [s12,l4]).
transition(t11, [l4,s5], [s14,l1]).
transition(t12, [l5,s5], [s19,l14]).
transition(t13, [l7,s5], [s17,l13]).
transition(t14, [l8,s5], [s16,l7]).
transition(t15, [l8,s5], [s21,l14]).
transition(t16, [l9,s5], [s23,l10]).
transition(t17, [l10,s5], [s15,l9]).
transition(t18, [l5,s6], [s5,l6]).
transition(t19, [l7,s7], [s5,l8]).
transition(t20, [l8,s8], [s9,l0]).
transition(t21, [l0,s9], [s5,l8]).
transition(t22, [l10,s10], [s11,l0]).
transition(t23, [l0,s11], [s5,l10]).
transition(t24, [l7,s12], [s13,l0]).
transition(t25, [l0,s13], [s5,l7]).
transition(t26, [l6,s14], [s5,l5]).
transition(t27, [l11,s15], [s5,l12]).
transition(t28, [l12,s16], [s5,l13]).
transition(t29, [l12,s17], [s18,l0]).
transition(t30, [l0,s18], [s5,l7]).
transition(t31, [l13,s19], [s20,l0]).
transition(t32, [l0,s20], [s5,l5]).
transition(t33, [l13,s21], [s22,l0]).
transition(t34, [l0,s22], [s5,l8]).
transition(t35, [l14,s23], [s5,l11]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s1, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s1, t2, 1).
weight(t2, s2, 1).
weight(t2, l5, 1).
weight(l0, t3, 1).
weight(s2, t3, 1).
weight(t3, s3, 1).
weight(t3, l8, 1).
weight(l0, t4, 1).
weight(s3, t4, 1).
weight(t4, s4, 1).
weight(t4, l10, 1).
weight(l0, t5, 1).
weight(s4, t5, 1).
weight(t5, s5, 1).
weight(t5, l11, 1).
weight(l1, t6, 1).
weight(s5, t6, 1).
weight(t6, s6, 1).
weight(t6, l2, 1).
weight(l2, t7, 1).
weight(s5, t7, 1).
weight(t7, s7, 1).
weight(t7, l3, 1).
weight(l2, t8, 1).
weight(s5, t8, 1).
weight(t8, s8, 1).
weight(t8, l3, 1).
weight(l3, t9, 1).
weight(s5, t9, 1).
weight(t9, s10, 1).
weight(t9, l4, 1).
weight(l3, t10, 1).
weight(s5, t10, 1).
weight(t10, s12, 1).
weight(t10, l4, 1).
weight(l4, t11, 1).
weight(s5, t11, 1).
weight(t11, s14, 1).
weight(t11, l1, 1).
weight(l5, t12, 1).
weight(s5, t12, 1).
weight(t12, s19, 1).
weight(t12, l14, 1).
weight(l7, t13, 1).
weight(s5, t13, 1).
weight(t13, s17, 1).
weight(t13, l13, 1).
weight(l8, t14, 1).
weight(s5, t14, 1).
weight(t14, s16, 1).
weight(t14, l7, 1).
weight(l8, t15, 1).
weight(s5, t15, 1).
weight(t15, s21, 1).
weight(t15, l14, 1).
weight(l9, t16, 1).
weight(s5, t16, 1).
weight(t16, s23, 1).
weight(t16, l10, 1).
weight(l10, t17, 1).
weight(s5, t17, 1).
weight(t17, s15, 1).
weight(t17, l9, 1).
weight(l5, t18, 1).
weight(s6, t18, 1).
weight(t18, s5, 1).
weight(t18, l6, 1).
weight(l7, t19, 1).
weight(s7, t19, 1).
weight(t19, s5, 1).
weight(t19, l8, 1).
weight(l8, t20, 1).
weight(s8, t20, 1).
weight(t20, s9, 1).
weight(t20, l0, 1).
weight(l0, t21, 1).
weight(s9, t21, 1).
weight(t21, s5, 1).
weight(t21, l8, 1).
weight(l10, t22, 1).
weight(s10, t22, 1).
weight(t22, s11, 1).
weight(t22, l0, 1).
weight(l0, t23, 1).
weight(s11, t23, 1).
weight(t23, s5, 1).
weight(t23, l10, 1).
weight(l7, t24, 1).
weight(s12, t24, 1).
weight(t24, s13, 1).
weight(t24, l0, 1).
weight(l0, t25, 1).
weight(s13, t25, 1).
weight(t25, s5, 1).
weight(t25, l7, 1).
weight(l6, t26, 1).
weight(s14, t26, 1).
weight(t26, s5, 1).
weight(t26, l5, 1).
weight(l11, t27, 1).
weight(s15, t27, 1).
weight(t27, s5, 1).
weight(t27, l12, 1).
weight(l12, t28, 1).
weight(s16, t28, 1).
weight(t28, s5, 1).
weight(t28, l13, 1).
weight(l12, t29, 1).
weight(s17, t29, 1).
weight(t29, s18, 1).
weight(t29, l0, 1).
weight(l0, t30, 1).
weight(s18, t30, 1).
weight(t30, s5, 1).
weight(t30, l7, 1).
weight(l13, t31, 1).
weight(s19, t31, 1).
weight(t31, s20, 1).
weight(t31, l0, 1).
weight(l0, t32, 1).
weight(s20, t32, 1).
weight(t32, s5, 1).
weight(t32, l5, 1).
weight(l13, t33, 1).
weight(s21, t33, 1).
weight(t33, s22, 1).
weight(t33, l0, 1).
weight(l0, t34, 1).
weight(s22, t34, 1).
weight(t34, s5, 1).
weight(t34, l8, 1).
weight(l14, t35, 1).
weight(s23, t35, 1).
weight(t35, s5, 1).
weight(t35, l11, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s5 1)').
cond('(>= l4 1)').
cond('(>= l14 1)').

target(s5, 1).
target(l4, 1).
target(l14, 1).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun s2 () Real)
(declare-fun s3 () Real)
(declare-fun s4 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l1 () Real)
(declare-fun l9 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun s11 () Real)
(declare-fun l10 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun l6 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun l12 () Real)
(declare-fun s17 () Real)
(declare-fun s18 () Real)
(declare-fun l7 () Real)
(declare-fun s19 () Real)
(declare-fun s20 () Real)
(declare-fun l5 () Real)
(declare-fun l13 () Real)
(declare-fun s21 () Real)
(declare-fun s22 () Real)
(declare-fun l8 () Real)
(declare-fun l14 () Real)
(declare-fun s23 () Real)
(declare-fun s5 () Real)
(declare-fun l11 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l5 (- s1) s2)))
(assert (>= 0 (+ (- l0) l8 (- s2) s3)))
(assert (>= 0 (+ (- l0) l10 (- s3) s4)))
(assert (>= 0 (+ (- l0) l11 (- s4) s5)))
(assert (>= 0 (+ (- l1) l2 (- s5) s6)))
(assert (>= 0 (+ (- l2) l3 (- s5) s7)))
(assert (>= 0 (+ (- l2) l3 (- s5) s8)))
(assert (>= 0 (+ (- l3) l4 s10 (- s5))))
(assert (>= 0 (+ (- l3) l4 s12 (- s5))))
(assert (>= 0 (+ l1 (- l4) s14 (- s5))))
(assert (>= 0 (+ l14 (- l5) s19 (- s5))))
(assert (>= 0 (+ l13 (- l7) s17 (- s5))))
(assert (>= 0 (+ l7 (- l8) s16 (- s5))))
(assert (>= 0 (+ l14 (- l8) s21 (- s5))))
(assert (>= 0 (+ l10 (- l9) s23 (- s5))))
(assert (>= 0 (+ (- l10) l9 s15 (- s5))))
(assert (>= 0 (+ (- l5) l6 s5 (- s6))))
(assert (>= 0 (+ (- l7) l8 s5 (- s7))))
(assert (>= 0 (+ l0 (- l8) (- s8) s9)))
(assert (>= 0 (+ (- l0) l8 s5 (- s9))))
(assert (>= 0 (+ l0 (- l10) (- s10) s11)))
(assert (>= 0 (+ (- l0) l10 (- s11) s5)))
(assert (>= 0 (+ l0 (- l7) (- s12) s13)))
(assert (>= 0 (+ (- l0) l7 (- s13) s5)))
(assert (>= 0 (+ l5 (- l6) (- s14) s5)))
(assert (>= 0 (+ (- l11) l12 (- s15) s5)))
(assert (>= 0 (+ (- l12) l13 (- s16) s5)))
(assert (>= 0 (+ l0 (- l12) (- s17) s18)))
(assert (>= 0 (+ (- l0) l7 (- s18) s5)))
(assert (>= 0 (+ l0 (- l13) (- s19) s20)))
(assert (>= 0 (+ (- l0) l5 (- s20) s5)))
(assert (>= 0 (+ l0 (- l13) (- s21) s22)))
(assert (>= 0 (+ (- l0) l8 (- s22) s5)))
(assert (>= 0 (+ l11 (- l14) (- s23) s5)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) l4 l14 s5 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l1 0))
(assert (>= l9 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= l10 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= l6 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= l12 0))
(assert (>= s17 0))
(assert (>= s18 0))
(assert (>= l7 0))
(assert (>= s19 0))
(assert (>= s20 0))
(assert (>= l5 0))
(assert (>= l13 0))
(assert (>= s21 0))
(assert (>= s22 0))
(assert (>= l8 0))
(assert (>= l14 0))
(assert (>= s23 0))
(assert (>= s5 0))
(assert (>= l11 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 117 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


