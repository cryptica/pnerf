PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/lamport.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(s1, [t1], [t2]).
place(s2, [t2], [t3]).
place(s3, [t3], [t4]).
place(l2, [t5,t1], [t6]).
place(l3, [t6], [t7]).
place(l1, [t7], [t5]).
place(l7, [t8], [t12]).
place(l10, [t10], [t13]).
place(s5, [t5], [t14]).
place(s6, [t6], [t15]).
place(s7, [t7], [t16]).
place(s8, [t16], [t17]).
place(l6, [t17,t13,t12,t3], [t16,t11]).
place(s9, [t8], [t18]).
place(s10, [t18], [t19]).
place(l4, [t19,t15], [t14,t8]).
place(s11, [t12], [t20]).
place(l8, [t20], [t21]).
place(s12, [t9], [t21]).
place(s13, [t21], [t22]).
place(l9, [t11], [t23,t18]).
place(s14, [t10], [t23]).
place(s15, [t23], [t24]).
place(l5, [t24,t22,t14,t2], [t15,t10,t9]).
place(s16, [t13], [t25]).
place(l11, [t25,t9,t4], [t26]).
place(s17, [t11], [t26]).
place(s4, [t26,t25,t24,t22,t20,t19,t17,t15,t14,t4], [t13,t12,t11,t10,t9,t8,t7,t6,t5]).
place(l0, [init1,t26,t23,t21,t18,t16], [t25,t24,t22,t20,t19,t17,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s1,l2]).
transition(t2, [l0,s1], [s2,l5]).
transition(t3, [l0,s2], [s3,l6]).
transition(t4, [l0,s3], [s4,l11]).
transition(t5, [l1,s4], [s5,l2]).
transition(t6, [l2,s4], [s6,l3]).
transition(t7, [l3,s4], [s7,l1]).
transition(t8, [l4,s4], [s9,l7]).
transition(t9, [l5,s4], [s12,l11]).
transition(t10, [l5,s4], [s14,l10]).
transition(t11, [l6,s4], [s17,l9]).
transition(t12, [l7,s4], [s11,l6]).
transition(t13, [l10,s4], [s16,l6]).
transition(t14, [l4,s5], [s4,l5]).
transition(t15, [l5,s6], [s4,l4]).
transition(t16, [l6,s7], [s8,l0]).
transition(t17, [l0,s8], [s4,l6]).
transition(t18, [l9,s9], [s10,l0]).
transition(t19, [l0,s10], [s4,l4]).
transition(t20, [l0,s11], [s4,l8]).
transition(t21, [l8,s12], [s13,l0]).
transition(t22, [l0,s13], [s4,l5]).
transition(t23, [l9,s14], [s15,l0]).
transition(t24, [l0,s15], [s4,l5]).
transition(t25, [l0,s16], [s4,l11]).
transition(t26, [l11,s17], [s4,l0]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s1, 1).
weight(t1, l2, 1).
weight(l0, t2, 1).
weight(s1, t2, 1).
weight(t2, s2, 1).
weight(t2, l5, 1).
weight(l0, t3, 1).
weight(s2, t3, 1).
weight(t3, s3, 1).
weight(t3, l6, 1).
weight(l0, t4, 1).
weight(s3, t4, 1).
weight(t4, s4, 1).
weight(t4, l11, 1).
weight(l1, t5, 1).
weight(s4, t5, 1).
weight(t5, s5, 1).
weight(t5, l2, 1).
weight(l2, t6, 1).
weight(s4, t6, 1).
weight(t6, s6, 1).
weight(t6, l3, 1).
weight(l3, t7, 1).
weight(s4, t7, 1).
weight(t7, s7, 1).
weight(t7, l1, 1).
weight(l4, t8, 1).
weight(s4, t8, 1).
weight(t8, s9, 1).
weight(t8, l7, 1).
weight(l5, t9, 1).
weight(s4, t9, 1).
weight(t9, s12, 1).
weight(t9, l11, 1).
weight(l5, t10, 1).
weight(s4, t10, 1).
weight(t10, s14, 1).
weight(t10, l10, 1).
weight(l6, t11, 1).
weight(s4, t11, 1).
weight(t11, s17, 1).
weight(t11, l9, 1).
weight(l7, t12, 1).
weight(s4, t12, 1).
weight(t12, s11, 1).
weight(t12, l6, 1).
weight(l10, t13, 1).
weight(s4, t13, 1).
weight(t13, s16, 1).
weight(t13, l6, 1).
weight(l4, t14, 1).
weight(s5, t14, 1).
weight(t14, s4, 1).
weight(t14, l5, 1).
weight(l5, t15, 1).
weight(s6, t15, 1).
weight(t15, s4, 1).
weight(t15, l4, 1).
weight(l6, t16, 1).
weight(s7, t16, 1).
weight(t16, s8, 1).
weight(t16, l0, 1).
weight(l0, t17, 1).
weight(s8, t17, 1).
weight(t17, s4, 1).
weight(t17, l6, 1).
weight(l9, t18, 1).
weight(s9, t18, 1).
weight(t18, s10, 1).
weight(t18, l0, 1).
weight(l0, t19, 1).
weight(s10, t19, 1).
weight(t19, s4, 1).
weight(t19, l4, 1).
weight(l0, t20, 1).
weight(s11, t20, 1).
weight(t20, s4, 1).
weight(t20, l8, 1).
weight(l8, t21, 1).
weight(s12, t21, 1).
weight(t21, s13, 1).
weight(t21, l0, 1).
weight(l0, t22, 1).
weight(s13, t22, 1).
weight(t22, s4, 1).
weight(t22, l5, 1).
weight(l9, t23, 1).
weight(s14, t23, 1).
weight(t23, s15, 1).
weight(t23, l0, 1).
weight(l0, t24, 1).
weight(s15, t24, 1).
weight(t24, s4, 1).
weight(t24, l5, 1).
weight(l0, t25, 1).
weight(s16, t25, 1).
weight(t25, s4, 1).
weight(t25, l11, 1).
weight(l11, t26, 1).
weight(s17, t26, 1).
weight(t26, s4, 1).
weight(t26, l0, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s4 1)').
cond('(>= l1 1)').
cond('(>= l10 1)').

target(s4, 1).
target(l1, 1).
target(l10, 1).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun s2 () Real)
(declare-fun s3 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l1 () Real)
(declare-fun l7 () Real)
(declare-fun l10 () Real)
(declare-fun s5 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun l6 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun l4 () Real)
(declare-fun s11 () Real)
(declare-fun l8 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun l9 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun l5 () Real)
(declare-fun s16 () Real)
(declare-fun l11 () Real)
(declare-fun s17 () Real)
(declare-fun s4 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l2 (- s0) s1)))
(assert (>= 0 (+ (- l0) l5 (- s1) s2)))
(assert (>= 0 (+ (- l0) l6 (- s2) s3)))
(assert (>= 0 (+ (- l0) l11 (- s3) s4)))
(assert (>= 0 (+ (- l1) l2 (- s4) s5)))
(assert (>= 0 (+ (- l2) l3 (- s4) s6)))
(assert (>= 0 (+ l1 (- l3) (- s4) s7)))
(assert (>= 0 (+ (- l4) l7 (- s4) s9)))
(assert (>= 0 (+ l11 (- l5) s12 (- s4))))
(assert (>= 0 (+ l10 (- l5) s14 (- s4))))
(assert (>= 0 (+ (- l6) l9 s17 (- s4))))
(assert (>= 0 (+ l6 (- l7) s11 (- s4))))
(assert (>= 0 (+ (- l10) l6 s16 (- s4))))
(assert (>= 0 (+ (- l4) l5 s4 (- s5))))
(assert (>= 0 (+ l4 (- l5) s4 (- s6))))
(assert (>= 0 (+ l0 (- l6) (- s7) s8)))
(assert (>= 0 (+ (- l0) l6 s4 (- s8))))
(assert (>= 0 (+ l0 (- l9) s10 (- s9))))
(assert (>= 0 (+ (- l0) l4 (- s10) s4)))
(assert (>= 0 (+ (- l0) l8 (- s11) s4)))
(assert (>= 0 (+ l0 (- l8) (- s12) s13)))
(assert (>= 0 (+ (- l0) l5 (- s13) s4)))
(assert (>= 0 (+ l0 (- l9) (- s14) s15)))
(assert (>= 0 (+ (- l0) l5 (- s15) s4)))
(assert (>= 0 (+ (- l0) l11 (- s16) s4)))
(assert (>= 0 (+ l0 (- l11) (- s17) s4)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) l1 l10 s4 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l1 0))
(assert (>= l7 0))
(assert (>= l10 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= l6 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= l4 0))
(assert (>= s11 0))
(assert (>= l8 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= l9 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= l5 0))
(assert (>= s16 0))
(assert (>= l11 0))
(assert (>= s17 0))
(assert (>= s4 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 90 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


