PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/leabasicapproach.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [t2,t1], [t3,t2,t1]).
place(s1, [t3], [t4]).
place(s2, [t4], [t5]).
place(s3, [t5], [t6]).
place(l2, [t8,t7], [t10,t9]).
place(l1, [t10,t9,t3], [t8,t7]).
place(l4, [t12,t11], [t14,t13]).
place(l3, [t14,t13,t4], [t12,t11]).
place(l5, [t16,t5,t1], [t15]).
place(l11, [t18,t6,t2], [t17]).
place(l6, [t15], [t19]).
place(s5, [t7], [t19]).
place(l7, [t19], [t20]).
place(s6, [t11], [t20]).
place(l8, [t20], [t21]).
place(s7, [t13], [t21]).
place(l9, [t21], [t22]).
place(s8, [t9], [t22]).
place(l10, [t22], [t16]).
place(l12, [t17], [t23]).
place(s9, [t12], [t23]).
place(l13, [t23], [t24]).
place(s10, [t8], [t24]).
place(l14, [t24], [t25]).
place(s11, [t10], [t25]).
place(l15, [t25], [t26]).
place(s12, [t14], [t26]).
place(s4, [t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t6], [t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7]).
place(l16, [t26], [t18]).
place(l0, [init1], [t6,t5,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s0,l5]).
transition(t2, [l0,s0], [s0,l11]).
transition(t3, [l0,s0], [s1,l1]).
transition(t4, [l0,s1], [s2,l3]).
transition(t5, [l0,s2], [s3,l5]).
transition(t6, [l0,s3], [s4,l11]).
transition(t7, [l1,s4], [s5,l2]).
transition(t8, [l1,s4], [s10,l2]).
transition(t9, [l2,s4], [s8,l1]).
transition(t10, [l2,s4], [s11,l1]).
transition(t11, [l3,s4], [s6,l4]).
transition(t12, [l3,s4], [s9,l4]).
transition(t13, [l4,s4], [s7,l3]).
transition(t14, [l4,s4], [s12,l3]).
transition(t15, [l5,s4], [s4,l6]).
transition(t16, [l10,s4], [s4,l5]).
transition(t17, [l11,s4], [s4,l12]).
transition(t18, [l16,s4], [s4,l11]).
transition(t19, [l6,s5], [s4,l7]).
transition(t20, [l7,s6], [s4,l8]).
transition(t21, [l8,s7], [s4,l9]).
transition(t22, [l9,s8], [s4,l10]).
transition(t23, [l12,s9], [s4,l13]).
transition(t24, [l13,s10], [s4,l14]).
transition(t25, [l14,s11], [s4,l15]).
transition(t26, [l15,s12], [s4,l16]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l5, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s0, 1).
weight(t2, l11, 1).
weight(l0, t3, 1).
weight(s0, t3, 1).
weight(t3, s1, 1).
weight(t3, l1, 1).
weight(l0, t4, 1).
weight(s1, t4, 1).
weight(t4, s2, 1).
weight(t4, l3, 1).
weight(l0, t5, 1).
weight(s2, t5, 1).
weight(t5, s3, 1).
weight(t5, l5, 1).
weight(l0, t6, 1).
weight(s3, t6, 1).
weight(t6, s4, 1).
weight(t6, l11, 1).
weight(l1, t7, 1).
weight(s4, t7, 1).
weight(t7, s5, 1).
weight(t7, l2, 1).
weight(l1, t8, 1).
weight(s4, t8, 1).
weight(t8, s10, 1).
weight(t8, l2, 1).
weight(l2, t9, 1).
weight(s4, t9, 1).
weight(t9, s8, 1).
weight(t9, l1, 1).
weight(l2, t10, 1).
weight(s4, t10, 1).
weight(t10, s11, 1).
weight(t10, l1, 1).
weight(l3, t11, 1).
weight(s4, t11, 1).
weight(t11, s6, 1).
weight(t11, l4, 1).
weight(l3, t12, 1).
weight(s4, t12, 1).
weight(t12, s9, 1).
weight(t12, l4, 1).
weight(l4, t13, 1).
weight(s4, t13, 1).
weight(t13, s7, 1).
weight(t13, l3, 1).
weight(l4, t14, 1).
weight(s4, t14, 1).
weight(t14, s12, 1).
weight(t14, l3, 1).
weight(l5, t15, 1).
weight(s4, t15, 1).
weight(t15, s4, 1).
weight(t15, l6, 1).
weight(l10, t16, 1).
weight(s4, t16, 1).
weight(t16, s4, 1).
weight(t16, l5, 1).
weight(l11, t17, 1).
weight(s4, t17, 1).
weight(t17, s4, 1).
weight(t17, l12, 1).
weight(l16, t18, 1).
weight(s4, t18, 1).
weight(t18, s4, 1).
weight(t18, l11, 1).
weight(l6, t19, 1).
weight(s5, t19, 1).
weight(t19, s4, 1).
weight(t19, l7, 1).
weight(l7, t20, 1).
weight(s6, t20, 1).
weight(t20, s4, 1).
weight(t20, l8, 1).
weight(l8, t21, 1).
weight(s7, t21, 1).
weight(t21, s4, 1).
weight(t21, l9, 1).
weight(l9, t22, 1).
weight(s8, t22, 1).
weight(t22, s4, 1).
weight(t22, l10, 1).
weight(l12, t23, 1).
weight(s9, t23, 1).
weight(t23, s4, 1).
weight(t23, l13, 1).
weight(l13, t24, 1).
weight(s10, t24, 1).
weight(t24, s4, 1).
weight(t24, l14, 1).
weight(l14, t25, 1).
weight(s11, t25, 1).
weight(t25, s4, 1).
weight(t25, l15, 1).
weight(l15, t26, 1).
weight(s12, t26, 1).
weight(t26, s4, 1).
weight(t26, l16, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s4 1)').
cond('(>= l7 1)').
cond('(>= l13 1)').

target(s4, 1).
target(l7, 1).
target(l13, 1).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun s2 () Real)
(declare-fun s3 () Real)
(declare-fun l2 () Real)
(declare-fun l1 () Real)
(declare-fun l4 () Real)
(declare-fun l3 () Real)
(declare-fun l5 () Real)
(declare-fun l11 () Real)
(declare-fun l6 () Real)
(declare-fun s5 () Real)
(declare-fun l7 () Real)
(declare-fun s6 () Real)
(declare-fun l8 () Real)
(declare-fun s7 () Real)
(declare-fun l9 () Real)
(declare-fun s8 () Real)
(declare-fun l10 () Real)
(declare-fun l12 () Real)
(declare-fun s9 () Real)
(declare-fun l13 () Real)
(declare-fun s10 () Real)
(declare-fun l14 () Real)
(declare-fun s11 () Real)
(declare-fun l15 () Real)
(declare-fun s12 () Real)
(declare-fun s4 () Real)
(declare-fun l16 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l5)))
(assert (>= 0 (+ (- l0) l11)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l3 (- s1) s2)))
(assert (>= 0 (+ (- l0) l5 (- s2) s3)))
(assert (>= 0 (+ (- l0) l11 (- s3) s4)))
(assert (>= 0 (+ (- l1) l2 (- s4) s5)))
(assert (>= 0 (+ (- l1) l2 s10 (- s4))))
(assert (>= 0 (+ l1 (- l2) (- s4) s8)))
(assert (>= 0 (+ l1 (- l2) s11 (- s4))))
(assert (>= 0 (+ (- l3) l4 (- s4) s6)))
(assert (>= 0 (+ (- l3) l4 (- s4) s9)))
(assert (>= 0 (+ l3 (- l4) (- s4) s7)))
(assert (>= 0 (+ l3 (- l4) s12 (- s4))))
(assert (>= 0 (+ (- l5) l6)))
(assert (>= 0 (+ (- l10) l5)))
(assert (>= 0 (+ (- l11) l12)))
(assert (>= 0 (+ l11 (- l16))))
(assert (>= 0 (+ (- l6) l7 s4 (- s5))))
(assert (>= 0 (+ (- l7) l8 s4 (- s6))))
(assert (>= 0 (+ (- l8) l9 s4 (- s7))))
(assert (>= 0 (+ l10 (- l9) s4 (- s8))))
(assert (>= 0 (+ (- l12) l13 s4 (- s9))))
(assert (>= 0 (+ (- l13) l14 (- s10) s4)))
(assert (>= 0 (+ (- l14) l15 (- s11) s4)))
(assert (>= 0 (+ (- l15) l16 (- s12) s4)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) l7 l13 s4 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= l2 0))
(assert (>= l1 0))
(assert (>= l4 0))
(assert (>= l3 0))
(assert (>= l5 0))
(assert (>= l11 0))
(assert (>= l6 0))
(assert (>= s5 0))
(assert (>= l7 0))
(assert (>= s6 0))
(assert (>= l8 0))
(assert (>= s7 0))
(assert (>= l9 0))
(assert (>= s8 0))
(assert (>= l10 0))
(assert (>= l12 0))
(assert (>= s9 0))
(assert (>= l13 0))
(assert (>= s10 0))
(assert (>= l14 0))
(assert (>= s11 0))
(assert (>= l15 0))
(assert (>= s12 0))
(assert (>= s4 0))
(assert (>= l16 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 90 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


