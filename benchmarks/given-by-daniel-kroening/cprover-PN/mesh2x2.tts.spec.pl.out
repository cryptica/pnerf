PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/mesh2x2.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [t4,t3,t2,t1], [t5,t4,t3,t2,t1]).
place(s1, [t5], [t6]).
place(s2, [t6], [t7]).
place(s3, [t7], [t8]).
place(s4, [t8], [t9]).
place(s5, [t9], [t10]).
place(s6, [t10], [t11]).
place(s7, [t11], [t12]).
place(l3, [t13], [t15]).
place(l6, [t14], [t20]).
place(l7, [t16], [t21]).
place(l8, [t17], [t22]).
place(l9, [t18], [t23]).
place(l10, [t19], [t24]).
place(l13, [t25], [t29]).
place(l16, [t28], [t30]).
place(l19, [t31], [t33]).
place(l22, [t32], [t36]).
place(l23, [t29], [t37]).
place(l1, [t37,t23,t5,t1], [t13]).
place(l24, [t34], [t38]).
place(l25, [t35], [t39]).
place(l26, [t30], [t40]).
place(l2, [t40,t22,t6,t2], [t14]).
place(s9, [t13], [t45]).
place(s10, [t14], [t46]).
place(l29, [t41], [t47]).
place(s11, [t16], [t47]).
place(l15, [t27], [t48]).
place(s12, [t17], [t48]).
place(l14, [t26], [t49]).
place(s13, [t18], [t49]).
place(l32, [t44], [t50]).
place(s14, [t19], [t50]).
place(s15, [t15], [t51]).
place(l11, [t51], [t26,t25]).
place(s16, [t20], [t52]).
place(l12, [t52], [t28,t27]).
place(s17, [t21], [t53]).
place(l17, [t53,t39,t9,t3], [t31]).
place(s18, [t22], [t54]).
place(l4, [t54,t21,t15,t7], [t45,t17,t16]).
place(s19, [t23], [t55]).
place(l5, [t55,t24,t20,t8], [t46,t19,t18]).
place(s20, [t24], [t56]).
place(l18, [t56,t38,t10,t4], [t32]).
place(s21, [t31], [t57]).
place(s22, [t32], [t58]).
place(s23, [t29], [t59]).
place(l31, [t43], [t60]).
place(s24, [t34], [t60]).
place(l30, [t42], [t61]).
place(s25, [t35], [t61]).
place(s26, [t30], [t62]).
place(s27, [t33], [t63]).
place(l27, [t63], [t42,t41]).
place(s28, [t36], [t64]).
place(l28, [t64], [t44,t43]).
place(s29, [t37], [t65]).
place(s30, [t38], [t66]).
place(l20, [t66,t65,t33,t11], [t59,t57,t34]).
place(s31, [t39], [t67]).
place(s32, [t40], [t68]).
place(s8, [t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t28,t27,t26,t25,t12], [t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13]).
place(l21, [t68,t67,t36,t12], [t62,t58,t35]).
place(l0, [init1,t62,t61,t60,t59,t58,t57,t50,t49,t48,t47,t46,t45], [t68,t67,t66,t65,t64,t63,t56,t55,t54,t53,t52,t51,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s0,l1]).
transition(t2, [l0,s0], [s0,l2]).
transition(t3, [l0,s0], [s0,l17]).
transition(t4, [l0,s0], [s0,l18]).
transition(t5, [l0,s0], [s1,l1]).
transition(t6, [l0,s1], [s2,l2]).
transition(t7, [l0,s2], [s3,l4]).
transition(t8, [l0,s3], [s4,l5]).
transition(t9, [l0,s4], [s5,l17]).
transition(t10, [l0,s5], [s6,l18]).
transition(t11, [l0,s6], [s7,l20]).
transition(t12, [l0,s7], [s8,l21]).
transition(t13, [l1,s8], [s9,l3]).
transition(t14, [l2,s8], [s10,l6]).
transition(t15, [l3,s8], [s15,l4]).
transition(t16, [l4,s8], [s11,l7]).
transition(t17, [l4,s8], [s12,l8]).
transition(t18, [l5,s8], [s13,l9]).
transition(t19, [l5,s8], [s14,l10]).
transition(t20, [l6,s8], [s16,l5]).
transition(t21, [l7,s8], [s17,l4]).
transition(t22, [l8,s8], [s18,l2]).
transition(t23, [l9,s8], [s19,l1]).
transition(t24, [l10,s8], [s20,l5]).
transition(t25, [l11,s8], [s8,l13]).
transition(t26, [l11,s8], [s8,l14]).
transition(t27, [l12,s8], [s8,l15]).
transition(t28, [l12,s8], [s8,l16]).
transition(t29, [l13,s8], [s23,l23]).
transition(t30, [l16,s8], [s26,l26]).
transition(t31, [l17,s8], [s21,l19]).
transition(t32, [l18,s8], [s22,l22]).
transition(t33, [l19,s8], [s27,l20]).
transition(t34, [l20,s8], [s24,l24]).
transition(t35, [l21,s8], [s25,l25]).
transition(t36, [l22,s8], [s28,l21]).
transition(t37, [l23,s8], [s29,l1]).
transition(t38, [l24,s8], [s30,l18]).
transition(t39, [l25,s8], [s31,l17]).
transition(t40, [l26,s8], [s32,l2]).
transition(t41, [l27,s8], [s8,l29]).
transition(t42, [l27,s8], [s8,l30]).
transition(t43, [l28,s8], [s8,l31]).
transition(t44, [l28,s8], [s8,l32]).
transition(t45, [l4,s9], [s8,l0]).
transition(t46, [l5,s10], [s8,l0]).
transition(t47, [l29,s11], [s8,l0]).
transition(t48, [l15,s12], [s8,l0]).
transition(t49, [l14,s13], [s8,l0]).
transition(t50, [l32,s14], [s8,l0]).
transition(t51, [l0,s15], [s8,l11]).
transition(t52, [l0,s16], [s8,l12]).
transition(t53, [l0,s17], [s8,l17]).
transition(t54, [l0,s18], [s8,l4]).
transition(t55, [l0,s19], [s8,l5]).
transition(t56, [l0,s20], [s8,l18]).
transition(t57, [l20,s21], [s8,l0]).
transition(t58, [l21,s22], [s8,l0]).
transition(t59, [l20,s23], [s8,l0]).
transition(t60, [l31,s24], [s8,l0]).
transition(t61, [l30,s25], [s8,l0]).
transition(t62, [l21,s26], [s8,l0]).
transition(t63, [l0,s27], [s8,l27]).
transition(t64, [l0,s28], [s8,l28]).
transition(t65, [l0,s29], [s8,l20]).
transition(t66, [l0,s30], [s8,l20]).
transition(t67, [l0,s31], [s8,l21]).
transition(t68, [l0,s32], [s8,l21]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s0, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s0, t2, 1).
weight(t2, s0, 1).
weight(t2, l2, 1).
weight(l0, t3, 1).
weight(s0, t3, 1).
weight(t3, s0, 1).
weight(t3, l17, 1).
weight(l0, t4, 1).
weight(s0, t4, 1).
weight(t4, s0, 1).
weight(t4, l18, 1).
weight(l0, t5, 1).
weight(s0, t5, 1).
weight(t5, s1, 1).
weight(t5, l1, 1).
weight(l0, t6, 1).
weight(s1, t6, 1).
weight(t6, s2, 1).
weight(t6, l2, 1).
weight(l0, t7, 1).
weight(s2, t7, 1).
weight(t7, s3, 1).
weight(t7, l4, 1).
weight(l0, t8, 1).
weight(s3, t8, 1).
weight(t8, s4, 1).
weight(t8, l5, 1).
weight(l0, t9, 1).
weight(s4, t9, 1).
weight(t9, s5, 1).
weight(t9, l17, 1).
weight(l0, t10, 1).
weight(s5, t10, 1).
weight(t10, s6, 1).
weight(t10, l18, 1).
weight(l0, t11, 1).
weight(s6, t11, 1).
weight(t11, s7, 1).
weight(t11, l20, 1).
weight(l0, t12, 1).
weight(s7, t12, 1).
weight(t12, s8, 1).
weight(t12, l21, 1).
weight(l1, t13, 1).
weight(s8, t13, 1).
weight(t13, s9, 1).
weight(t13, l3, 1).
weight(l2, t14, 1).
weight(s8, t14, 1).
weight(t14, s10, 1).
weight(t14, l6, 1).
weight(l3, t15, 1).
weight(s8, t15, 1).
weight(t15, s15, 1).
weight(t15, l4, 1).
weight(l4, t16, 1).
weight(s8, t16, 1).
weight(t16, s11, 1).
weight(t16, l7, 1).
weight(l4, t17, 1).
weight(s8, t17, 1).
weight(t17, s12, 1).
weight(t17, l8, 1).
weight(l5, t18, 1).
weight(s8, t18, 1).
weight(t18, s13, 1).
weight(t18, l9, 1).
weight(l5, t19, 1).
weight(s8, t19, 1).
weight(t19, s14, 1).
weight(t19, l10, 1).
weight(l6, t20, 1).
weight(s8, t20, 1).
weight(t20, s16, 1).
weight(t20, l5, 1).
weight(l7, t21, 1).
weight(s8, t21, 1).
weight(t21, s17, 1).
weight(t21, l4, 1).
weight(l8, t22, 1).
weight(s8, t22, 1).
weight(t22, s18, 1).
weight(t22, l2, 1).
weight(l9, t23, 1).
weight(s8, t23, 1).
weight(t23, s19, 1).
weight(t23, l1, 1).
weight(l10, t24, 1).
weight(s8, t24, 1).
weight(t24, s20, 1).
weight(t24, l5, 1).
weight(l11, t25, 1).
weight(s8, t25, 1).
weight(t25, s8, 1).
weight(t25, l13, 1).
weight(l11, t26, 1).
weight(s8, t26, 1).
weight(t26, s8, 1).
weight(t26, l14, 1).
weight(l12, t27, 1).
weight(s8, t27, 1).
weight(t27, s8, 1).
weight(t27, l15, 1).
weight(l12, t28, 1).
weight(s8, t28, 1).
weight(t28, s8, 1).
weight(t28, l16, 1).
weight(l13, t29, 1).
weight(s8, t29, 1).
weight(t29, s23, 1).
weight(t29, l23, 1).
weight(l16, t30, 1).
weight(s8, t30, 1).
weight(t30, s26, 1).
weight(t30, l26, 1).
weight(l17, t31, 1).
weight(s8, t31, 1).
weight(t31, s21, 1).
weight(t31, l19, 1).
weight(l18, t32, 1).
weight(s8, t32, 1).
weight(t32, s22, 1).
weight(t32, l22, 1).
weight(l19, t33, 1).
weight(s8, t33, 1).
weight(t33, s27, 1).
weight(t33, l20, 1).
weight(l20, t34, 1).
weight(s8, t34, 1).
weight(t34, s24, 1).
weight(t34, l24, 1).
weight(l21, t35, 1).
weight(s8, t35, 1).
weight(t35, s25, 1).
weight(t35, l25, 1).
weight(l22, t36, 1).
weight(s8, t36, 1).
weight(t36, s28, 1).
weight(t36, l21, 1).
weight(l23, t37, 1).
weight(s8, t37, 1).
weight(t37, s29, 1).
weight(t37, l1, 1).
weight(l24, t38, 1).
weight(s8, t38, 1).
weight(t38, s30, 1).
weight(t38, l18, 1).
weight(l25, t39, 1).
weight(s8, t39, 1).
weight(t39, s31, 1).
weight(t39, l17, 1).
weight(l26, t40, 1).
weight(s8, t40, 1).
weight(t40, s32, 1).
weight(t40, l2, 1).
weight(l27, t41, 1).
weight(s8, t41, 1).
weight(t41, s8, 1).
weight(t41, l29, 1).
weight(l27, t42, 1).
weight(s8, t42, 1).
weight(t42, s8, 1).
weight(t42, l30, 1).
weight(l28, t43, 1).
weight(s8, t43, 1).
weight(t43, s8, 1).
weight(t43, l31, 1).
weight(l28, t44, 1).
weight(s8, t44, 1).
weight(t44, s8, 1).
weight(t44, l32, 1).
weight(l4, t45, 1).
weight(s9, t45, 1).
weight(t45, s8, 1).
weight(t45, l0, 1).
weight(l5, t46, 1).
weight(s10, t46, 1).
weight(t46, s8, 1).
weight(t46, l0, 1).
weight(l29, t47, 1).
weight(s11, t47, 1).
weight(t47, s8, 1).
weight(t47, l0, 1).
weight(l15, t48, 1).
weight(s12, t48, 1).
weight(t48, s8, 1).
weight(t48, l0, 1).
weight(l14, t49, 1).
weight(s13, t49, 1).
weight(t49, s8, 1).
weight(t49, l0, 1).
weight(l32, t50, 1).
weight(s14, t50, 1).
weight(t50, s8, 1).
weight(t50, l0, 1).
weight(l0, t51, 1).
weight(s15, t51, 1).
weight(t51, s8, 1).
weight(t51, l11, 1).
weight(l0, t52, 1).
weight(s16, t52, 1).
weight(t52, s8, 1).
weight(t52, l12, 1).
weight(l0, t53, 1).
weight(s17, t53, 1).
weight(t53, s8, 1).
weight(t53, l17, 1).
weight(l0, t54, 1).
weight(s18, t54, 1).
weight(t54, s8, 1).
weight(t54, l4, 1).
weight(l0, t55, 1).
weight(s19, t55, 1).
weight(t55, s8, 1).
weight(t55, l5, 1).
weight(l0, t56, 1).
weight(s20, t56, 1).
weight(t56, s8, 1).
weight(t56, l18, 1).
weight(l20, t57, 1).
weight(s21, t57, 1).
weight(t57, s8, 1).
weight(t57, l0, 1).
weight(l21, t58, 1).
weight(s22, t58, 1).
weight(t58, s8, 1).
weight(t58, l0, 1).
weight(l20, t59, 1).
weight(s23, t59, 1).
weight(t59, s8, 1).
weight(t59, l0, 1).
weight(l31, t60, 1).
weight(s24, t60, 1).
weight(t60, s8, 1).
weight(t60, l0, 1).
weight(l30, t61, 1).
weight(s25, t61, 1).
weight(t61, s8, 1).
weight(t61, l0, 1).
weight(l21, t62, 1).
weight(s26, t62, 1).
weight(t62, s8, 1).
weight(t62, l0, 1).
weight(l0, t63, 1).
weight(s27, t63, 1).
weight(t63, s8, 1).
weight(t63, l27, 1).
weight(l0, t64, 1).
weight(s28, t64, 1).
weight(t64, s8, 1).
weight(t64, l28, 1).
weight(l0, t65, 1).
weight(s29, t65, 1).
weight(t65, s8, 1).
weight(t65, l20, 1).
weight(l0, t66, 1).
weight(s30, t66, 1).
weight(t66, s8, 1).
weight(t66, l20, 1).
weight(l0, t67, 1).
weight(s31, t67, 1).
weight(t67, s8, 1).
weight(t67, l21, 1).
weight(l0, t68, 1).
weight(s32, t68, 1).
weight(t68, s8, 1).
weight(t68, l21, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s8 1)').
cond('(>= l3 1)').
cond('(>= l8 1)').

target(s8, 1).
target(l3, 1).
target(l8, 1).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun s2 () Real)
(declare-fun s3 () Real)
(declare-fun s4 () Real)
(declare-fun s5 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun l3 () Real)
(declare-fun l6 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l13 () Real)
(declare-fun l16 () Real)
(declare-fun l19 () Real)
(declare-fun l22 () Real)
(declare-fun l23 () Real)
(declare-fun l1 () Real)
(declare-fun l24 () Real)
(declare-fun l25 () Real)
(declare-fun l26 () Real)
(declare-fun l2 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun l29 () Real)
(declare-fun s11 () Real)
(declare-fun l15 () Real)
(declare-fun s12 () Real)
(declare-fun l14 () Real)
(declare-fun s13 () Real)
(declare-fun l32 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun l11 () Real)
(declare-fun s16 () Real)
(declare-fun l12 () Real)
(declare-fun s17 () Real)
(declare-fun l17 () Real)
(declare-fun s18 () Real)
(declare-fun l4 () Real)
(declare-fun s19 () Real)
(declare-fun l5 () Real)
(declare-fun s20 () Real)
(declare-fun l18 () Real)
(declare-fun s21 () Real)
(declare-fun s22 () Real)
(declare-fun s23 () Real)
(declare-fun l31 () Real)
(declare-fun s24 () Real)
(declare-fun l30 () Real)
(declare-fun s25 () Real)
(declare-fun s26 () Real)
(declare-fun s27 () Real)
(declare-fun l27 () Real)
(declare-fun s28 () Real)
(declare-fun l28 () Real)
(declare-fun s29 () Real)
(declare-fun s30 () Real)
(declare-fun l20 () Real)
(declare-fun s31 () Real)
(declare-fun s32 () Real)
(declare-fun s8 () Real)
(declare-fun l21 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1)))
(assert (>= 0 (+ (- l0) l2)))
(assert (>= 0 (+ (- l0) l17)))
(assert (>= 0 (+ (- l0) l18)))
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l2 (- s1) s2)))
(assert (>= 0 (+ (- l0) l4 (- s2) s3)))
(assert (>= 0 (+ (- l0) l5 (- s3) s4)))
(assert (>= 0 (+ (- l0) l17 (- s4) s5)))
(assert (>= 0 (+ (- l0) l18 (- s5) s6)))
(assert (>= 0 (+ (- l0) l20 (- s6) s7)))
(assert (>= 0 (+ (- l0) l21 (- s7) s8)))
(assert (>= 0 (+ (- l1) l3 (- s8) s9)))
(assert (>= 0 (+ (- l2) l6 s10 (- s8))))
(assert (>= 0 (+ (- l3) l4 s15 (- s8))))
(assert (>= 0 (+ (- l4) l7 s11 (- s8))))
(assert (>= 0 (+ (- l4) l8 s12 (- s8))))
(assert (>= 0 (+ (- l5) l9 s13 (- s8))))
(assert (>= 0 (+ l10 (- l5) s14 (- s8))))
(assert (>= 0 (+ l5 (- l6) s16 (- s8))))
(assert (>= 0 (+ l4 (- l7) s17 (- s8))))
(assert (>= 0 (+ l2 (- l8) s18 (- s8))))
(assert (>= 0 (+ l1 (- l9) s19 (- s8))))
(assert (>= 0 (+ (- l10) l5 s20 (- s8))))
(assert (>= 0 (+ (- l11) l13)))
(assert (>= 0 (+ (- l11) l14)))
(assert (>= 0 (+ (- l12) l15)))
(assert (>= 0 (+ (- l12) l16)))
(assert (>= 0 (+ (- l13) l23 s23 (- s8))))
(assert (>= 0 (+ (- l16) l26 s26 (- s8))))
(assert (>= 0 (+ (- l17) l19 s21 (- s8))))
(assert (>= 0 (+ (- l18) l22 s22 (- s8))))
(assert (>= 0 (+ (- l19) l20 s27 (- s8))))
(assert (>= 0 (+ (- l20) l24 s24 (- s8))))
(assert (>= 0 (+ (- l21) l25 s25 (- s8))))
(assert (>= 0 (+ l21 (- l22) s28 (- s8))))
(assert (>= 0 (+ l1 (- l23) s29 (- s8))))
(assert (>= 0 (+ l18 (- l24) s30 (- s8))))
(assert (>= 0 (+ l17 (- l25) s31 (- s8))))
(assert (>= 0 (+ l2 (- l26) s32 (- s8))))
(assert (>= 0 (+ (- l27) l29)))
(assert (>= 0 (+ (- l27) l30)))
(assert (>= 0 (+ (- l28) l31)))
(assert (>= 0 (+ (- l28) l32)))
(assert (>= 0 (+ l0 (- l4) s8 (- s9))))
(assert (>= 0 (+ l0 (- l5) (- s10) s8)))
(assert (>= 0 (+ l0 (- l29) (- s11) s8)))
(assert (>= 0 (+ l0 (- l15) (- s12) s8)))
(assert (>= 0 (+ l0 (- l14) (- s13) s8)))
(assert (>= 0 (+ l0 (- l32) (- s14) s8)))
(assert (>= 0 (+ (- l0) l11 (- s15) s8)))
(assert (>= 0 (+ (- l0) l12 (- s16) s8)))
(assert (>= 0 (+ (- l0) l17 (- s17) s8)))
(assert (>= 0 (+ (- l0) l4 (- s18) s8)))
(assert (>= 0 (+ (- l0) l5 (- s19) s8)))
(assert (>= 0 (+ (- l0) l18 (- s20) s8)))
(assert (>= 0 (+ l0 (- l20) (- s21) s8)))
(assert (>= 0 (+ l0 (- l21) (- s22) s8)))
(assert (>= 0 (+ l0 (- l20) (- s23) s8)))
(assert (>= 0 (+ l0 (- l31) (- s24) s8)))
(assert (>= 0 (+ l0 (- l30) (- s25) s8)))
(assert (>= 0 (+ l0 (- l21) (- s26) s8)))
(assert (>= 0 (+ (- l0) l27 (- s27) s8)))
(assert (>= 0 (+ (- l0) l28 (- s28) s8)))
(assert (>= 0 (+ (- l0) l20 (- s29) s8)))
(assert (>= 0 (+ (- l0) l20 (- s30) s8)))
(assert (>= 0 (+ (- l0) l21 (- s31) s8)))
(assert (>= 0 (+ (- l0) l21 (- s32) s8)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) l3 l8 s8 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= s5 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= l3 0))
(assert (>= l6 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l13 0))
(assert (>= l16 0))
(assert (>= l19 0))
(assert (>= l22 0))
(assert (>= l23 0))
(assert (>= l1 0))
(assert (>= l24 0))
(assert (>= l25 0))
(assert (>= l26 0))
(assert (>= l2 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= l29 0))
(assert (>= s11 0))
(assert (>= l15 0))
(assert (>= s12 0))
(assert (>= l14 0))
(assert (>= s13 0))
(assert (>= l32 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= l11 0))
(assert (>= s16 0))
(assert (>= l12 0))
(assert (>= s17 0))
(assert (>= l17 0))
(assert (>= s18 0))
(assert (>= l4 0))
(assert (>= s19 0))
(assert (>= l5 0))
(assert (>= s20 0))
(assert (>= l18 0))
(assert (>= s21 0))
(assert (>= s22 0))
(assert (>= s23 0))
(assert (>= l31 0))
(assert (>= s24 0))
(assert (>= l30 0))
(assert (>= s25 0))
(assert (>= s26 0))
(assert (>= s27 0))
(assert (>= l27 0))
(assert (>= s28 0))
(assert (>= l28 0))
(assert (>= s29 0))
(assert (>= s30 0))
(assert (>= l20 0))
(assert (>= s31 0))
(assert (>= s32 0))
(assert (>= s8 0))
(assert (>= l21 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun l31 () Real
    0.0)
  (define-fun l32 () Real
    0.0)
  (define-fun l18 () Real
    0.0)
  (define-fun s21 () Real
    1.0)
  (define-fun s25 () Real
    1.0)
  (define-fun s8 () Real
    1.0)
  (define-fun s11 () Real
    1.0)
  (define-fun l14 () Real
    0.0)
  (define-fun s32 () Real
    1.0)
  (define-fun l9 () Real
    0.0)
  (define-fun s2 () Real
    2.0)
  (define-fun s13 () Real
    1.0)
  (define-fun l10 () Real
    0.0)
  (define-fun s31 () Real
    1.0)
  (define-fun l29 () Real
    0.0)
  (define-fun s30 () Real
    1.0)
  (define-fun l1 () Real
    0.0)
  (define-fun s22 () Real
    1.0)
  (define-fun s9 () Real
    0.0)
  (define-fun s29 () Real
    1.0)
  (define-fun l6 () Real
    0.0)
  (define-fun l12 () Real
    0.0)
  (define-fun l23 () Real
    0.0)
  (define-fun s0 () Real
    2.0)
  (define-fun l30 () Real
    0.0)
  (define-fun l27 () Real
    0.0)
  (define-fun s27 () Real
    1.0)
  (define-fun s28 () Real
    1.0)
  (define-fun l21 () Real
    0.0)
  (define-fun s5 () Real
    1.0)
  (define-fun s14 () Real
    1.0)
  (define-fun l20 () Real
    0.0)
  (define-fun s7 () Real
    1.0)
  (define-fun l5 () Real
    0.0)
  (define-fun l4 () Real
    1.0)
  (define-fun l28 () Real
    0.0)
  (define-fun l24 () Real
    0.0)
  (define-fun s18 () Real
    2.0)
  (define-fun l13 () Real
    0.0)
  (define-fun s12 () Real
    1.0)
  (define-fun l22 () Real
    0.0)
  (define-fun l25 () Real
    0.0)
  (define-fun l11 () Real
    0.0)
  (define-fun s19 () Real
    1.0)
  (define-fun s10 () Real
    1.0)
  (define-fun l7 () Real
    1.0)
  (define-fun s23 () Real
    1.0)
  (define-fun s24 () Real
    1.0)
  (define-fun s15 () Real
    1.0)
  (define-fun s17 () Real
    1.0)
  (define-fun s16 () Real
    1.0)
  (define-fun l2 () Real
    0.0)
  (define-fun s6 () Real
    1.0)
  (define-fun l0 () Real
    0.0)
  (define-fun l15 () Real
    0.0)
  (define-fun s20 () Real
    1.0)
  (define-fun l17 () Real
    0.0)
  (define-fun l26 () Real
    0.0)
  (define-fun s3 () Real
    1.0)
  (define-fun s1 () Real
    2.0)
  (define-fun l16 () Real
    0.0)
  (define-fun s26 () Real
    1.0)
  (define-fun l19 () Real
    0.0)
  (define-fun l8 () Real
    1.0)
  (define-fun s4 () Real
    1.0)
  (define-fun l3 () Real
    1.0)
)
- sat, getting model A' for C'
assignment('l31', 0.0).
assignment('l32', 0.0).
assignment('l18', 0.0).
assignment('s21', 1.0).
assignment('s25', 1.0).
assignment('s8', 1.0).
assignment('s11', 1.0).
assignment('l14', 0.0).
assignment('s32', 1.0).
assignment('l9', 0.0).
assignment('s2', 2.0).
assignment('s13', 1.0).
assignment('l10', 0.0).
assignment('s31', 1.0).
assignment('l29', 0.0).
assignment('s30', 1.0).
assignment('l1', 0.0).
assignment('s22', 1.0).
assignment('s9', 0.0).
assignment('s29', 1.0).
assignment('l6', 0.0).
assignment('l12', 0.0).
assignment('l23', 0.0).
assignment('s0', 2.0).
assignment('l30', 0.0).
assignment('l27', 0.0).
assignment('s27', 1.0).
assignment('s28', 1.0).
assignment('l21', 0.0).
assignment('s5', 1.0).
assignment('s14', 1.0).
assignment('l20', 0.0).
assignment('s7', 1.0).
assignment('l5', 0.0).
assignment('l4', 1.0).
assignment('l28', 0.0).
assignment('l24', 0.0).
assignment('s18', 2.0).
assignment('l13', 0.0).
assignment('s12', 1.0).
assignment('l22', 0.0).
assignment('l25', 0.0).
assignment('l11', 0.0).
assignment('s19', 1.0).
assignment('s10', 1.0).
assignment('l7', 1.0).
assignment('s23', 1.0).
assignment('s24', 1.0).
assignment('s15', 1.0).
assignment('s17', 1.0).
assignment('s16', 1.0).
assignment('l2', 0.0).
assignment('s6', 1.0).
assignment('l0', 0.0).
assignment('l15', 0.0).
assignment('s20', 1.0).
assignment('l17', 0.0).
assignment('l26', 0.0).
assignment('s3', 1.0).
assignment('s1', 2.0).
assignment('l16', 0.0).
assignment('s26', 1.0).
assignment('l19', 0.0).
assignment('l8', 1.0).
assignment('s4', 1.0).
assignment('l3', 1.0).
- constructing invariant I for petri net N and model A'
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) (* 2.0 s2) s3 s4 s5 s6 s7 l3 l7 l8 s10 s11 s12 s13 s14 s15 s16 s17 (* 2.0 s18) l4 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s8)))

* Invariant I for the petri net:
(assert (>= 2.0 (+ (* 2.0 s0) (* 2.0 s1) (* 2.0 s2) s3 s4 s5 s6 s7 l3 l7 l8 s10 s11 s12 s13 s14 s15 s16 s17 (* 2.0 s18) l4 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s8)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


