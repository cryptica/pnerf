PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/keycard.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(l11, [t13], [t16,t15]).
place(l8, [t18,t11], [t12]).
place(l15, [t20,t5], [t23]).
place(l3, [t23], [t7,t6]).
place(l16, [t9], [t24]).
place(l17, [t14], [t25]).
place(l4, [t26], [t8]).
place(l10, [t27], [t14]).
place(l19, [t10], [t28]).
place(l14, [t31], [t22,t21,t20]).
place(l24, [t28], [t36,t35,t34]).
place(l23, [t38,t16], [t33]).
place(l28, [t33,t7], [t40]).
place(l26, [t40], [t39,t38]).
place(l20, [t42], [t30,t29]).
place(l22, [t43,t15], [t32]).
place(l21, [t46], [t31]).
place(l30, [t49], [t42]).
place(l36, [t34], [t51]).
place(l38, [t41,t2], [t53]).
place(l32, [t53], [t45,t44]).
place(l39, [t45,t12], [t54]).
place(l13, [t54], [t19,t18]).
place(l40, [t30], [t55]).
place(l31, [t55], [t43]).
place(l41, [t35,t3], [t56]).
place(l42, [t22], [t57]).
place(l2, [t59,t6], [t5]).
place(l9, [t60,t32], [t13]).
place(l44, [t37], [t61,t60,t59]).
place(l34, [t61,t29], [t47]).
place(l45, [t56], [t62]).
place(l1, [t62], [t4,t3,t2]).
place(l46, [t1], [t63]).
place(l6, [t63], [t10]).
place(l47, [t25], [t64]).
place(l27, [t64], []).
place(l29, [t65,t44], [t41]).
place(l48, [t51], [t66,t65]).
place(l43, [t67], [t58]).
place(l50, [t39,t24], [t68]).
place(l5, [t68], [t9]).
place(l12, [t69,t48], [t17]).
place(l25, [t70,t47], [t37]).
place(l33, [t71,t21], [t46]).
place(l37, [t72], [t52]).
place(l52, [t17,t4], [t73]).
place(l51, [t73,t57], [t72,t71,t70,t69]).
place(l53, [t50], [t74]).
place(l18, [t74,t8], [t27,t26]).
place(l54, [t58,t19], [t75]).
place(l49, [t75], [t67]).
place(l55, [t36], [t76]).
place(l35, [t76,t52], [t50,t49,t48]).
place(l56, [t66], [t77]).
place(s1, [t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2,t1], [t77,t76,t75,t74,t73,t72,t71,t70,t69,t68,t67,t66,t65,t64,t63,t62,t61,t60,t59,t58,t57,t56,t55,t54,t53,t52,t51,t50,t49,t48,t47,t46,t45,t44,t43,t42,t41,t40,t39,t38,t37,t36,t35,t34,t33,t32,t31,t30,t29,t28,t27,t26,t25,t24,t23,t22,t21,t20,t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6,t5,t4,t3,t2]).
place(l7, [t77], [t11]).
place(l0, [init1], [t1]).

transition(t1, [l0,s0], [s1,l46]).
transition(t2, [l1,s1], [s1,l38]).
transition(t3, [l1,s1], [s1,l41]).
transition(t4, [l1,s1], [s1,l52]).
transition(t5, [l2,s1], [s1,l15]).
transition(t6, [l3,s1], [s1,l2]).
transition(t7, [l3,s1], [s1,l28]).
transition(t8, [l4,s1], [s1,l18]).
transition(t9, [l5,s1], [s1,l16]).
transition(t10, [l6,s1], [s1,l19]).
transition(t11, [l7,s1], [s1,l8]).
transition(t12, [l8,s1], [s1,l39]).
transition(t13, [l9,s1], [s1,l11]).
transition(t14, [l10,s1], [s1,l17]).
transition(t15, [l11,s1], [s1,l22]).
transition(t16, [l11,s1], [s1,l23]).
transition(t17, [l12,s1], [s1,l52]).
transition(t18, [l13,s1], [s1,l8]).
transition(t19, [l13,s1], [s1,l54]).
transition(t20, [l14,s1], [s1,l15]).
transition(t21, [l14,s1], [s1,l33]).
transition(t22, [l14,s1], [s1,l42]).
transition(t23, [l15,s1], [s1,l3]).
transition(t24, [l16,s1], [s1,l50]).
transition(t25, [l17,s1], [s1,l47]).
transition(t26, [l18,s1], [s1,l4]).
transition(t27, [l18,s1], [s1,l10]).
transition(t28, [l19,s1], [s1,l24]).
transition(t29, [l20,s1], [s1,l34]).
transition(t30, [l20,s1], [s1,l40]).
transition(t31, [l21,s1], [s1,l14]).
transition(t32, [l22,s1], [s1,l9]).
transition(t33, [l23,s1], [s1,l28]).
transition(t34, [l24,s1], [s1,l36]).
transition(t35, [l24,s1], [s1,l41]).
transition(t36, [l24,s1], [s1,l55]).
transition(t37, [l25,s1], [s1,l44]).
transition(t38, [l26,s1], [s1,l23]).
transition(t39, [l26,s1], [s1,l50]).
transition(t40, [l28,s1], [s1,l26]).
transition(t41, [l29,s1], [s1,l38]).
transition(t42, [l30,s1], [s1,l20]).
transition(t43, [l31,s1], [s1,l22]).
transition(t44, [l32,s1], [s1,l29]).
transition(t45, [l32,s1], [s1,l39]).
transition(t46, [l33,s1], [s1,l21]).
transition(t47, [l34,s1], [s1,l25]).
transition(t48, [l35,s1], [s1,l12]).
transition(t49, [l35,s1], [s1,l30]).
transition(t50, [l35,s1], [s1,l53]).
transition(t51, [l36,s1], [s1,l48]).
transition(t52, [l37,s1], [s1,l35]).
transition(t53, [l38,s1], [s1,l32]).
transition(t54, [l39,s1], [s1,l13]).
transition(t55, [l40,s1], [s1,l31]).
transition(t56, [l41,s1], [s1,l45]).
transition(t57, [l42,s1], [s1,l51]).
transition(t58, [l43,s1], [s1,l54]).
transition(t59, [l44,s1], [s1,l2]).
transition(t60, [l44,s1], [s1,l9]).
transition(t61, [l44,s1], [s1,l34]).
transition(t62, [l45,s1], [s1,l1]).
transition(t63, [l46,s1], [s1,l6]).
transition(t64, [l47,s1], [s1,l27]).
transition(t65, [l48,s1], [s1,l29]).
transition(t66, [l48,s1], [s1,l56]).
transition(t67, [l49,s1], [s1,l43]).
transition(t68, [l50,s1], [s1,l5]).
transition(t69, [l51,s1], [s1,l12]).
transition(t70, [l51,s1], [s1,l25]).
transition(t71, [l51,s1], [s1,l33]).
transition(t72, [l51,s1], [s1,l37]).
transition(t73, [l52,s1], [s1,l51]).
transition(t74, [l53,s1], [s1,l18]).
transition(t75, [l54,s1], [s1,l49]).
transition(t76, [l55,s1], [s1,l35]).
transition(t77, [l56,s1], [s1,l7]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s1, 1).
weight(t1, l46, 1).
weight(l1, t2, 1).
weight(s1, t2, 1).
weight(t2, s1, 1).
weight(t2, l38, 1).
weight(l1, t3, 1).
weight(s1, t3, 1).
weight(t3, s1, 1).
weight(t3, l41, 1).
weight(l1, t4, 1).
weight(s1, t4, 1).
weight(t4, s1, 1).
weight(t4, l52, 1).
weight(l2, t5, 1).
weight(s1, t5, 1).
weight(t5, s1, 1).
weight(t5, l15, 1).
weight(l3, t6, 1).
weight(s1, t6, 1).
weight(t6, s1, 1).
weight(t6, l2, 1).
weight(l3, t7, 1).
weight(s1, t7, 1).
weight(t7, s1, 1).
weight(t7, l28, 1).
weight(l4, t8, 1).
weight(s1, t8, 1).
weight(t8, s1, 1).
weight(t8, l18, 1).
weight(l5, t9, 1).
weight(s1, t9, 1).
weight(t9, s1, 1).
weight(t9, l16, 1).
weight(l6, t10, 1).
weight(s1, t10, 1).
weight(t10, s1, 1).
weight(t10, l19, 1).
weight(l7, t11, 1).
weight(s1, t11, 1).
weight(t11, s1, 1).
weight(t11, l8, 1).
weight(l8, t12, 1).
weight(s1, t12, 1).
weight(t12, s1, 1).
weight(t12, l39, 1).
weight(l9, t13, 1).
weight(s1, t13, 1).
weight(t13, s1, 1).
weight(t13, l11, 1).
weight(l10, t14, 1).
weight(s1, t14, 1).
weight(t14, s1, 1).
weight(t14, l17, 1).
weight(l11, t15, 1).
weight(s1, t15, 1).
weight(t15, s1, 1).
weight(t15, l22, 1).
weight(l11, t16, 1).
weight(s1, t16, 1).
weight(t16, s1, 1).
weight(t16, l23, 1).
weight(l12, t17, 1).
weight(s1, t17, 1).
weight(t17, s1, 1).
weight(t17, l52, 1).
weight(l13, t18, 1).
weight(s1, t18, 1).
weight(t18, s1, 1).
weight(t18, l8, 1).
weight(l13, t19, 1).
weight(s1, t19, 1).
weight(t19, s1, 1).
weight(t19, l54, 1).
weight(l14, t20, 1).
weight(s1, t20, 1).
weight(t20, s1, 1).
weight(t20, l15, 1).
weight(l14, t21, 1).
weight(s1, t21, 1).
weight(t21, s1, 1).
weight(t21, l33, 1).
weight(l14, t22, 1).
weight(s1, t22, 1).
weight(t22, s1, 1).
weight(t22, l42, 1).
weight(l15, t23, 1).
weight(s1, t23, 1).
weight(t23, s1, 1).
weight(t23, l3, 1).
weight(l16, t24, 1).
weight(s1, t24, 1).
weight(t24, s1, 1).
weight(t24, l50, 1).
weight(l17, t25, 1).
weight(s1, t25, 1).
weight(t25, s1, 1).
weight(t25, l47, 1).
weight(l18, t26, 1).
weight(s1, t26, 1).
weight(t26, s1, 1).
weight(t26, l4, 1).
weight(l18, t27, 1).
weight(s1, t27, 1).
weight(t27, s1, 1).
weight(t27, l10, 1).
weight(l19, t28, 1).
weight(s1, t28, 1).
weight(t28, s1, 1).
weight(t28, l24, 1).
weight(l20, t29, 1).
weight(s1, t29, 1).
weight(t29, s1, 1).
weight(t29, l34, 1).
weight(l20, t30, 1).
weight(s1, t30, 1).
weight(t30, s1, 1).
weight(t30, l40, 1).
weight(l21, t31, 1).
weight(s1, t31, 1).
weight(t31, s1, 1).
weight(t31, l14, 1).
weight(l22, t32, 1).
weight(s1, t32, 1).
weight(t32, s1, 1).
weight(t32, l9, 1).
weight(l23, t33, 1).
weight(s1, t33, 1).
weight(t33, s1, 1).
weight(t33, l28, 1).
weight(l24, t34, 1).
weight(s1, t34, 1).
weight(t34, s1, 1).
weight(t34, l36, 1).
weight(l24, t35, 1).
weight(s1, t35, 1).
weight(t35, s1, 1).
weight(t35, l41, 1).
weight(l24, t36, 1).
weight(s1, t36, 1).
weight(t36, s1, 1).
weight(t36, l55, 1).
weight(l25, t37, 1).
weight(s1, t37, 1).
weight(t37, s1, 1).
weight(t37, l44, 1).
weight(l26, t38, 1).
weight(s1, t38, 1).
weight(t38, s1, 1).
weight(t38, l23, 1).
weight(l26, t39, 1).
weight(s1, t39, 1).
weight(t39, s1, 1).
weight(t39, l50, 1).
weight(l28, t40, 1).
weight(s1, t40, 1).
weight(t40, s1, 1).
weight(t40, l26, 1).
weight(l29, t41, 1).
weight(s1, t41, 1).
weight(t41, s1, 1).
weight(t41, l38, 1).
weight(l30, t42, 1).
weight(s1, t42, 1).
weight(t42, s1, 1).
weight(t42, l20, 1).
weight(l31, t43, 1).
weight(s1, t43, 1).
weight(t43, s1, 1).
weight(t43, l22, 1).
weight(l32, t44, 1).
weight(s1, t44, 1).
weight(t44, s1, 1).
weight(t44, l29, 1).
weight(l32, t45, 1).
weight(s1, t45, 1).
weight(t45, s1, 1).
weight(t45, l39, 1).
weight(l33, t46, 1).
weight(s1, t46, 1).
weight(t46, s1, 1).
weight(t46, l21, 1).
weight(l34, t47, 1).
weight(s1, t47, 1).
weight(t47, s1, 1).
weight(t47, l25, 1).
weight(l35, t48, 1).
weight(s1, t48, 1).
weight(t48, s1, 1).
weight(t48, l12, 1).
weight(l35, t49, 1).
weight(s1, t49, 1).
weight(t49, s1, 1).
weight(t49, l30, 1).
weight(l35, t50, 1).
weight(s1, t50, 1).
weight(t50, s1, 1).
weight(t50, l53, 1).
weight(l36, t51, 1).
weight(s1, t51, 1).
weight(t51, s1, 1).
weight(t51, l48, 1).
weight(l37, t52, 1).
weight(s1, t52, 1).
weight(t52, s1, 1).
weight(t52, l35, 1).
weight(l38, t53, 1).
weight(s1, t53, 1).
weight(t53, s1, 1).
weight(t53, l32, 1).
weight(l39, t54, 1).
weight(s1, t54, 1).
weight(t54, s1, 1).
weight(t54, l13, 1).
weight(l40, t55, 1).
weight(s1, t55, 1).
weight(t55, s1, 1).
weight(t55, l31, 1).
weight(l41, t56, 1).
weight(s1, t56, 1).
weight(t56, s1, 1).
weight(t56, l45, 1).
weight(l42, t57, 1).
weight(s1, t57, 1).
weight(t57, s1, 1).
weight(t57, l51, 1).
weight(l43, t58, 1).
weight(s1, t58, 1).
weight(t58, s1, 1).
weight(t58, l54, 1).
weight(l44, t59, 1).
weight(s1, t59, 1).
weight(t59, s1, 1).
weight(t59, l2, 1).
weight(l44, t60, 1).
weight(s1, t60, 1).
weight(t60, s1, 1).
weight(t60, l9, 1).
weight(l44, t61, 1).
weight(s1, t61, 1).
weight(t61, s1, 1).
weight(t61, l34, 1).
weight(l45, t62, 1).
weight(s1, t62, 1).
weight(t62, s1, 1).
weight(t62, l1, 1).
weight(l46, t63, 1).
weight(s1, t63, 1).
weight(t63, s1, 1).
weight(t63, l6, 1).
weight(l47, t64, 1).
weight(s1, t64, 1).
weight(t64, s1, 1).
weight(t64, l27, 1).
weight(l48, t65, 1).
weight(s1, t65, 1).
weight(t65, s1, 1).
weight(t65, l29, 1).
weight(l48, t66, 1).
weight(s1, t66, 1).
weight(t66, s1, 1).
weight(t66, l56, 1).
weight(l49, t67, 1).
weight(s1, t67, 1).
weight(t67, s1, 1).
weight(t67, l43, 1).
weight(l50, t68, 1).
weight(s1, t68, 1).
weight(t68, s1, 1).
weight(t68, l5, 1).
weight(l51, t69, 1).
weight(s1, t69, 1).
weight(t69, s1, 1).
weight(t69, l12, 1).
weight(l51, t70, 1).
weight(s1, t70, 1).
weight(t70, s1, 1).
weight(t70, l25, 1).
weight(l51, t71, 1).
weight(s1, t71, 1).
weight(t71, s1, 1).
weight(t71, l33, 1).
weight(l51, t72, 1).
weight(s1, t72, 1).
weight(t72, s1, 1).
weight(t72, l37, 1).
weight(l52, t73, 1).
weight(s1, t73, 1).
weight(t73, s1, 1).
weight(t73, l51, 1).
weight(l53, t74, 1).
weight(s1, t74, 1).
weight(t74, s1, 1).
weight(t74, l18, 1).
weight(l54, t75, 1).
weight(s1, t75, 1).
weight(t75, s1, 1).
weight(t75, l49, 1).
weight(l55, t76, 1).
weight(s1, t76, 1).
weight(t76, s1, 1).
weight(t76, l35, 1).
weight(l56, t77, 1).
weight(s1, t77, 1).
weight(t77, s1, 1).
weight(t77, l7, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s1 1)').
cond('(>= l56 2)').

target(s1, 1).
target(l56, 2).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun l11 () Real)
(declare-fun l8 () Real)
(declare-fun l15 () Real)
(declare-fun l3 () Real)
(declare-fun l16 () Real)
(declare-fun l17 () Real)
(declare-fun l4 () Real)
(declare-fun l10 () Real)
(declare-fun l19 () Real)
(declare-fun l14 () Real)
(declare-fun l24 () Real)
(declare-fun l23 () Real)
(declare-fun l28 () Real)
(declare-fun l26 () Real)
(declare-fun l20 () Real)
(declare-fun l22 () Real)
(declare-fun l21 () Real)
(declare-fun l30 () Real)
(declare-fun l36 () Real)
(declare-fun l38 () Real)
(declare-fun l32 () Real)
(declare-fun l39 () Real)
(declare-fun l13 () Real)
(declare-fun l40 () Real)
(declare-fun l31 () Real)
(declare-fun l41 () Real)
(declare-fun l42 () Real)
(declare-fun l2 () Real)
(declare-fun l9 () Real)
(declare-fun l44 () Real)
(declare-fun l34 () Real)
(declare-fun l45 () Real)
(declare-fun l1 () Real)
(declare-fun l46 () Real)
(declare-fun l6 () Real)
(declare-fun l47 () Real)
(declare-fun l27 () Real)
(declare-fun l29 () Real)
(declare-fun l48 () Real)
(declare-fun l43 () Real)
(declare-fun l50 () Real)
(declare-fun l5 () Real)
(declare-fun l12 () Real)
(declare-fun l25 () Real)
(declare-fun l33 () Real)
(declare-fun l37 () Real)
(declare-fun l52 () Real)
(declare-fun l51 () Real)
(declare-fun l53 () Real)
(declare-fun l18 () Real)
(declare-fun l54 () Real)
(declare-fun l49 () Real)
(declare-fun l55 () Real)
(declare-fun l35 () Real)
(declare-fun l56 () Real)
(declare-fun s1 () Real)
(declare-fun l7 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l46 (- s0) s1)))
(assert (>= 0 (+ (- l1) l38)))
(assert (>= 0 (+ (- l1) l41)))
(assert (>= 0 (+ (- l1) l52)))
(assert (>= 0 (+ l15 (- l2))))
(assert (>= 0 (+ l2 (- l3))))
(assert (>= 0 (+ l28 (- l3))))
(assert (>= 0 (+ l18 (- l4))))
(assert (>= 0 (+ l16 (- l5))))
(assert (>= 0 (+ l19 (- l6))))
(assert (>= 0 (+ (- l7) l8)))
(assert (>= 0 (+ l39 (- l8))))
(assert (>= 0 (+ l11 (- l9))))
(assert (>= 0 (+ (- l10) l17)))
(assert (>= 0 (+ (- l11) l22)))
(assert (>= 0 (+ (- l11) l23)))
(assert (>= 0 (+ (- l12) l52)))
(assert (>= 0 (+ (- l13) l8)))
(assert (>= 0 (+ (- l13) l54)))
(assert (>= 0 (+ (- l14) l15)))
(assert (>= 0 (+ (- l14) l33)))
(assert (>= 0 (+ (- l14) l42)))
(assert (>= 0 (+ (- l15) l3)))
(assert (>= 0 (+ (- l16) l50)))
(assert (>= 0 (+ (- l17) l47)))
(assert (>= 0 (+ (- l18) l4)))
(assert (>= 0 (+ l10 (- l18))))
(assert (>= 0 (+ (- l19) l24)))
(assert (>= 0 (+ (- l20) l34)))
(assert (>= 0 (+ (- l20) l40)))
(assert (>= 0 (+ l14 (- l21))))
(assert (>= 0 (+ (- l22) l9)))
(assert (>= 0 (+ (- l23) l28)))
(assert (>= 0 (+ (- l24) l36)))
(assert (>= 0 (+ (- l24) l41)))
(assert (>= 0 (+ (- l24) l55)))
(assert (>= 0 (+ (- l25) l44)))
(assert (>= 0 (+ l23 (- l26))))
(assert (>= 0 (+ (- l26) l50)))
(assert (>= 0 (+ l26 (- l28))))
(assert (>= 0 (+ (- l29) l38)))
(assert (>= 0 (+ l20 (- l30))))
(assert (>= 0 (+ l22 (- l31))))
(assert (>= 0 (+ l29 (- l32))))
(assert (>= 0 (+ (- l32) l39)))
(assert (>= 0 (+ l21 (- l33))))
(assert (>= 0 (+ l25 (- l34))))
(assert (>= 0 (+ l12 (- l35))))
(assert (>= 0 (+ l30 (- l35))))
(assert (>= 0 (+ (- l35) l53)))
(assert (>= 0 (+ (- l36) l48)))
(assert (>= 0 (+ l35 (- l37))))
(assert (>= 0 (+ l32 (- l38))))
(assert (>= 0 (+ l13 (- l39))))
(assert (>= 0 (+ l31 (- l40))))
(assert (>= 0 (+ (- l41) l45)))
(assert (>= 0 (+ (- l42) l51)))
(assert (>= 0 (+ (- l43) l54)))
(assert (>= 0 (+ l2 (- l44))))
(assert (>= 0 (+ (- l44) l9)))
(assert (>= 0 (+ l34 (- l44))))
(assert (>= 0 (+ l1 (- l45))))
(assert (>= 0 (+ (- l46) l6)))
(assert (>= 0 (+ l27 (- l47))))
(assert (>= 0 (+ l29 (- l48))))
(assert (>= 0 (+ (- l48) l56)))
(assert (>= 0 (+ l43 (- l49))))
(assert (>= 0 (+ l5 (- l50))))
(assert (>= 0 (+ l12 (- l51))))
(assert (>= 0 (+ l25 (- l51))))
(assert (>= 0 (+ l33 (- l51))))
(assert (>= 0 (+ l37 (- l51))))
(assert (>= 0 (+ l51 (- l52))))
(assert (>= 0 (+ l18 (- l53))))
(assert (>= 0 (+ l49 (- l54))))
(assert (>= 0 (+ l35 (- l55))))
(assert (>= 0 (+ (- l56) l7)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) (* 2 l56) s1 (- l0))))
(assert (>= s0 0))
(assert (>= l11 0))
(assert (>= l8 0))
(assert (>= l15 0))
(assert (>= l3 0))
(assert (>= l16 0))
(assert (>= l17 0))
(assert (>= l4 0))
(assert (>= l10 0))
(assert (>= l19 0))
(assert (>= l14 0))
(assert (>= l24 0))
(assert (>= l23 0))
(assert (>= l28 0))
(assert (>= l26 0))
(assert (>= l20 0))
(assert (>= l22 0))
(assert (>= l21 0))
(assert (>= l30 0))
(assert (>= l36 0))
(assert (>= l38 0))
(assert (>= l32 0))
(assert (>= l39 0))
(assert (>= l13 0))
(assert (>= l40 0))
(assert (>= l31 0))
(assert (>= l41 0))
(assert (>= l42 0))
(assert (>= l2 0))
(assert (>= l9 0))
(assert (>= l44 0))
(assert (>= l34 0))
(assert (>= l45 0))
(assert (>= l1 0))
(assert (>= l46 0))
(assert (>= l6 0))
(assert (>= l47 0))
(assert (>= l27 0))
(assert (>= l29 0))
(assert (>= l48 0))
(assert (>= l43 0))
(assert (>= l50 0))
(assert (>= l5 0))
(assert (>= l12 0))
(assert (>= l25 0))
(assert (>= l33 0))
(assert (>= l37 0))
(assert (>= l52 0))
(assert (>= l51 0))
(assert (>= l53 0))
(assert (>= l18 0))
(assert (>= l54 0))
(assert (>= l49 0))
(assert (>= l55 0))
(assert (>= l35 0))
(assert (>= l56 0))
(assert (>= s1 0))
(assert (>= l7 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
sat
(model 
  (define-fun l31 () Real
    0.0)
  (define-fun l32 () Real
    0.0)
  (define-fun l18 () Real
    0.0)
  (define-fun l39 () Real
    0.0)
  (define-fun l47 () Real
    0.0)
  (define-fun l35 () Real
    0.0)
  (define-fun l14 () Real
    0.0)
  (define-fun l45 () Real
    0.0)
  (define-fun l9 () Real
    0.0)
  (define-fun l10 () Real
    0.0)
  (define-fun l29 () Real
    0.0)
  (define-fun l49 () Real
    0.0)
  (define-fun l1 () Real
    0.0)
  (define-fun l6 () Real
    1.0)
  (define-fun l52 () Real
    0.0)
  (define-fun l12 () Real
    0.0)
  (define-fun l23 () Real
    0.0)
  (define-fun s0 () Real
    1.0)
  (define-fun l30 () Real
    0.0)
  (define-fun l54 () Real
    0.0)
  (define-fun l50 () Real
    0.0)
  (define-fun l34 () Real
    0.0)
  (define-fun l21 () Real
    0.0)
  (define-fun l27 () Real
    0.0)
  (define-fun l37 () Real
    0.0)
  (define-fun l20 () Real
    0.0)
  (define-fun l5 () Real
    0.0)
  (define-fun l4 () Real
    0.0)
  (define-fun l51 () Real
    0.0)
  (define-fun l28 () Real
    0.0)
  (define-fun l24 () Real
    1.0)
  (define-fun l13 () Real
    0.0)
  (define-fun l41 () Real
    0.0)
  (define-fun l22 () Real
    0.0)
  (define-fun l42 () Real
    0.0)
  (define-fun l25 () Real
    0.0)
  (define-fun l48 () Real
    1.0)
  (define-fun l11 () Real
    0.0)
  (define-fun l53 () Real
    0.0)
  (define-fun l7 () Real
    0.0)
  (define-fun l56 () Real
    1.0)
  (define-fun l38 () Real
    0.0)
  (define-fun l46 () Real
    1.0)
  (define-fun l40 () Real
    0.0)
  (define-fun l43 () Real
    0.0)
  (define-fun l2 () Real
    0.0)
  (define-fun l0 () Real
    0.0)
  (define-fun l15 () Real
    0.0)
  (define-fun l33 () Real
    0.0)
  (define-fun l17 () Real
    0.0)
  (define-fun l36 () Real
    1.0)
  (define-fun l26 () Real
    0.0)
  (define-fun l55 () Real
    0.0)
  (define-fun s1 () Real
    0.0)
  (define-fun l16 () Real
    0.0)
  (define-fun l19 () Real
    1.0)
  (define-fun l8 () Real
    0.0)
  (define-fun l44 () Real
    0.0)
  (define-fun l3 () Real
    0.0)
)
- sat, getting model A' for C'
assignment('l31', 0.0).
assignment('l32', 0.0).
assignment('l18', 0.0).
assignment('l39', 0.0).
assignment('l47', 0.0).
assignment('l35', 0.0).
assignment('l14', 0.0).
assignment('l45', 0.0).
assignment('l9', 0.0).
assignment('l10', 0.0).
assignment('l29', 0.0).
assignment('l49', 0.0).
assignment('l1', 0.0).
assignment('l6', 1.0).
assignment('l52', 0.0).
assignment('l12', 0.0).
assignment('l23', 0.0).
assignment('s0', 1.0).
assignment('l30', 0.0).
assignment('l54', 0.0).
assignment('l50', 0.0).
assignment('l34', 0.0).
assignment('l21', 0.0).
assignment('l27', 0.0).
assignment('l37', 0.0).
assignment('l20', 0.0).
assignment('l5', 0.0).
assignment('l4', 0.0).
assignment('l51', 0.0).
assignment('l28', 0.0).
assignment('l24', 1.0).
assignment('l13', 0.0).
assignment('l41', 0.0).
assignment('l22', 0.0).
assignment('l42', 0.0).
assignment('l25', 0.0).
assignment('l48', 1.0).
assignment('l11', 0.0).
assignment('l53', 0.0).
assignment('l7', 0.0).
assignment('l56', 1.0).
assignment('l38', 0.0).
assignment('l46', 1.0).
assignment('l40', 0.0).
assignment('l43', 0.0).
assignment('l2', 0.0).
assignment('l0', 0.0).
assignment('l15', 0.0).
assignment('l33', 0.0).
assignment('l17', 0.0).
assignment('l36', 1.0).
assignment('l26', 0.0).
assignment('l55', 0.0).
assignment('s1', 0.0).
assignment('l16', 0.0).
assignment('l19', 1.0).
assignment('l8', 0.0).
assignment('l44', 0.0).
assignment('l3', 0.0).
- constructing invariant I for petri net N and model A'
(assert (>= 1.0 (+ s0 l19 l24 l36 l46 l6 l48 l56)))

* Invariant I for the petri net:
(assert (>= 1.0 (+ s0 l19 l24 l36 l46 l6 l48 l56)))

-------------------------------------------
The petri net satisfies the property!
-------------------------------------------


