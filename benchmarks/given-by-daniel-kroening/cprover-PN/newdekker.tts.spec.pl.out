PETRINIZER: The checker for Petri Nets
[-v benchmarks/given-by-daniel-kroening/cprover-PN/newdekker.tts.spec.pl]

* Constructing petri net N from input file
place(s0, [], [t1]).
place(s1, [t1], [t2]).
place(s2, [t2], [t3]).
place(s3, [t3], [t4]).
place(s4, [t4], [t5]).
place(l2, [t9,t6], [t8,t7]).
place(l3, [t7], [t10,t9]).
place(l4, [t10], [t11]).
place(l5, [t8], [t12]).
place(l1, [t12,t11,t1], [t6]).
place(l7, [t16,t13], [t15,t14]).
place(l8, [t14], [t17,t16]).
place(l9, [t17], [t18]).
place(l10, [t15], [t19]).
place(l6, [t19,t18,t2], [t13]).
place(s6, [t6], [t20]).
place(s7, [t13], [t21]).
place(s8, [t7], [t22]).
place(s9, [t22], [t23]).
place(s10, [t14], [t24]).
place(s11, [t24], [t25]).
place(s12, [t9], [t26]).
place(s13, [t26], [t27]).
place(s14, [t16], [t28]).
place(s15, [t28], [t29]).
place(s16, [t10], [t30]).
place(s17, [t30], [t31]).
place(s18, [t31], [t32]).
place(s19, [t17], [t33]).
place(s20, [t33], [t34]).
place(s21, [t34], [t35]).
place(s22, [t11], [t36]).
place(s23, [t36], [t37]).
place(s24, [t18], [t38]).
place(s25, [t38], [t39]).
place(s26, [t8], [t40]).
place(s27, [t40], [t41]).
place(s28, [t15], [t42]).
place(s29, [t42], [t43]).
place(l12, [t25,t20], [t44,t30,t24]).
place(s30, [t12], [t44]).
place(l11, [t44,t43,t30,t3], [t42,t20]).
place(s31, [t44], [t45]).
place(l14, [t23,t21], [t46,t33,t22]).
place(s32, [t19], [t46]).
place(l13, [t46,t41,t33,t4], [t40,t21]).
place(l16, [t45,t39,t32,t29], [t47,t38,t31,t28]).
place(s33, [t46], [t47]).
place(s5, [t47,t45,t43,t41,t39,t37,t35,t32,t29,t27,t25,t23,t21,t20,t5], [t19,t18,t17,t16,t15,t14,t13,t12,t11,t10,t9,t8,t7,t6]).
place(l15, [t47,t37,t35,t27,t5], [t45,t36,t34,t26]).
place(l0, [init1,t42,t40,t38,t36,t34,t31,t28,t26,t24,t22], [t43,t41,t39,t37,t35,t32,t29,t27,t25,t23,t5,t4,t3,t2,t1]).

transition(t1, [l0,s0], [s1,l1]).
transition(t2, [l0,s1], [s2,l6]).
transition(t3, [l0,s2], [s3,l11]).
transition(t4, [l0,s3], [s4,l13]).
transition(t5, [l0,s4], [s5,l15]).
transition(t6, [l1,s5], [s6,l2]).
transition(t7, [l2,s5], [s8,l3]).
transition(t8, [l2,s5], [s26,l5]).
transition(t9, [l3,s5], [s12,l2]).
transition(t10, [l3,s5], [s16,l4]).
transition(t11, [l4,s5], [s22,l1]).
transition(t12, [l5,s5], [s30,l1]).
transition(t13, [l6,s5], [s7,l7]).
transition(t14, [l7,s5], [s10,l8]).
transition(t15, [l7,s5], [s28,l10]).
transition(t16, [l8,s5], [s14,l7]).
transition(t17, [l8,s5], [s19,l9]).
transition(t18, [l9,s5], [s24,l6]).
transition(t19, [l10,s5], [s32,l6]).
transition(t20, [l11,s6], [s5,l12]).
transition(t21, [l13,s7], [s5,l14]).
transition(t22, [l14,s8], [s9,l0]).
transition(t23, [l0,s9], [s5,l14]).
transition(t24, [l12,s10], [s11,l0]).
transition(t25, [l0,s11], [s5,l12]).
transition(t26, [l15,s12], [s13,l0]).
transition(t27, [l0,s13], [s5,l15]).
transition(t28, [l16,s14], [s15,l0]).
transition(t29, [l0,s15], [s5,l16]).
transition(t30, [l12,s16], [s17,l11]).
transition(t31, [l16,s17], [s18,l0]).
transition(t32, [l0,s18], [s5,l16]).
transition(t33, [l14,s19], [s20,l13]).
transition(t34, [l15,s20], [s21,l0]).
transition(t35, [l0,s21], [s5,l15]).
transition(t36, [l15,s22], [s23,l0]).
transition(t37, [l0,s23], [s5,l15]).
transition(t38, [l16,s24], [s25,l0]).
transition(t39, [l0,s25], [s5,l16]).
transition(t40, [l13,s26], [s27,l0]).
transition(t41, [l0,s27], [s5,l13]).
transition(t42, [l11,s28], [s29,l0]).
transition(t43, [l0,s29], [s5,l11]).
transition(t44, [l12,s30], [s31,l11]).
transition(t45, [l15,s31], [s5,l16]).
transition(t46, [l14,s32], [s33,l13]).
transition(t47, [l16,s33], [s5,l15]).
transition(init1, [], [l0]).

weight(l0, t1, 1).
weight(s0, t1, 1).
weight(t1, s1, 1).
weight(t1, l1, 1).
weight(l0, t2, 1).
weight(s1, t2, 1).
weight(t2, s2, 1).
weight(t2, l6, 1).
weight(l0, t3, 1).
weight(s2, t3, 1).
weight(t3, s3, 1).
weight(t3, l11, 1).
weight(l0, t4, 1).
weight(s3, t4, 1).
weight(t4, s4, 1).
weight(t4, l13, 1).
weight(l0, t5, 1).
weight(s4, t5, 1).
weight(t5, s5, 1).
weight(t5, l15, 1).
weight(l1, t6, 1).
weight(s5, t6, 1).
weight(t6, s6, 1).
weight(t6, l2, 1).
weight(l2, t7, 1).
weight(s5, t7, 1).
weight(t7, s8, 1).
weight(t7, l3, 1).
weight(l2, t8, 1).
weight(s5, t8, 1).
weight(t8, s26, 1).
weight(t8, l5, 1).
weight(l3, t9, 1).
weight(s5, t9, 1).
weight(t9, s12, 1).
weight(t9, l2, 1).
weight(l3, t10, 1).
weight(s5, t10, 1).
weight(t10, s16, 1).
weight(t10, l4, 1).
weight(l4, t11, 1).
weight(s5, t11, 1).
weight(t11, s22, 1).
weight(t11, l1, 1).
weight(l5, t12, 1).
weight(s5, t12, 1).
weight(t12, s30, 1).
weight(t12, l1, 1).
weight(l6, t13, 1).
weight(s5, t13, 1).
weight(t13, s7, 1).
weight(t13, l7, 1).
weight(l7, t14, 1).
weight(s5, t14, 1).
weight(t14, s10, 1).
weight(t14, l8, 1).
weight(l7, t15, 1).
weight(s5, t15, 1).
weight(t15, s28, 1).
weight(t15, l10, 1).
weight(l8, t16, 1).
weight(s5, t16, 1).
weight(t16, s14, 1).
weight(t16, l7, 1).
weight(l8, t17, 1).
weight(s5, t17, 1).
weight(t17, s19, 1).
weight(t17, l9, 1).
weight(l9, t18, 1).
weight(s5, t18, 1).
weight(t18, s24, 1).
weight(t18, l6, 1).
weight(l10, t19, 1).
weight(s5, t19, 1).
weight(t19, s32, 1).
weight(t19, l6, 1).
weight(l11, t20, 1).
weight(s6, t20, 1).
weight(t20, s5, 1).
weight(t20, l12, 1).
weight(l13, t21, 1).
weight(s7, t21, 1).
weight(t21, s5, 1).
weight(t21, l14, 1).
weight(l14, t22, 1).
weight(s8, t22, 1).
weight(t22, s9, 1).
weight(t22, l0, 1).
weight(l0, t23, 1).
weight(s9, t23, 1).
weight(t23, s5, 1).
weight(t23, l14, 1).
weight(l12, t24, 1).
weight(s10, t24, 1).
weight(t24, s11, 1).
weight(t24, l0, 1).
weight(l0, t25, 1).
weight(s11, t25, 1).
weight(t25, s5, 1).
weight(t25, l12, 1).
weight(l15, t26, 1).
weight(s12, t26, 1).
weight(t26, s13, 1).
weight(t26, l0, 1).
weight(l0, t27, 1).
weight(s13, t27, 1).
weight(t27, s5, 1).
weight(t27, l15, 1).
weight(l16, t28, 1).
weight(s14, t28, 1).
weight(t28, s15, 1).
weight(t28, l0, 1).
weight(l0, t29, 1).
weight(s15, t29, 1).
weight(t29, s5, 1).
weight(t29, l16, 1).
weight(l12, t30, 1).
weight(s16, t30, 1).
weight(t30, s17, 1).
weight(t30, l11, 1).
weight(l16, t31, 1).
weight(s17, t31, 1).
weight(t31, s18, 1).
weight(t31, l0, 1).
weight(l0, t32, 1).
weight(s18, t32, 1).
weight(t32, s5, 1).
weight(t32, l16, 1).
weight(l14, t33, 1).
weight(s19, t33, 1).
weight(t33, s20, 1).
weight(t33, l13, 1).
weight(l15, t34, 1).
weight(s20, t34, 1).
weight(t34, s21, 1).
weight(t34, l0, 1).
weight(l0, t35, 1).
weight(s21, t35, 1).
weight(t35, s5, 1).
weight(t35, l15, 1).
weight(l15, t36, 1).
weight(s22, t36, 1).
weight(t36, s23, 1).
weight(t36, l0, 1).
weight(l0, t37, 1).
weight(s23, t37, 1).
weight(t37, s5, 1).
weight(t37, l15, 1).
weight(l16, t38, 1).
weight(s24, t38, 1).
weight(t38, s25, 1).
weight(t38, l0, 1).
weight(l0, t39, 1).
weight(s25, t39, 1).
weight(t39, s5, 1).
weight(t39, l16, 1).
weight(l13, t40, 1).
weight(s26, t40, 1).
weight(t40, s27, 1).
weight(t40, l0, 1).
weight(l0, t41, 1).
weight(s27, t41, 1).
weight(t41, s5, 1).
weight(t41, l13, 1).
weight(l11, t42, 1).
weight(s28, t42, 1).
weight(t42, s29, 1).
weight(t42, l0, 1).
weight(l0, t43, 1).
weight(s29, t43, 1).
weight(t43, s5, 1).
weight(t43, l11, 1).
weight(l12, t44, 1).
weight(s30, t44, 1).
weight(t44, s31, 1).
weight(t44, l11, 1).
weight(l15, t45, 1).
weight(s31, t45, 1).
weight(t45, s5, 1).
weight(t45, l16, 1).
weight(l14, t46, 1).
weight(s32, t46, 1).
weight(t46, s33, 1).
weight(t46, l13, 1).
weight(l16, t47, 1).
weight(s33, t47, 1).
weight(t47, s5, 1).
weight(t47, l15, 1).
weight(init1, l0, 1).

init(l0, 1).
init(s0, 1).

cond('(>= s5 1)').
cond('(>= l5 1)').
cond('(>= l10 1)').

target(s5, 1).
target(l5, 1).
target(l10, 1).


* Constructing constraints C' for petri net N
(declare-fun s0 () Real)
(declare-fun s1 () Real)
(declare-fun s2 () Real)
(declare-fun s3 () Real)
(declare-fun s4 () Real)
(declare-fun l2 () Real)
(declare-fun l3 () Real)
(declare-fun l4 () Real)
(declare-fun l5 () Real)
(declare-fun l1 () Real)
(declare-fun l7 () Real)
(declare-fun l8 () Real)
(declare-fun l9 () Real)
(declare-fun l10 () Real)
(declare-fun l6 () Real)
(declare-fun s6 () Real)
(declare-fun s7 () Real)
(declare-fun s8 () Real)
(declare-fun s9 () Real)
(declare-fun s10 () Real)
(declare-fun s11 () Real)
(declare-fun s12 () Real)
(declare-fun s13 () Real)
(declare-fun s14 () Real)
(declare-fun s15 () Real)
(declare-fun s16 () Real)
(declare-fun s17 () Real)
(declare-fun s18 () Real)
(declare-fun s19 () Real)
(declare-fun s20 () Real)
(declare-fun s21 () Real)
(declare-fun s22 () Real)
(declare-fun s23 () Real)
(declare-fun s24 () Real)
(declare-fun s25 () Real)
(declare-fun s26 () Real)
(declare-fun s27 () Real)
(declare-fun s28 () Real)
(declare-fun s29 () Real)
(declare-fun l12 () Real)
(declare-fun s30 () Real)
(declare-fun l11 () Real)
(declare-fun s31 () Real)
(declare-fun l14 () Real)
(declare-fun s32 () Real)
(declare-fun l13 () Real)
(declare-fun l16 () Real)
(declare-fun s33 () Real)
(declare-fun s5 () Real)
(declare-fun l15 () Real)
(declare-fun l0 () Real)
(assert (>= 0 (+ (- l0) l1 (- s0) s1)))
(assert (>= 0 (+ (- l0) l6 (- s1) s2)))
(assert (>= 0 (+ (- l0) l11 (- s2) s3)))
(assert (>= 0 (+ (- l0) l13 (- s3) s4)))
(assert (>= 0 (+ (- l0) l15 (- s4) s5)))
(assert (>= 0 (+ (- l1) l2 (- s5) s6)))
(assert (>= 0 (+ (- l2) l3 (- s5) s8)))
(assert (>= 0 (+ (- l2) l5 s26 (- s5))))
(assert (>= 0 (+ l2 (- l3) s12 (- s5))))
(assert (>= 0 (+ (- l3) l4 s16 (- s5))))
(assert (>= 0 (+ l1 (- l4) s22 (- s5))))
(assert (>= 0 (+ l1 (- l5) s30 (- s5))))
(assert (>= 0 (+ (- l6) l7 (- s5) s7)))
(assert (>= 0 (+ (- l7) l8 s10 (- s5))))
(assert (>= 0 (+ l10 (- l7) s28 (- s5))))
(assert (>= 0 (+ l7 (- l8) s14 (- s5))))
(assert (>= 0 (+ (- l8) l9 s19 (- s5))))
(assert (>= 0 (+ l6 (- l9) s24 (- s5))))
(assert (>= 0 (+ (- l10) l6 s32 (- s5))))
(assert (>= 0 (+ (- l11) l12 s5 (- s6))))
(assert (>= 0 (+ (- l13) l14 s5 (- s7))))
(assert (>= 0 (+ l0 (- l14) (- s8) s9)))
(assert (>= 0 (+ (- l0) l14 s5 (- s9))))
(assert (>= 0 (+ l0 (- l12) (- s10) s11)))
(assert (>= 0 (+ (- l0) l12 (- s11) s5)))
(assert (>= 0 (+ l0 (- l15) (- s12) s13)))
(assert (>= 0 (+ (- l0) l15 (- s13) s5)))
(assert (>= 0 (+ l0 (- l16) (- s14) s15)))
(assert (>= 0 (+ (- l0) l16 (- s15) s5)))
(assert (>= 0 (+ l11 (- l12) (- s16) s17)))
(assert (>= 0 (+ l0 (- l16) (- s17) s18)))
(assert (>= 0 (+ (- l0) l16 (- s18) s5)))
(assert (>= 0 (+ l13 (- l14) (- s19) s20)))
(assert (>= 0 (+ l0 (- l15) (- s20) s21)))
(assert (>= 0 (+ (- l0) l15 (- s21) s5)))
(assert (>= 0 (+ l0 (- l15) (- s22) s23)))
(assert (>= 0 (+ (- l0) l15 (- s23) s5)))
(assert (>= 0 (+ l0 (- l16) (- s24) s25)))
(assert (>= 0 (+ (- l0) l16 (- s25) s5)))
(assert (>= 0 (+ l0 (- l13) (- s26) s27)))
(assert (>= 0 (+ (- l0) l13 (- s27) s5)))
(assert (>= 0 (+ l0 (- l11) (- s28) s29)))
(assert (>= 0 (+ (- l0) l11 (- s29) s5)))
(assert (>= 0 (+ l11 (- l12) (- s30) s31)))
(assert (>= 0 (+ (- l15) l16 (- s31) s5)))
(assert (>= 0 (+ l13 (- l14) (- s32) s33)))
(assert (>= 0 (+ l15 (- l16) (- s33) s5)))
(assert (>= 0 (+ l0)))
(assert (= 1 (+ 0 (- s0) l5 l10 s5 (- l0))))
(assert (>= s0 0))
(assert (>= s1 0))
(assert (>= s2 0))
(assert (>= s3 0))
(assert (>= s4 0))
(assert (>= l2 0))
(assert (>= l3 0))
(assert (>= l4 0))
(assert (>= l5 0))
(assert (>= l1 0))
(assert (>= l7 0))
(assert (>= l8 0))
(assert (>= l9 0))
(assert (>= l10 0))
(assert (>= l6 0))
(assert (>= s6 0))
(assert (>= s7 0))
(assert (>= s8 0))
(assert (>= s9 0))
(assert (>= s10 0))
(assert (>= s11 0))
(assert (>= s12 0))
(assert (>= s13 0))
(assert (>= s14 0))
(assert (>= s15 0))
(assert (>= s16 0))
(assert (>= s17 0))
(assert (>= s18 0))
(assert (>= s19 0))
(assert (>= s20 0))
(assert (>= s21 0))
(assert (>= s22 0))
(assert (>= s23 0))
(assert (>= s24 0))
(assert (>= s25 0))
(assert (>= s26 0))
(assert (>= s27 0))
(assert (>= s28 0))
(assert (>= s29 0))
(assert (>= l12 0))
(assert (>= s30 0))
(assert (>= l11 0))
(assert (>= s31 0))
(assert (>= l14 0))
(assert (>= s32 0))
(assert (>= l13 0))
(assert (>= l16 0))
(assert (>= s33 0))
(assert (>= s5 0))
(assert (>= l15 0))
(assert (>= l0 0))
(check-sat)
(get-model)

* Checking SAT(C')
unsat
(error "line 153 column 10: model is not available")
 - unsat

-------------------------------------------
The petri net may not satisfy the property
-------------------------------------------


