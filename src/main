#!/bin/bash

# **********************************************************************
# Preamble

function absolute_path {
    (cd "$(dirname "$1")" && pwd)
}

function print_title {
    cat <<EOF
PETRINIZER: The checker for Petri Nets
[$1]
EOF
}

function print_usage {
    cat <<EOF

Usage: $0 [options] input_file
Option list:
 -h | --h | -help | --help    : Prints this help

EOF
}

function vecho {
    if [ -n "$verbose" ]; then
        echo "$1"
    fi
}


# **********************************************************************
# Entry point

print_title "$*"


# parse parameters
for a in $@; do
    case $a in
        -h | --h | -help | --help)
            print_usage
            exit 0
            ;;
        -v | --v)
            verbose=true
            ;;
        -*)
            echo 'ERROR: Unknown option '$a
            exit 2
            ;;
        *) input=$a ;;
    esac
done

if [ -z $input ]; then
    echo 'ERROR: No input file was given'
    exit 2
fi

if [ ! -e $input ]; then
    echo "ERROR: The file $input does not exist"
    exit 2
fi

sysdir=$(absolute_path $0)

set -e
set -o pipefail

vecho
vecho '* Constructing petri net N from input file'
if [ -z "$verbose" ]; then
    sicstus -l "$sysdir"/input-file-to-petri-net.pl -- `pwd`/$input 2>/dev/null >/tmp/pp-petri-net.pl
else
    sicstus -l "$sysdir"/input-file-to-petri-net.pl -- `pwd`/$input 2>/dev/null | tee /tmp/pp-petri-net.pl
fi

vecho
vecho '* Constructing constraint C_0 for petri net N'
if [ -z "$verbose" ]; then
    sicstus -l "$sysdir"/petri-net-to-constraints.pl -- /tmp/pp-petri-net.pl 2>/dev/null >/tmp/constraints-c.smt2
else
    sicstus -l "$sysdir"/petri-net-to-constraints.pl -- /tmp/pp-petri-net.pl 2>/dev/null | tee /tmp/constraints-c.smt2
fi
iter=0
vecho
vecho '* Checking SAT(C0)'
# if ! z3 -smt2 /tmp/constraints-c.smt2 | tee /tmp/model-a.smt2; then exit; fi
while
(
    if [ -z "$verbose" ]; then
        z3 -smt2 /tmp/constraints-c.smt2 >/tmp/model-a.smt2
    else
        z3 -smt2 /tmp/constraints-c.smt2 | tee /tmp/model-a.smt2
    fi
); do
    iter=$((iter+1))

    vecho
    vecho '* Constructing trap constraints C_theta for model A'
    vecho '- model A...'
    if [ -z "$verbose" ]; then
        cat /tmp/model-a.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh >/tmp/model-a.pl
    else
        cat /tmp/model-a.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh | tee /tmp/model-a.pl
    fi
    vecho '- constraints C_theta...'
    if [ -z "$verbose" ]; then
        sicstus -l "$sysdir"/trap-constraints.pl -- /tmp/pp-petri-net.pl /tmp/model-a.pl 2>/dev/null >/tmp/constraints-ctheta.smt2
    else
        sicstus -l "$sysdir"/trap-constraints.pl -- /tmp/pp-petri-net.pl /tmp/model-a.pl 2>/dev/null | tee /tmp/constraints-ctheta.smt2
    fi

    vecho
    vecho '* Checking SAT(C_theta)'
    if
        (
            if [ -z "$verbose" ]; then
                ! z3 -smt2 /tmp/constraints-ctheta.smt2 >/tmp/model-atheta.smt2
            else
                ! z3 -smt2 /tmp/constraints-ctheta.smt2 | tee /tmp/model-atheta.smt2
            fi
        ); then
        vecho
        vecho "* Constructing trap constraints C_theta' for model A"
        if [ -z "$verbose" ]; then
            sicstus -l "$sysdir"/subnet-trap-constraints.pl -- /tmp/pp-petri-net.pl /tmp/model-a.pl 2>/dev/null >/tmp/constraints-ctheta-prime.smt2
        else
            sicstus -l "$sysdir"/subnet-trap-constraints.pl -- /tmp/pp-petri-net.pl /tmp/model-a.pl 2>/dev/null | tee /tmp/constraints-ctheta-prime.smt2
        fi
        vecho
        vecho "* Checking SAT(C_theta')"
        if
          (
            if [ -z "$verbose" ]; then
                ! z3 -smt2 /tmp/constraints-ctheta-prime.smt2 >/tmp/model-atheta-prime.smt2
            else
                ! z3 -smt2 /tmp/constraints-ctheta-prime.smt2 | tee /tmp/model-atheta-prime.smt2
            fi
          ); then
            echo
            echo '-------------------------------------------'
            echo 'The petri net may not satisfy the property'
            echo '-------------------------------------------'
            echo
            exit 1
        else
            vecho
            echo "* Constructing constraints C_$iter for C_$((iter-1)) and A_theta'"
            vecho "- model A_theta'..."
            if [ -z "$verbose" ]; then
                cat /tmp/model-atheta-prime.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh >/tmp/model-atheta-prime.pl
            else
                cat /tmp/model-atheta-prime.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh | tee /tmp/model-atheta-prime.pl
            fi
            vecho "- constraint d'_$iter..."
            if [ -z "$verbose" ]; then
                sicstus -l "$sysdir"/delta-prime-constraint.pl -- /tmp/pp-petri-net.pl /tmp/model-atheta-prime.pl 2>/dev/null >/tmp/constraint-delta.smt2
            else
                sicstus -l "$sysdir"/delta-prime-constraint.pl -- /tmp/pp-petri-net.pl /tmp/model-atheta-prime.pl 2>/dev/null | tee /tmp/constraint-delta.smt2
            fi
        fi
    else
        vecho
        echo "* Constructing constraints C_$iter for C_$((iter-1)) and A_theta"
        vecho '- model A_theta...'
        if [ -z "$verbose" ]; then
            cat /tmp/model-atheta.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh >/tmp/model-atheta.pl
        else
            cat /tmp/model-atheta.smt2 | "$sysdir"/smt2-model-to-prolog-model.sh | tee /tmp/model-atheta.pl
        fi
        vecho "- constraint d_$iter..."
        if [ -z "$verbose" ]; then
            sicstus -l "$sysdir"/delta-constraint.pl -- /tmp/model-atheta.pl 2>/dev/null >/tmp/constraint-delta.smt2
        else
            sicstus -l "$sysdir"/delta-constraint.pl -- /tmp/model-atheta.pl 2>/dev/null | tee /tmp/constraint-delta.smt2
        fi
    fi

    vecho "- constraints c_$iter..."
    if [ -z "$verbose" ]; then    
        "$sysdir"/succ-constraints.sh /tmp/constraints-c.smt2 /tmp/constraint-delta.smt2 >/tmp/constraints-cn.smt2
    else
        "$sysdir"/succ-constraints.sh /tmp/constraints-c.smt2 /tmp/constraint-delta.smt2 | tee /tmp/constraints-cn.smt2
    fi
    mv /tmp/constraints-cn.smt2 /tmp/constraints-c.smt2
done

echo
echo '-------------------------------------------'
echo 'The petri net satisfies the property!'
echo '-------------------------------------------'
echo

set +o pipefail
set +e
